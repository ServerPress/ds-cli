--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns the standard JSON representation of the source map.
- !ruby/struct:SM::Flow::P 
  body: If the `:css_uri` option isn't specified, the `:css_path` and `:sourcemap_path` options must both be specified. Any options may also be specified alongside the `:css_uri` option. If `:css_uri` isn't specified, it will be inferred from `:css_path` and `:sourcemap_path` using the assumption that the local file system has the same layout as the server.
- !ruby/struct:SM::Flow::P 
  body: Regardless of which options are passed to this method, source stylesheets that are imported using a non-default importer will only be linked to in the source map if their importers implement \{Sass::Importers::Base#public_url\}.
- !ruby/struct:SM::Flow::P 
  body: "@option options :css_uri [String]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The publicly-visible URI of the CSS output file.\n"
- !ruby/struct:SM::Flow::P 
  body: "@option options :css_path [String]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The local path of the CSS output file.\n"
- !ruby/struct:SM::Flow::P 
  body: "@option options :sourcemap_path [String]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The (eventual) local path of the sourcemap file.\n"
- !ruby/struct:SM::Flow::P 
  body: "@option options :type [Symbol]"
- !ruby/struct:SM::Flow::VERB 
  body: "  `:auto` (default),  `:file`, or `:inline`.\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [String] The JSON string. @raise [ArgumentError] If neither `:css_uri` nor `:css_path` and"
- !ruby/struct:SM::Flow::VERB 
  body: "  `:sourcemap_path` are specified.\n"
- !ruby/struct:SM::Flow::P 
  body: "@comment"
- !ruby/struct:SM::Flow::VERB 
  body: "  rubocop:disable MethodLength\n"
full_name: Sass::Source::Map#to_json
is_singleton: false
name: to_json
params: (options)
visibility: public
