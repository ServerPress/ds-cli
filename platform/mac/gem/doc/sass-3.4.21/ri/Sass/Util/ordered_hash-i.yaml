--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Converts a hash or a list of pairs into an order-preserving hash.
- !ruby/struct:SM::Flow::P 
  body: On Ruby 1.8.7, this uses the orderedhash gem to simulate an order-preserving hash. On Ruby 1.9 and up, it just uses the native Hash class, since that preserves the order itself.
- !ruby/struct:SM::Flow::P 
  body: "@overload ordered_hash(hash)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param hash [Hash] a normal hash to convert to an ordered hash\n  @return [Hash]\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload ordered_hash(*pairs)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @example\n    ordered_hash([:foo, &quot;bar&quot;], [:baz, &quot;bang&quot;])\n      #=&gt; {:foo =&gt; &quot;bar&quot;, :baz =&gt; &quot;bang&quot;}\n    ordered_hash #=&gt; {}\n  @param pairs [Array&lt;(Object, Object)&gt;] the list of key/value pairs for\n    the hash.\n  @return [Hash]\n"
full_name: Sass::Util#ordered_hash
is_singleton: false
name: ordered_hash
params: (*pairs_or_hash)
visibility: public
