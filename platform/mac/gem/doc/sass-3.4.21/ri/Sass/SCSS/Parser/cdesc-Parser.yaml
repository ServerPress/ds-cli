--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Expose for the SASS parser.
  name: offset
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "@private"
  name: sass_script_parser
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: The parser for SCSS. It parses a string of code into a tree of {Sass::Tree::Node}s.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: DIRECTIVES
  value: Set[:mixin, :include, :function, :return, :debug, :warn, :for,         :each, :while, :if, :else, :extend, :import, :media, :charset, :content,         :_moz_document, :at_root, :error]
- !ruby/object:RI::Constant 
  comment: 
  name: PREFIXED_DIRECTIVES
  value: Set[:supports]
- !ruby/object:RI::Constant 
  comment: 
  name: EXPR_NAMES
  value: "{         :media_query => \"media query (e.g. print, screen, print and screen)\",         :media_query_list => \"media query (e.g. print, screen, print and screen)\",         :media_expr => \"media expression (e.g. (min-device-width: 800px))\",         :at_root_query => \"@at-root query (e.g. (without: media))\",         :at_root_directive_list => '* or identifier',         :pseudo_args => \"expression (e.g. fr, 2n+1)\",         :interp_ident => \"identifier\",         :qualified_name => \"identifier\",         :expr => \"expression (e.g. 1px, bold)\",         :selector_comma_sequence => \"selector\",         :string => \"string\",         :import_arg => \"file to import (string or url())\",         :moz_document_function => \"matching function (e.g. url-prefix(), domain())\",         :supports_condition => \"@supports condition (e.g. (display: flexbox))\",         :supports_condition_in_parens => \"@supports condition (e.g. (display: flexbox))\",         :a_n_plus_b => \"An+B expression\",         :keyframes_selector_component => \"from, to, or a percentage\",         :keyframes_selector => \"keyframes selector (e.g. 10%)\""
- !ruby/object:RI::Constant 
  comment: 
  name: TOK_NAMES
  value: Sass::Util.to_hash(Sass::SCSS::RX.constants.map do |c|         [Sass::SCSS::RX.const_get(c), c.downcase]
full_name: Sass::SCSS::Parser
includes: 
- !ruby/object:RI::IncludedModule 
  name: Sass::SCSS::RX
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: parse
- !ruby/object:RI::MethodSummary 
  name: parse_at_root_query
- !ruby/object:RI::MethodSummary 
  name: parse_interp_ident
- !ruby/object:RI::MethodSummary 
  name: parse_media_query_list
- !ruby/object:RI::MethodSummary 
  name: parse_supports_clause
- !ruby/object:RI::MethodSummary 
  name: parse_supports_condition
name: Parser
superclass: Object
