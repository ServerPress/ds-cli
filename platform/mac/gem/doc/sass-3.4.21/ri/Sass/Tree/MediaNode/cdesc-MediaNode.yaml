--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The media query for this rule, interspersed with {Sass::Script::Tree::Node}s representing `#{}`-interpolation. Any adjacent strings will be merged together.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Array&lt;String, Sass::Script::Tree::Node&gt;]"
  name: query
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The media query for this rule, without any unresolved interpolation. It's only set once {Tree::Visitors::Perform} has been run.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Sass::Media::QueryList]"
  name: resolved_query
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A static node representing a `@media` rule. `@media` rules behave differently from other directives in that when they're nested within rules, they bubble up to top-level.
- !ruby/struct:SM::Flow::P 
  body: "@see Sass::Tree"
constants: []

full_name: Sass::Tree::MediaNode
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: invisible?
- !ruby/object:RI::MethodSummary 
  name: name
- !ruby/object:RI::MethodSummary 
  name: resolved_value
- !ruby/object:RI::MethodSummary 
  name: value
name: MediaNode
superclass: DirectiveNode
