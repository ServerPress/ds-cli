--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The arguments to the mixin. @return [Array&lt;Script::Tree::Node&gt;]
  name: args
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: A hash from keyword argument names to values. @return [Sass::Util::NormalizedMap&lt;Script::Tree::Node&gt;]
  name: keywords
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The second splat argument for this mixin, if one exists.
  - !ruby/struct:SM::Flow::P 
    body: If this exists, it's always a map of keyword arguments, and \{#splat} is always either a list or an arglist.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Node?]"
  name: kwarg_splat
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The name of the mixin. @return [String]
  name: name
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The first splat argument for this mixin, if one exists.
  - !ruby/struct:SM::Flow::P 
    body: This could be a list of positional arguments, a map of keyword arguments, or an arglist containing both.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Node?]"
  name: splat
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A static node representing a mixin include. When in a static tree, the sole purpose is to wrap exceptions to add the mixin to the backtrace.
- !ruby/struct:SM::Flow::P 
  body: "@see Sass::Tree"
constants: []

full_name: Sass::Tree::MixinNode
includes: []

instance_methods: []

name: MixinNode
superclass: Node
