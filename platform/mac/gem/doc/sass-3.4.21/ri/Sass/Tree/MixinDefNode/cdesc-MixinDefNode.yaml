--- !ruby/object:RI::ClassDescription 
attributes: 
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The arguments for the mixin. Each element is a tuple containing the variable for argument and the parse tree for the default value of the argument.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Array&lt;(Script::Tree::Node, Script::Tree::Node)&gt;]"
  name: args
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: Whether the mixin uses `@content`. Set during the nesting check phase. @return [Boolean]
  name: has_content
  rw: RW
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The mixin name. @return [String]
  name: name
  rw: R
- !ruby/object:RI::Attribute 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: The splat argument for this mixin, if one exists.
  - !ruby/struct:SM::Flow::P 
    body: "@return [Script::Tree::Node?]"
  name: splat
  rw: RW
class_methods: 
- !ruby/object:RI::MethodSummary 
  name: new
comment: 
- !ruby/struct:SM::Flow::P 
  body: A dynamic node representing a mixin definition.
- !ruby/struct:SM::Flow::P 
  body: "@see Sass::Tree"
constants: []

full_name: Sass::Tree::MixinDefNode
includes: []

instance_methods: []

name: MixinDefNode
superclass: Node
