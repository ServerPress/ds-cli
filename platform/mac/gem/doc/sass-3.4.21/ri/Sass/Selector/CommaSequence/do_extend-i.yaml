--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Non-destrucively extends this selector with the extensions specified in a hash (which should come from {Sass::Tree::Visitors::Cssize}).
- !ruby/struct:SM::Flow::P 
  body: "@todo Link this to the reference documentation on `@extend`"
- !ruby/struct:SM::Flow::VERB 
  body: "  when such a thing exists.\n"
- !ruby/struct:SM::Flow::P 
  body: "@param extends [Sass::Util::SubsetMap{Selector::Simple =&gt;"
- !ruby/struct:SM::Flow::VERB 
  body: "                                      Sass::Tree::Visitors::Cssize::Extend}]\n  The extensions to perform on this selector\n"
- !ruby/struct:SM::Flow::P 
  body: "@param parent_directives [Array&lt;Sass::Tree::DirectiveNode&gt;]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The directives containing this selector.\n"
- !ruby/struct:SM::Flow::P 
  body: "@param replace [Boolean]"
- !ruby/struct:SM::Flow::VERB 
  body: "  Whether to replace the original selector entirely or include\n  it in the result.\n"
- !ruby/struct:SM::Flow::P 
  body: "@param seen [Set&lt;Array&lt;Selector::Simple&gt;&gt;]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The set of simple sequences that are currently being replaced.\n"
- !ruby/struct:SM::Flow::P 
  body: "@param original [Boolean]"
- !ruby/struct:SM::Flow::VERB 
  body: "  Whether this is the original selector being extended, as opposed to\n  the result of a previous extension that's being re-extended.\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [CommaSequence] A copy of this selector,"
- !ruby/struct:SM::Flow::VERB 
  body: "  with extensions made according to `extends`\n"
full_name: Sass::Selector::CommaSequence#do_extend
is_singleton: false
name: do_extend
params: (extends, parent_directives = [], replace = false, seen = Set.new, original = true)
visibility: public
