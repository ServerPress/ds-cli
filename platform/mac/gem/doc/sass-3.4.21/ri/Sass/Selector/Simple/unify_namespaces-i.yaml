--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Unifies two namespaces, returning a namespace that works for both of them if possible.
- !ruby/struct:SM::Flow::P 
  body: "@param ns1 [String, nil] The first namespace."
- !ruby/struct:SM::Flow::VERB 
  body: "  `nil` means none specified, e.g. `foo`.\n  The empty string means no namespace specified, e.g. `|foo`.\n  `&quot;*&quot;` means any namespace is allowed, e.g. `*|foo`.\n"
- !ruby/struct:SM::Flow::P 
  body: "@param ns2 [String, nil] The second namespace. See `ns1`. @return [Array(String or nil, Boolean)]"
- !ruby/struct:SM::Flow::VERB 
  body: "  The first value is the unified namespace, or `nil` for no namespace.\n  The second value is whether or not a namespace that works for both inputs\n  could be found at all.\n  If the second value is `false`, the first should be ignored.\n"
full_name: Sass::Selector::Simple#unify_namespaces
is_singleton: false
name: unify_namespaces
params: (ns1, ns2)
visibility: protected
