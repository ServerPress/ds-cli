--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: The abstract base class for Sass importers. All importers should inherit from this.
- !ruby/struct:SM::Flow::P 
  body: At the most basic level, an importer is given a string and must return a {Sass::Engine} containing some Sass code. This string can be interpreted however the importer wants; however, subclasses are encouraged to use the URI format for pathnames.
- !ruby/struct:SM::Flow::P 
  body: Importers that have some notion of &quot;relative imports&quot; should take a single load path in their constructor, and interpret paths as relative to that. They should also implement the \{#find_relative} method.
- !ruby/struct:SM::Flow::P 
  body: Importers should be serializable via `Marshal.dump`.
- !ruby/struct:SM::Flow::P 
  body: "@abstract"
constants: []

full_name: Sass::Importers::Base
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: directories_to_watch
- !ruby/object:RI::MethodSummary 
  name: find
- !ruby/object:RI::MethodSummary 
  name: find_relative
- !ruby/object:RI::MethodSummary 
  name: key
- !ruby/object:RI::MethodSummary 
  name: mtime
- !ruby/object:RI::MethodSummary 
  name: public_url
- !ruby/object:RI::MethodSummary 
  name: to_s
- !ruby/object:RI::MethodSummary 
  name: watched_file?
name: Base
superclass: Object
