--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Gets the nth item in a list.
- !ruby/struct:SM::Flow::P 
  body: Note that unlike some languages, the first item in a Sass list is number 1, the second number 2, and so forth.
- !ruby/struct:SM::Flow::P 
  body: This can return the nth pair in a map as well.
- !ruby/struct:SM::Flow::P 
  body: Negative index values address elements in reverse order, starting with the last element in the list.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  nth(10px 20px 30px, 1) =&gt; 10px\n  nth((Helvetica, Arial, sans-serif), 3) =&gt; sans-serif\n  nth((width: 10px, length: 20px), 2) =&gt; length, 20px\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload nth($list, $n)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $list [Sass::Script::Value::Base]\n  @param $n [Sass::Script::Value::Number] The index of the item to get.\n    Negative indices count from the end of the list.\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::Base] @raise [ArgumentError] if `$n` isn't an integer between 1 and the length"
- !ruby/struct:SM::Flow::VERB 
  body: "  of `$list`\n"
full_name: Sass::Script::Functions#nth
is_singleton: false
name: nth
params: (list, n)
visibility: public
