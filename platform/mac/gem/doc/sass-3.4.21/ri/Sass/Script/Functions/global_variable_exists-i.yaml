--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Check whether a variable with the given name exists in the global scope (at the top level of the file).
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  $a-false-value: false;\n  global-variable-exists(a-false-value) =&gt; true\n\n  .foo {\n    $some-var: false;\n    @if global-variable-exists(some-var) { /* false, doesn't run */ }\n  }\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload global_variable_exists($name)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $name [Sass::Script::Value::String] The name of the variable to\n    check. The name should not include the `$`.\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::Bool] Whether the variable is defined in"
- !ruby/struct:SM::Flow::VERB 
  body: "  the global scope.\n"
full_name: Sass::Script::Functions#global_variable_exists
is_singleton: false
name: global_variable_exists
params: (name)
visibility: public
