--- !ruby/object:RI::MethodDescription 
aliases: 
- !ruby/object:RI::AliasName 
  name: fade_out
block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Makes a color more transparent. Takes a color and a number between 0 and 1, and returns a color with the opacity decreased by that amount.
- !ruby/struct:SM::Flow::P 
  body: "@see #opacify @example"
- !ruby/struct:SM::Flow::VERB 
  body: "  transparentize(rgba(0, 0, 0, 0.5), 0.1) =&gt; rgba(0, 0, 0, 0.4)\n  transparentize(rgba(0, 0, 0, 0.8), 0.2) =&gt; rgba(0, 0, 0, 0.6)\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload transparentize($color, $amount)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $color [Sass::Script::Value::Color]\n  @param $amount [Sass::Script::Value::Number] The amount to decrease the\n    opacity by, between 0 and 1\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::Color] @raise [ArgumentError] if `$amount` is out of bounds, or either parameter"
- !ruby/struct:SM::Flow::VERB 
  body: "  is the wrong type\n"
full_name: Sass::Script::Functions#transparentize
is_singleton: false
name: transparentize
params: (color, amount)
visibility: public
