--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: associative?
- !ruby/object:RI::MethodSummary 
  name: new
- !ruby/object:RI::MethodSummary 
  name: parse
- !ruby/object:RI::MethodSummary 
  name: precedence_of
comment: 
- !ruby/struct:SM::Flow::P 
  body: The parser for SassScript. It parses a string of code into a tree of {Script::Tree::Node}s.
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: PRECEDENCE
  value: "[         :comma, :single_eq, :space, :or, :and,         [:eq, :neq],         [:gt, :gte, :lt, :lte],         [:plus, :minus],         [:times, :div, :mod],       ]"
- !ruby/object:RI::Constant 
  comment: 
  name: ASSOCIATIVE
  value: "[:plus, :times]"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "It would be possible to have unified #assert and #try methods, but detecting the method/token difference turns out to be quite expensive."
  name: EXPR_NAMES
  value: "{         :string => \"string\",         :default => \"expression (e.g. 1px, bold)\",         :mixin_arglist => \"mixin argument\",         :fn_arglist => \"function argument\",         :splat => \"...\",         :special_fun => '\")\"',       }"
full_name: Sass::Script::Parser
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: line
- !ruby/object:RI::MethodSummary 
  name: offset
- !ruby/object:RI::MethodSummary 
  name: parse
- !ruby/object:RI::MethodSummary 
  name: parse_function_definition_arglist
- !ruby/object:RI::MethodSummary 
  name: parse_interpolated
- !ruby/object:RI::MethodSummary 
  name: parse_mixin_definition_arglist
- !ruby/object:RI::MethodSummary 
  name: parse_mixin_include_arglist
- !ruby/object:RI::MethodSummary 
  name: parse_string
- !ruby/object:RI::MethodSummary 
  name: parse_until
name: Parser
superclass: Object
