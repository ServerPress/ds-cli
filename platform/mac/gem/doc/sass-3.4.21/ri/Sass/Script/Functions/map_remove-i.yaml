--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a new map with keys removed.
- !ruby/struct:SM::Flow::P 
  body: Like all map functions, `map-merge()` returns a new map rather than modifying its arguments in place.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  map-remove((&quot;foo&quot;: 1, &quot;bar&quot;: 2), &quot;bar&quot;) =&gt; (&quot;foo&quot;: 1)\n  map-remove((&quot;foo&quot;: 1, &quot;bar&quot;: 2, &quot;baz&quot;: 3), &quot;bar&quot;, &quot;baz&quot;) =&gt; (&quot;foo&quot;: 1)\n  map-remove((&quot;foo&quot;: 1, &quot;bar&quot;: 2), &quot;baz&quot;) =&gt; (&quot;foo&quot;: 1, &quot;bar&quot;: 2)\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload map_remove($map, $keys...)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $map  [Sass::Script::Value::Map]\n  @param $keys [[Sass::Script::Value::Base]]\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::Map] @raise [ArgumentError] if `$map` is not a map"
full_name: Sass::Script::Functions#map_remove
is_singleton: false
name: map_remove
params: (map, *keys)
visibility: public
