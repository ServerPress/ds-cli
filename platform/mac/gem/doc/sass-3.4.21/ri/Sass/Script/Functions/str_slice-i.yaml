--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Extracts a substring from `$string`. The substring will begin at index `$start-at` and ends at index `$end-at`.
- !ruby/struct:SM::Flow::P 
  body: Note that unlike some languages, the first character in a Sass string is number 1, the second number 2, and so forth.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: " str-slice(&quot;abcd&quot;, 2, 3)   =&gt; &quot;bc&quot;\n str-slice(&quot;abcd&quot;, 2)      =&gt; &quot;bcd&quot;\n str-slice(&quot;abcd&quot;, -3, -2) =&gt; &quot;bc&quot;\n str-slice(&quot;abcd&quot;, 2, -2)  =&gt; &quot;bc&quot;\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload str_slice($string, $start-at, $end-at: -1)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $start-at [Sass::Script::Value::Number] The index of the first\n    character of the substring. If this is negative, it counts from the end\n    of `$string`\n  @param $end-before [Sass::Script::Value::Number] The index of the last\n    character of the substring. If this is negative, it counts from the end\n    of `$string`. Defaults to -1\n  @return [Sass::Script::Value::String] The substring. This will be quoted\n    if and only if `$string` was quoted\n"
- !ruby/struct:SM::Flow::P 
  body: "@raise [ArgumentError] if any parameter is the wrong type"
full_name: Sass::Script::Functions#str_slice
is_singleton: false
name: str_slice
params: (string, start_at, end_at = nil)
visibility: public
