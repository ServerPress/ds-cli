--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Appends a single value onto the end of a list.
- !ruby/struct:SM::Flow::P 
  body: Unless the `$separator` argument is passed, if the list had only one item, the resulting list will be space-separated.
- !ruby/struct:SM::Flow::P 
  body: Like all list functions, `append()` returns a new list rather than modifying its argument in place.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  append(10px 20px, 30px) =&gt; 10px 20px 30px\n  append((blue, red), green) =&gt; blue, red, green\n  append(10px 20px, 30px 40px) =&gt; 10px 20px (30px 40px)\n  append(10px, 20px, comma) =&gt; 10px, 20px\n  append((blue, red), green, space) =&gt; blue red green\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload append($list, $val, $separator: auto)"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $list [Sass::Script::Value::Base]\n  @param $val [Sass::Script::Value::Base]\n  @param $separator [Sass::Script::Value::String] The list separator to use.\n    If this is `comma` or `space`, that separator will be used. If this is\n    `auto` (the default), the separator is determined as explained above.\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::List]"
full_name: Sass::Script::Functions#append
is_singleton: false
name: append
params: (list, val, separator = identifier("auto"))
visibility: public
