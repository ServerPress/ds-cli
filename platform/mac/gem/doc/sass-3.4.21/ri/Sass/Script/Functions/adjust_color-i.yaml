--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Increases or decreases one or more properties of a color. This can change the red, green, blue, hue, saturation, value, and alpha properties. The properties are specified as keyword arguments, and are added to or subtracted from the color's current value for that property.
- !ruby/struct:SM::Flow::P 
  body: All properties are optional. You can't specify both RGB properties (`$red`, `$green`, `$blue`) and HSL properties (`$hue`, `$saturation`, `$value`) at the same time.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  adjust-color(#102030, $blue: 5) =&gt; #102035\n  adjust-color(#102030, $red: -5, $blue: 5) =&gt; #0b2035\n  adjust-color(hsl(25, 100%, 80%), $lightness: -30%, $alpha: -0.4) =&gt; hsla(25, 100%, 50%, 0.6)\n"
- !ruby/struct:SM::Flow::P 
  body: "@overload adjust_color($color, [$red], [$green], [$blue], [$hue], [$saturation], [$lightness], [$alpha])"
- !ruby/struct:SM::Flow::VERB 
  body: "  @param $color [Sass::Script::Value::Color]\n  @param $red [Sass::Script::Value::Number] The adjustment to make on the\n    red component, between -255 and 255 inclusive\n  @param $green [Sass::Script::Value::Number] The adjustment to make on the\n    green component, between -255 and 255 inclusive\n  @param $blue [Sass::Script::Value::Number] The adjustment to make on the\n    blue component, between -255 and 255 inclusive\n  @param $hue [Sass::Script::Value::Number] The adjustment to make on the\n    hue component, in degrees\n  @param $saturation [Sass::Script::Value::Number] The adjustment to make on\n    the saturation component, between `-100%` and `100%` inclusive\n  @param $lightness [Sass::Script::Value::Number] The adjustment to make on\n    the lightness component, between `-100%` and `100%` inclusive\n  @param $alpha [Sass::Script::Value::Number] The adjustment to make on the\n    alpha component, between -1 and 1 inclusive\n"
- !ruby/struct:SM::Flow::P 
  body: "@return [Sass::Script::Value::Color] @raise [ArgumentError] if any parameter is the wrong type or out-of"
- !ruby/struct:SM::Flow::VERB 
  body: "  bounds, or if RGB properties and HSL properties are adjusted at the\n  same time\n"
full_name: Sass::Script::Functions#adjust_color
is_singleton: false
name: adjust_color
params: (color, kwargs)
visibility: public
