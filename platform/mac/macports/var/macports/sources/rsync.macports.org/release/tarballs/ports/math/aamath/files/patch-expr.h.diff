--- expr.h.orig	2015-10-12 19:34:34.000000000 -0700
+++ expr.h	2015-10-12 19:35:08.000000000 -0700
@@ -451,7 +451,7 @@ class Integral : public OpOnFunction {
 
 	virtual CanvasPtr render_head() const;
 
-	void render_symbol(Canvas& c, int r, int c, int h) const;
+	void render_symbol(Canvas& canvas, int r, int c, int h) const;
 
 	virtual CanvasPtr render() const;
 };
@@ -467,7 +467,7 @@ class IntegralOnInterval : public Integr
 
 class OpSymbol {
   public:
-	virtual void render(Canvas& c, int r, int c) const = 0;
+	virtual void render(Canvas& canvas, int r, int c) const = 0;
 };
 
 class SumOrProduct : public OpOnFunction {
--- expr.cc.orig	2005-03-07 18:00:02.000000000 -0800
+++ expr.cc	2015-10-12 19:36:23.000000000 -0700
@@ -1192,7 +1192,7 @@ IntegralOnInterval::render_head() const
 
 class SumSymbol : public OpSymbol {
   public:
-	void render(Canvas& c, int r, int c) const;
+	void render(Canvas& canvas, int r, int c) const;
 };
 
 void
@@ -1208,7 +1208,7 @@ SumSymbol::render(Canvas& canvas, int r,
 
 class ProductSymbol : public OpSymbol {
   public:
-	void render(Canvas& c, int r, int c) const;
+	void render(Canvas& canvas, int r, int c) const;
 };
 
 void
@@ -1612,7 +1612,7 @@ Matrix::render() const
 	int cols = num_cols();
 	int rows = num_rows();
 
-	CanvasPtr ec[cols * rows];
+	CanvasPtr *ec = new CanvasPtr[cols * rows];
 	Size sz[cols * rows];
 
 	int row_height[rows];
@@ -1692,6 +1692,8 @@ Matrix::render() const
 
 	canvas->center();
 
+    delete[] ec;
+
 	return canvas;
 }
 

