# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 136416 2015-05-16 16:52:31Z mmoll@macports.org $

PortSystem                  1.0
PortGroup                   mpi 1.0

name                        cdo
version                     1.6.9
revision                    1
platforms                   darwin
maintainers                 takeshi openmaintainer
license                     GPL-2
categories                  science
description                 Climate Data Operators
homepage                    https://code.zmaw.de/projects/cdo
master_sites                https://code.zmaw.de/attachments/download/10198
checksums           md5     bf0997bf20e812f35e10188a930e24e2 \
                    sha1    5d2cedadffcdaaa1b9cf49cbc0f524ee417b5326 \
                    rmd160  35bd6e59ae661bed315b06af040f5a9ec1d4f6b3
long_description \
    CDO is a collection of command line Operators               \
    to manipulate and analyse Climate Data files.               \
    Supported data formats are GRIB, netCDF, SERVICE, EXTRA and IEG. \
    There are more than 600 operators available.

fetch.ignore_sslcert        yes

compilers.choose            cc
mpi.setup                   -clang -dragonegg
mpi.enforce_variant         hdf5

depends_lib                 port:netcdf \
                            port:curl \
                            port:udunits2 \
                            port:proj \
                            port:fftw-3

configure.args              --with-netcdf=${prefix} \
                            --disable-dependency-tracking \
                            --with-proj=${prefix} \
                            --with-hdf5=${prefix} \
                            --with-udunits2=${prefix} \
                            --with-fftw3 \
                            --with-curl=${prefix} \
                            --with-zlib=${prefix}
configure.cppflags-append   -I${prefix}/include/udunits2

set v [mpi_active_variant_name bin:h5pcc:hdf5]
if {${v} != "" } {
    depends_build-append    port:yaxt
    configure.cc            ${prefix}/bin/h5pcc
}

post-destroot {
    xinstall -m 755 -d ${destroot}${prefix}/share/doc/${name}
    eval xinstall -m 644 [glob ${worksrcpath}/doc/*.pdf] ${destroot}${prefix}/share/doc/${name}
    foreach f {AUTHORS  ChangeLog NEWS OPERATORS README} {
        eval xinstall -m 644 [glob ${worksrcpath}/${f}] ${destroot}${prefix}/share/doc/${name}
    }
}

if {[variant_isset magicspp]} {
    default_variants    +grib_api
}

variant grib2 description {obsoleted by grib_api varint} {
    default_variants +grib_api
}

variant grib_api description {enable grib2 support} {
    depends_lib-append      port:grib_api
    configure.args-append   --with-jasper=${prefix} \
                            --with-grib_api=${prefix}
    configure.ldflags-append    -lpng -lopenjpeg
}

variant szip description {compile with szip support} {
    depends_lib-append      port:szip
    configure.args-append   --with-szlib=${prefix}
}

variant magicspp description {compile with ECMWF magics support} {
    depends_lib-append      port:libxml2 \
                            port:magicspp
    configure.args-append   --with-libxml2=${prefix} \
                            --with-magics=${prefix}
}

variant cdi description {build, install and link to a CDI library} {
    configure.args-append   --enable-cdi-lib
}

livecheck.type              regex
livecheck.url               ${homepage}
livecheck.regex             {Version ([0-9]+\.[0-9]+\.[0-9]+\.*[0-9]*)}
