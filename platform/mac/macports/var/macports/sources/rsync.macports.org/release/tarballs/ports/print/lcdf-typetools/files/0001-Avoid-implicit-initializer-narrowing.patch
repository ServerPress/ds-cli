From 1743ebf838dfeff94cccd9cbb965e16ed4f1f804 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Lawrence=20Vela=CC=81zquez?= <larryv@alum.mit.edu>
Date: Wed, 4 Sep 2013 02:35:44 -0400
Subject: [PATCH] Avoid implicit initializer narrowing.

See http://www.stroustrup.com/C++11FAQ.html#narrowing, which causes
a build error when compiling as C++11 with recent Apple LLVM Compiler
and libc++. Using an explicit cast works around the error, assuming the
truncation is semantically safe.
---
 otftotfm/dvipsencoding.cc | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/otftotfm/dvipsencoding.cc b/otftotfm/dvipsencoding.cc
index 870c7d0..78b32da 100644
--- a/otftotfm/dvipsencoding.cc
+++ b/otftotfm/dvipsencoding.cc
@@ -444,7 +444,7 @@ DvipsEncoding::parse_ligkern_words(Vector<String> &v, int override, ErrorHandler
 	    return errh->warning("%<%s%> has no encoding, ignoring %<%s%>", v[2].c_str(), v[1].c_str());
 	if ((op & JT_KERN) && l && (av == J_ALL || bv == J_ALL))
 	    return errh->warning("%<%s %s %s%> illegal, only {0} works with *", v[0].c_str(), v[1].c_str(), v[2].c_str());
-	Ligature lig = { av, bv, op, l, 0 };
+	Ligature lig = { av, bv, op, static_cast<int>(l), 0 };
 	add_ligkern(lig, override);
 	return 0;
 
-- 
1.8.4

