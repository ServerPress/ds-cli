--- kernel/driver_info.cc.orig	2009-03-13 07:46:31.000000000 +1100
+++ kernel/driver_info.cc	2012-11-02 09:33:11.000000000 +1100
@@ -268,6 +268,7 @@ do_scalar_inertial_assignment(driver_inf
  *************************************************************************
  *************************************************************************/
 
+inline int do_record_transport_assignment(driver_info &, const record_base &, int, const vtime &);
 
 // Creates transaction composite signals. Returns number of assigned scalars.
 inline int
@@ -311,7 +312,6 @@ do_array_transport_assignment(driver_inf
 	assigned_scalars += do_array_transport_assignment(driver, (array_base&)value.data[j], i, tr_time);
 	break;
       case RECORD:
-	inline int do_record_transport_assignment(driver_info &, const record_base &, int, const vtime &);
 	assigned_scalars += do_record_transport_assignment(driver, (record_base&)value.data[j], i, tr_time);
 	break;
       }
@@ -337,6 +337,8 @@ driver_info::transport_assign(const arra
   do_array_transport_assignment(*this, value, first, tr_time);
 }
 
+inline int do_record_inertial_assignment(driver_info &, const record_base &, int,  
+						  const vtime &, const vtime &);
 
 // Creates transaction for composite signals. Returns number of assigned scalars.
 inline int
@@ -381,8 +383,6 @@ do_array_inertial_assignment(driver_info
 	assigned_scalars += do_array_inertial_assignment(driver, (array_base&)value.data[j], i, tr_time, rm_time);
 	break;
       case RECORD:
-	inline int do_record_inertial_assignment(driver_info &, const record_base &, int,  
-						  const vtime &, const vtime &); 
 	assigned_scalars += do_record_inertial_assignment(driver, (record_base&)value.data[j], i, tr_time, rm_time);
 	break;
       }
