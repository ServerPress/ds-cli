--- callback/vacall_r/Makefile.in.orig	2013-02-26 09:55:40.000000000 +0100
+++ callback/vacall_r/Makefile.in	2013-02-26 09:57:31.000000000 +0100
@@ -25,7 +25,7 @@
 CFLAGS = @CFLAGS@
 CPP = @CPP@
 INCLUDES = -I. -I$(srcdir)
-ASPFLAGS = `if test @AS_UNDERSCORE@ = true; then echo '-DASM_UNDERSCORE'; fi`
+ASPFLAGS = $(CPPFLAGS) `if test @AS_UNDERSCORE@ = true; then echo '-DASM_UNDERSCORE'; fi`
 LIBTOOL = @LIBTOOL@
 LIBTOOL_COMPILE = $(LIBTOOL) --mode=compile
 LIBTOOL_LINK = $(LIBTOOL) --mode=link
@@ -61,25 +61,25 @@
 	if test -f vacall-$(CPU).o; then $(LN) vacall-$(CPU).o vacall.o; fi
 
 vacall-i386.lo : vacall-i386.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-i386.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-i386.s
 
 vacall-i386.s : $(srcdir)/vacall-i386-macro.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-i386-macro.S | grep -v '^ *#line' | grep -v '^#ident' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,% ,%,g' -e 's,\. ,.,g' > vacall-i386.s
 
 vacall-sparc.lo : vacall-sparc.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-sparc.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-sparc.s
 
 vacall-sparc.s : $(srcdir)/vacall-sparc.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-sparc.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' -e 's,\$$,#,g' > vacall-sparc.s
 
 vacall-sparc64.lo : vacall-sparc64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-sparc64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-sparc64.s
 
 vacall-sparc64.s : $(srcdir)/vacall-sparc64.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-sparc64.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' -e 's,\$$,#,g' > vacall-sparc64.s
 
 vacall-m68k.lo : vacall-m68k.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-m68k.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-m68k.s
 
 vacall-m68k.s : $(srcdir)/vacall-m68k.mit.S $(srcdir)/vacall-m68k.mot.s $(srcdir)/vacall-m68k-netbsd.S
 	case "$(OS)" in \
@@ -89,40 +89,40 @@
 	$(CPP) $(ASPFLAGS) $$src | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' | if test @AS_UNDERSCORE@ = true; then sed -e 's/\$$//g'; else sed -e 's/\$$/%/g'; fi > vacall-m68k.s
 
 vacall-mips.lo : vacall-mips.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-mips.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-mips.s
 
 vacall-mips.s : $(srcdir)/vacall-mips.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-mips.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > vacall-mips.s
 
 vacall-mipsn32.lo : vacall-mipsn32.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-mipsn32.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-mipsn32.s
 
 vacall-mipsn32.s : $(srcdir)/vacall-mipsn32.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-mipsn32.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > vacall-mipsn32.s
 
 vacall-mips64.lo : vacall-mips64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-mips64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-mips64.s
 
 vacall-mips64.s : $(srcdir)/vacall-mips64.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-mips64.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > vacall-mips64.s
 
 vacall-alpha.lo : $(srcdir)/vacall-alpha.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-alpha.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-alpha.s
 
 vacall-hppa.lo : $(srcdir)/vacall-hppa.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-hppa.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-hppa.s
 
 vacall-s390.lo : $(srcdir)/vacall-s390.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-s390.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-s390.s
 
 vacall-arm.lo : vacall-arm.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c vacall-arm.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c vacall-arm.s
 
 vacall-arm.s : $(srcdir)/vacall-arm.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/vacall-arm.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//,@,g' -e 's,\$$,#,g' > vacall-arm.s
 
 vacall-armel.lo : $(srcdir)/vacall-armel.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-armel.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-armel.s
 
 vacall-powerpc.lo : $(srcdir)/vacall-powerpc-aix.old.s $(srcdir)/vacall-powerpc-aix.new.s $(srcdir)/vacall-powerpc-sysv4.s $(srcdir)/vacall-powerpc-linux.s $(srcdir)/vacall-powerpc-macos.s $(srcdir)/vacall-powerpc-netbsd.s
 	case "$(OS)" in \
@@ -133,7 +133,7 @@
 	  netbsd*) syntax=netbsd;; \
 	  *) syntax=sysv4;; \
 	esac; \
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-powerpc-$${syntax}.s ; \
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-powerpc-$${syntax}.s ; \
 	cp vacall-powerpc-$${syntax}.lo vacall-powerpc.lo ; rm -f vacall-powerpc-$${syntax}.lo ; \
 	if test -f vacall-powerpc-$${syntax}.o; then cp vacall-powerpc-$${syntax}.o vacall-powerpc.o; fi
 # Note that vacall-powerpc-${syntax}.o is kept in place, because in some cases
@@ -141,19 +141,19 @@
 # libtool may want to access it.
 
 vacall-powerpc64.lo : $(srcdir)/vacall-powerpc64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-powerpc64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-powerpc64.s
 
 vacall-m88k.lo : $(srcdir)/vacall-m88k.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-m88k.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-m88k.s
 
 vacall-convex.lo : $(srcdir)/vacall-convex.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-convex.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-convex.s
 
 vacall-ia64.lo : $(srcdir)/vacall-ia64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-ia64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-ia64.s
 
 vacall-x86_64.lo : $(srcdir)/vacall-x86_64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/vacall-x86_64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/vacall-x86_64.s
 
 misc.lo : $(srcdir)/misc.c vacall_r.h config.h
 	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) $(INCLUDES) -c $(srcdir)/misc.c
@@ -162,7 +162,7 @@
 	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) -c $(srcdir)/structcpy.c
 
 libvacall.la : $(OBJECTS)
-	$(LIBTOOL_LINK) $(CC) -static -o libvacall.la -rpath $(libdir) $(OBJECTS)
+	$(LIBTOOL_LINK) $(CC) $(CFLAGS) $(LDFLAGS) -static -o libvacall.la -rpath $(libdir) $(OBJECTS)
 
 # Installs the library and include files only. Typically called with only
 # $(libdir) and $(includedir) - don't use $(prefix) and $(exec_prefix) here.
