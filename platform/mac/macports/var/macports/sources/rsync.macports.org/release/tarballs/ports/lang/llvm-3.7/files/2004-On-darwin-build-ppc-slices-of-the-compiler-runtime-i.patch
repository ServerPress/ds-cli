From ad7e458c5ee6caf2f08658aa06414516cc5551b9 Mon Sep 17 00:00:00 2001
From: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
Date: Sat, 17 Jan 2015 19:55:19 -0800
Subject: [PATCH 2004/2008] On darwin, build ppc slices of the compiler runtime
 if requested and supported by the SDK and toolchain

Signed-off-by: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
---
 make/platform/clang_darwin.mk | 12 ++++++------
 1 file changed, 6 insertions(+), 6 deletions(-)

diff --git llvm_release_37/projects/compiler-rt/make/platform/clang_darwin.mk macports_release_37/projects/compiler-rt/make/platform/clang_darwin.mk
index 974ae1c..c39e33c 100644
--- llvm_release_37/projects/compiler-rt/make/platform/clang_darwin.mk
+++ macports_release_37/projects/compiler-rt/make/platform/clang_darwin.mk
@@ -83,10 +83,10 @@ Configs += eprintf
 UniversalArchs.eprintf := $(call CheckArches,i386,eprintf,$(OSX_SDK))
 
 # Configuration for targeting 10.4. We need a few functions missing from
-# libgcc_s.10.4.dylib. We only build x86 slices since clang doesn't really
-# support targeting PowerPC.
+# libgcc_s.10.4.dylib. We don't build ppc64 slices since clang doesn't really
+# support it..
 Configs += 10.4
-UniversalArchs.10.4 := $(call CheckArches,i386 x86_64,10.4,$(OSX_SDK))
+UniversalArchs.10.4 := $(call CheckArches,ppc i386 x86_64,10.4,$(OSX_SDK))
 
 # Configuration for targeting iOS for a couple of functions that didn't
 # make it into libSystem.
@@ -97,11 +97,11 @@ UniversalArchs.ios += $(call CheckArches,armv7 arm64,ios,$(IOS_SDK))
 # Configuration for targeting OSX. These functions may not be in libSystem
 # so we should provide our own.
 Configs += osx
-UniversalArchs.osx := $(call CheckArches,i386 x86_64 x86_64h,osx,$(OSX_SDK))
+UniversalArchs.osx := $(call CheckArches,ppc i386 x86_64 x86_64h,osx,$(OSX_SDK))
 
 # Configuration for use with kernel/kexts.
 Configs += cc_kext
-UniversalArchs.cc_kext := $(call CheckArches,i386 x86_64 x86_64h,cc_kext,$(OSX_SDK))
+UniversalArchs.cc_kext := $(call CheckArches,ppc i386 x86_64 x86_64h,cc_kext,$(OSX_SDK))
 UniversalArchs.cc_kext += $(call CheckArches,armv7 arm64,cc_kext,$(IOS_SDK))
 
 # Configuration for use with kernel/kexts for iOS 5.0 and earlier (which used 
@@ -113,7 +113,7 @@ UniversalArchs.cc_kext_ios5 += $(call CheckArches,armv7,cc_kext_ios5,$(IOS_SDK))
 
 # Configurations which define the profiling support functions.
 Configs += profile_osx
-UniversalArchs.profile_osx := $(call CheckArches,i386 x86_64 x86_64h,profile_osx,$(OSX_SDK))
+UniversalArchs.profile_osx := $(call CheckArches,ppc i386 x86_64 x86_64h,profile_osx,$(OSX_SDK))
 Configs += profile_ios
 UniversalArchs.profile_ios := $(call CheckArches,i386 x86_64,profile_ios,$(IOSSIM_SDK))
 UniversalArchs.profile_ios += $(call CheckArches,armv7 arm64,profile_ios,$(IOS_SDK))
-- 
2.6.2

