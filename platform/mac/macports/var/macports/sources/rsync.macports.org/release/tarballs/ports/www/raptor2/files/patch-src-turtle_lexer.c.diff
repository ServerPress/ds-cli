--- a/src/turtle_lexer.c	2011-07-23 17:17:24.000000000 -0700
+++ b/src/turtle_lexer.c	2011-07-23 17:18:14.000000000 -0700
@@ -62,6 +62,7 @@
 typedef unsigned char flex_uint8_t; 
 typedef unsigned short int flex_uint16_t;
 typedef unsigned int flex_uint32_t;
+#endif /* ! C99 */
 
 /* Limits of integral types. */
 #ifndef INT8_MIN
@@ -92,8 +93,6 @@
 #define UINT32_MAX             (4294967295U)
 #endif
 
-#endif /* ! C99 */
-
 #endif /* ! FLEXINT_H */
 
 #ifdef __cplusplus
@@ -167,15 +166,7 @@
 
 /* Size of default input buffer. */
 #ifndef YY_BUF_SIZE
-#ifdef __ia64__
-/* On IA-64, the buffer size is 16k, not 8k.
- * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
- * Ditto for the __ia64__ case accordingly.
- */
-#define YY_BUF_SIZE 32768
-#else
 #define YY_BUF_SIZE 16384
-#endif /* __ia64__ */
 #endif
 
 /* The state buf must be large enough to hold one state per character in the main buffer.
@@ -371,7 +362,7 @@
 	flex_int32_t yy_verify;
 	flex_int32_t yy_nxt;
 	};
-static yyconst flex_int16_t yy_accept[114] =
+static yyconst flex_int16_t yy_accept[112] =
     {   0,
         0,    0,    0,    0,   22,   22,   41,   39,    2,    1,
         1,   39,   38,   13,   14,   39,    5,    4,   28,   25,
@@ -384,8 +375,8 @@
        26,    0,    0,   27,    0,   25,    0,    0,   33,    0,
         0,   24,   36,   36,   21,    0,   27,    0,   27,    0,
 
-        0,    0,    0,   24,   36,   17,    0,   10,    0,   18,
-        0,    9,    0
+        0,    0,   24,   36,   17,   10,    0,   18,    0,    9,
+        0
     } ;
 
 static yyconst flex_int32_t yy_ec[256] =
@@ -396,154 +387,157 @@
         1,    2,    1,    5,    6,    1,    1,    1,    1,    7,
         8,    1,    9,   10,   11,   12,    1,   13,   13,   13,
        13,   13,   13,   13,   13,   13,   13,   14,   15,   16,
-        1,   17,    1,   18,   19,   19,   19,   19,   20,   19,
-       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
-       19,   19,   19,   19,   19,   19,   19,   19,   19,   19,
-       21,   22,   23,   24,   25,    1,   26,   27,   19,   19,
-
-       28,   29,   19,   19,   30,   19,   19,   31,   19,   19,
-       19,   32,   19,   33,   34,   35,   36,   19,   19,   37,
-       19,   19,   38,    1,   39,    1,    1,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40,   40,   40,   40,   40,   40,
-       40,   40,   40,   40,   40
+       17,   18,    1,   19,   20,   20,   20,   20,   21,   20,
+       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
+       20,   20,   20,   20,   20,   20,   20,   20,   20,   20,
+       22,   23,   24,   25,   26,    1,   27,   28,   20,   20,
+
+       29,   30,   20,   20,   31,   20,   20,   32,   20,   20,
+       20,   33,   20,   34,   35,   36,   37,   20,   20,   38,
+       20,   20,   39,    1,   40,    1,    1,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41,   41,   41,   41,   41,   41,
+       41,   41,   41,   41,   41
     } ;
 
-static yyconst flex_int32_t yy_meta[41] =
+static yyconst flex_int32_t yy_meta[42] =
     {   0,
         1,    2,    3,    4,    5,    1,    1,    1,    1,    1,
-        6,    1,    6,    7,    1,    1,    1,    1,    8,    8,
-        1,    8,    1,    1,    8,    8,    8,    8,    8,    8,
-        8,    8,    8,    8,    8,    8,    8,    2,    1,    8
+        6,    1,    6,    7,    1,    1,    2,    1,    1,    8,
+        8,    1,    8,    1,    1,    8,    8,    8,    8,    8,
+        8,    8,    8,    8,    8,    8,    8,    8,    2,    1,
+        8
     } ;
 
-static yyconst flex_int16_t yy_base[126] =
+static yyconst flex_int16_t yy_base[124] =
     {   0,
-        0,    0,   40,    0,   78,   79,  285,  299,  259,  299,
-      257,   80,   83,  299,  299,   76,  299,  246,   78,   90,
-      299,  227,   67,   81,  299,  229,  299,  207,  215,   83,
-       93,   83,  299,  299,  299,  225,  299,  211,  105,  107,
-      219,  108,  221,  299,  109,  217,    0,  114,  299,  218,
-      207,  112,  117,  121,  133,  133,  208,  136,  299,  201,
-      149,  191,  183,  189,  151,  200,  299,    0,  117,   86,
-      211,  198,  299,  153,  154,  155,  206,  299,  299,  153,
-      157,  169,  197,  196,  165,  170,  188,  196,  299,  172,
-      177,    0,  135,  153,  299,  191,  188,  187,  186,  190,
-
-      192,  170,  154,    0,  160,  133,  194,  299,  125,  100,
-       83,  299,  299,  232,  240,  248,  255,  263,  266,  269,
-      272,  280,  287,   88,  290
+        0,    0,   41,    0,   80,   81,  262,  301,  259,  301,
+      243,   82,   85,  301,  301,   78,  301,  232,   80,   93,
+      301,  215,   66,   83,  301,  217,  301,  205,  215,   84,
+       88,   85,  301,  301,  301,  226,  301,  212,   97,  105,
+      220,  111,  222,  301,  108,  218,    0,  114,  301,  219,
+      208,  109,  113,  114,  128,  142,  144,  146,  301,  202,
+      148,  192,  184,  190,  150,  202,  301,    0,  128,   96,
+      212,  199,  301,  133,  151,  159,  207,  301,  301,  157,
+      148,  162,  198,  197,  155,  176,  188,  193,  301,  174,
+      179,    0,  145,  155,  301,  194,  193,  191,  190,  195,
+
+      173,  171,    0,  159,  173,  301,  168,  165,  138,  301,
+      301,  234,  242,  250,  257,  265,  268,  271,  274,  282,
+      289,  132,  292
     } ;
 
-static yyconst flex_int16_t yy_def[126] =
+static yyconst flex_int16_t yy_def[124] =
     {   0,
-      113,    1,  113,    3,  114,  114,  113,  113,  113,  113,
-      113,  115,  116,  113,  113,  113,  113,  113,  113,  117,
-      113,  118,  113,  119,  113,  120,  113,  113,  113,  119,
-      119,   31,  113,  113,  113,  113,  113,  121,  122,  122,
-      113,  122,  113,  113,  115,  113,  115,  116,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  123,  113,  118,
-      113,  113,  113,   31,  117,  120,  113,  124,   31,   31,
-      113,  121,  113,  122,  122,  122,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  123,  113,  113,  113,  113,
-      113,  125,   31,   31,  113,  113,  113,  113,  113,  113,
-
-      113,  113,  113,  125,   31,   31,  113,  113,  113,   31,
-      113,  113,    0,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113
+      111,    1,  111,    3,  112,  112,  111,  111,  111,  111,
+      111,  113,  114,  111,  111,  111,  111,  111,  111,  115,
+      111,  116,  111,  117,  111,  118,  111,  111,  111,  117,
+      117,   31,  111,  111,  111,  111,  111,  119,  120,  120,
+      111,  120,  111,  111,  113,  111,  113,  114,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  121,  111,  116,
+      111,  111,  111,   31,  115,  118,  111,  122,   31,   31,
+      111,  119,  111,  120,  120,  120,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  121,  111,  111,  111,  111,
+      111,  123,   31,   31,  111,  111,  111,  111,  111,  111,
+
+      111,  111,  123,   31,   31,  111,  111,   31,  111,  111,
+        0,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111
     } ;
 
-static yyconst flex_int16_t yy_nxt[340] =
+static yyconst flex_int16_t yy_nxt[343] =
     {   0,
         8,    9,   10,   11,   12,   13,   14,   15,   16,   17,
-       16,   18,   19,   20,   21,   22,    8,   23,   24,   24,
-       25,   26,   27,   28,   29,   30,   24,   24,   31,   24,
-       24,   24,   24,   24,   32,   24,   24,   33,   34,   26,
-       35,   36,   35,   35,   35,   35,   35,   35,   35,   35,
-       35,   35,   35,   37,   35,   35,   35,   35,   38,   38,
-       35,   38,   35,   35,   35,   38,   38,   38,   38,   38,
-       38,   38,   38,   38,   38,   38,   38,   35,   35,   38,
-       40,   40,   41,   41,   46,   49,   50,   51,   52,   54,
-       52,   56,   56,   62,   65,   92,   65,   55,   63,   42,
-
-       42,   47,   66,   57,   66,   55,   65,   75,   64,   75,
-      113,   64,   74,   78,   66,   70,   49,   50,   69,  112,
-       66,   94,   66,   54,   52,   64,   76,   59,   76,   53,
-       47,   55,   66,   81,   56,   56,   80,   56,   56,   55,
-       82,   83,   64,   83,   80,   84,   57,   93,   82,   57,
-       87,   87,   56,   56,  111,   75,   75,  113,   64,   74,
-       64,   96,   88,   96,   57,   97,  100,  100,  105,   81,
-       59,   56,   56,   59,   76,   76,   82,   98,   64,   98,
-      106,   99,  109,   57,   82,   64,   89,  110,   59,   87,
-       87,  100,  100,  107,  107,  107,  107,  108,   99,   99,
-
-       97,   88,   59,   97,  103,  102,  101,   59,   84,   84,
-       95,   73,   71,   65,   64,   91,   90,   61,   85,   53,
-       49,   79,   43,   77,   73,   89,   71,   59,   68,   89,
-       67,   89,   39,   39,   39,   39,   39,   39,   39,   39,
-       45,   45,   65,   61,   45,   45,   45,   45,   48,   48,
-       48,   48,   48,   48,   48,   48,   58,   58,   53,   44,
-       43,   58,   58,   60,   60,   60,   60,   60,   60,   60,
-       60,   64,   64,   64,   66,   66,   66,   72,   72,   72,
-       74,   74,   74,   74,  113,   74,   74,   74,   86,   86,
-      113,  113,   86,   86,   86,  104,  113,  104,    7,  113,
-
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113
+       16,   18,   19,   20,   21,   22,    8,    8,   23,   24,
+       24,   25,   26,   27,   28,   29,   30,   24,   24,   31,
+       24,   24,   24,   24,   24,   32,   24,   24,   33,   34,
+       26,   35,   36,   35,   35,   35,   35,   35,   35,   35,
+       35,   35,   35,   35,   37,   35,   35,   35,   35,   35,
+       38,   38,   35,   38,   35,   35,   35,   38,   38,   38,
+       38,   38,   38,   38,   38,   38,   38,   38,   38,   35,
+       35,   38,   40,   40,   41,   41,   46,   49,   50,   51,
+       52,   54,   52,   62,   56,   56,   65,   65,   63,   75,
+
+       55,   65,   42,   42,   47,   66,   66,   75,   55,   57,
+       66,   64,   78,  111,   69,   74,   49,   50,   70,   76,
+       54,   52,   64,   66,   66,   53,   81,   76,   66,   55,
+       47,   59,   94,   80,   82,   75,   83,   55,   83,   92,
+       84,   80,   82,   56,   56,   85,   85,   56,   56,   87,
+       87,   56,   56,   75,   64,   76,   85,   85,   57,   93,
+       81,  111,   57,   74,   88,   96,   57,   96,   82,   97,
+       98,   64,   98,   76,   99,  110,   82,   56,   56,  104,
+       59,   64,   59,  105,   59,   64,   89,  108,   59,   87,
+       87,   64,   57,   59,  100,  100,  100,  100,  109,   64,
+
+      107,  106,   99,   99,   88,   97,   97,  102,  101,   84,
+       84,   95,   73,   71,   59,   65,   64,   91,   90,   61,
+       53,   49,   79,   43,   77,   73,   89,   71,   68,   67,
+       65,   89,   61,   89,   39,   39,   39,   39,   39,   39,
+       39,   39,   45,   45,   53,   44,   45,   45,   45,   45,
+       48,   48,   48,   48,   48,   48,   48,   48,   58,   58,
+       43,  111,  111,  111,   58,   60,   60,   60,   60,   60,
+       60,   60,   60,   64,   64,   64,   66,   66,   66,   72,
+       72,   72,   74,   74,   74,   74,  111,   74,   74,   74,
+       86,   86,  111,  111,   86,  111,   86,  103,  111,  103,
+
+        7,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111
     } ;
 
-static yyconst flex_int16_t yy_chk[340] =
+static yyconst flex_int16_t yy_chk[343] =
     {   0,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
+        1,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
         3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
-        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
-        5,    6,    5,    6,   12,   13,   13,   16,   16,   19,
-       19,   20,   20,   23,   24,  124,   30,   19,   23,    5,
+        3,    3,    5,    6,    5,    6,   12,   13,   13,   16,
+       16,   19,   19,   23,   20,   20,   24,   30,   23,   39,
 
-        6,   12,   24,   20,   30,   19,   31,   39,   32,   40,
-       42,   70,   42,   45,   31,   32,   48,   48,   31,  111,
-       24,   70,   30,   52,   52,  110,   39,   20,   40,   53,
-       45,   52,   31,   54,   56,   56,   53,   58,   58,   52,
-       54,   55,   69,   55,   53,   55,   56,   69,   54,   58,
-       61,   61,   65,   65,  109,   74,   75,   76,  106,   76,
-       93,   80,   61,   80,   65,   80,   85,   85,   93,   81,
-       56,   86,   86,   58,   74,   75,   81,   82,   94,   82,
-       94,   82,  103,   86,   81,  105,   61,  105,   65,   87,
-       87,  100,  100,  101,  101,  107,  107,  102,   99,   98,
-
-       97,   87,   85,   96,   91,   90,   88,   86,   84,   83,
-       77,   72,   71,   66,   64,   63,   62,   60,   57,   51,
-       50,   46,   43,   41,   38,   87,   36,  100,   29,  101,
-       28,  107,  114,  114,  114,  114,  114,  114,  114,  114,
-      115,  115,   26,   22,  115,  115,  115,  115,  116,  116,
-      116,  116,  116,  116,  116,  116,  117,  117,   18,   11,
-        9,  117,  117,  118,  118,  118,  118,  118,  118,  118,
-      118,  119,  119,  119,  120,  120,  120,  121,  121,  121,
-      122,  122,  122,  122,    7,  122,  122,  122,  123,  123,
-        0,    0,  123,  123,  123,  125,    0,  125,  113,  113,
-
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
-      113,  113,  113,  113,  113,  113,  113,  113,  113
+       19,   31,    5,    6,   12,   24,   30,   40,   19,   20,
+       31,   32,   45,   42,   31,   42,   48,   48,   32,   39,
+       52,   52,   70,   24,   30,   53,   54,   40,   31,   52,
+       45,   20,   70,   53,   54,   74,   55,   52,   55,  122,
+       55,   53,   54,   56,   56,   57,   57,   58,   58,   61,
+       61,   65,   65,   75,   69,   74,   85,   85,   56,   69,
+       81,   76,   58,   76,   61,   80,   65,   80,   81,   80,
+       82,   93,   82,   75,   82,  109,   81,   86,   86,   93,
+       56,   94,   57,   94,   58,  104,   61,  104,   65,   87,
+       87,  108,   86,   85,   88,   88,  100,  100,  107,  105,
+
+      102,  101,   99,   98,   87,   97,   96,   91,   90,   84,
+       83,   77,   72,   71,   86,   66,   64,   63,   62,   60,
+       51,   50,   46,   43,   41,   38,   87,   36,   29,   28,
+       26,   88,   22,  100,  112,  112,  112,  112,  112,  112,
+      112,  112,  113,  113,   18,   11,  113,  113,  113,  113,
+      114,  114,  114,  114,  114,  114,  114,  114,  115,  115,
+        9,    7,    0,    0,  115,  116,  116,  116,  116,  116,
+      116,  116,  116,  117,  117,  117,  118,  118,  118,  119,
+      119,  119,  120,  120,  120,  120,    0,  120,  120,  120,
+      121,  121,    0,    0,  121,    0,  121,  123,    0,  123,
+
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111,  111,  111,  111,  111,  111,  111,  111,  111,
+      111,  111
     } ;
 
 /* The intent behind this definition is that it'll catch
@@ -704,7 +698,7 @@
 */
 /* similar to SPARQL but no need for <= check here */
 
-#line 708 "turtle_lexer.c"
+#line 702 "turtle_lexer.c"
 
 #define INITIAL 0
 #define PREF 1
@@ -791,6 +785,10 @@
 
 void turtle_lexer_set_lineno (int line_number ,yyscan_t yyscanner );
 
+int turtle_lexer_get_column  (yyscan_t yyscanner );
+
+void turtle_lexer_set_column (int column_no ,yyscan_t yyscanner );
+
 /* Macros after this point can all be overridden by user definitions in
  * section 1.
  */
@@ -823,12 +821,7 @@
 
 /* Amount of stuff to slurp up with each read. */
 #ifndef YY_READ_BUF_SIZE
-#ifdef __ia64__
-/* On IA-64, the buffer size is 16k, not 8k */
-#define YY_READ_BUF_SIZE 16384
-#else
 #define YY_READ_BUF_SIZE 8192
-#endif /* __ia64__ */
 #endif
 
 /* Copy whatever the last rule matched to the standard output. */
@@ -847,7 +840,7 @@
 	if ( YY_CURRENT_BUFFER_LVALUE->yy_is_interactive ) \
 		{ \
 		int c = '*'; \
-		size_t n; \
+		unsigned n; \
 		for ( n = 0; n < max_size && \
 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
 			buf[n] = (char) c; \
@@ -945,7 +938,7 @@
 
     
 
-#line 949 "turtle_lexer.c"
+#line 942 "turtle_lexer.c"
 
 	if ( !yyg->yy_init )
 		{
@@ -998,13 +991,13 @@
 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 				{
 				yy_current_state = (int) yy_def[yy_current_state];
-				if ( yy_current_state >= 114 )
+				if ( yy_current_state >= 112 )
 					yy_c = yy_meta[(unsigned int) yy_c];
 				}
 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
 			++yy_cp;
 			}
-		while ( yy_current_state != 113 );
+		while ( yy_current_state != 111 );
 		yy_cp = yyg->yy_last_accepting_cpos;
 		yy_current_state = yyg->yy_last_accepting_state;
 
@@ -1321,7 +1314,7 @@
                while(1) {
                   int c = yytext[yyleng - 1];
                   if(c == '{' || c == ' ' || c=='\t' || c == '\v' || c == '\n' ||
-                     c == ':' || c == '-') {
+                     c == '=') {
                     yyleng--;
                   } else
                     break;
@@ -1398,7 +1391,7 @@
 #line 439 "./turtle_lexer.l"
 YY_FATAL_ERROR( "flex scanner jammed" );
 	YY_BREAK
-#line 1402 "turtle_lexer.c"
+#line 1395 "turtle_lexer.c"
 case YY_STATE_EOF(INITIAL):
 case YY_STATE_EOF(PREF):
 	yyterminate();
@@ -1694,7 +1687,7 @@
 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 			{
 			yy_current_state = (int) yy_def[yy_current_state];
-			if ( yy_current_state >= 114 )
+			if ( yy_current_state >= 112 )
 				yy_c = yy_meta[(unsigned int) yy_c];
 			}
 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
@@ -1723,11 +1716,11 @@
 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
 		{
 		yy_current_state = (int) yy_def[yy_current_state];
-		if ( yy_current_state >= 114 )
+		if ( yy_current_state >= 112 )
 			yy_c = yy_meta[(unsigned int) yy_c];
 		}
 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
-	yy_is_jam = (yy_current_state == 113);
+	yy_is_jam = (yy_current_state == 111);
 
 	return yy_is_jam ? 0 : yy_current_state;
 }
@@ -2130,8 +2123,8 @@
 
 /** Setup the input buffer state to scan the given bytes. The next call to turtle_lexer_lex() will
  * scan from a @e copy of @a bytes.
- * @param yybytes the byte buffer to scan
- * @param _yybytes_len the number of bytes in the buffer pointed to by @a bytes.
+ * @param bytes the byte buffer to scan
+ * @param len the number of bytes in the buffer pointed to by @a bytes.
  * @param yyscanner The scanner object.
  * @return the newly allocated buffer state object.
  */
