Fix build with clang.
https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=171268
--- compress/main_tbuild.c.orig	2012-09-02 23:50:51.000000000 +0000
+++ compress/main_tbuild.c	2012-09-02 23:52:17.000000000 +0000
@@ -25,7 +25,7 @@
 int
 main(argc, argv)
 	int	argc;
-	unsigned char	*argv[];
+	char	*argv[];
 {
 	char	comp_dir[MAX_LINE_LEN];
 	int	threshold, specialwords;
--- compress/misc.c.orig	2012-09-02 23:45:51.000000000 +0000
+++ compress/misc.c	2012-09-02 23:46:13.000000000 +0000
@@ -288,7 +288,7 @@
 	return 1;
 }
 
-uninitialize_common()
+void uninitialize_common()
 {
 	initialize_common_done = 0;
 	return;
--- get_filename.c.orig	2012-09-03 00:16:47.000000000 +0000
+++ get_filename.c	2012-09-03 00:16:59.000000000 +0000
@@ -481,7 +481,7 @@
 	return 0;
 }
 
-get_filenames(index_vect, argc, argv, dummylen, dummypat, file_num)
+void get_filenames(index_vect, argc, argv, dummylen, dummypat, file_num)
 int  *index_vect;
 int argc; /* the arguments to agrep for -F */
 char *argv[];
--- get_index.c.orig	2012-09-03 00:24:59.000000000 +0000
+++ get_index.c	2012-09-03 00:25:14.000000000 +0000
@@ -52,7 +52,7 @@
 }
 
 /* Unions offset lists list2 with list1 sorted in increasing order (deletes elements from list2) => changes both list1 and list2: f += #elems added */
-sorted_union(list1, list2, f, pf, cf)
+void sorted_union(list1, list2, f, pf, cf)
 	struct offsets **list1, **list2;
 	int	*f, pf, cf;
 {
@@ -114,7 +114,7 @@
 }
 
 /* Intersects offset lists list2 with list1 sorted in increasing order (deletes elements from list2) => changes both list1 and list2 */
-sorted_intersection(filenum, list1, list2, f)
+void sorted_intersection(filenum, list1, list2, f)
 	struct offsets **list1, **list2;
 	int	*f;
 {
--- index/build_in.c.orig	2012-09-03 00:03:28.000000000 +0000
+++ index/build_in.c	2012-09-03 00:15:01.000000000 +0000
@@ -44,8 +44,12 @@
 extern struct stat excstbuf;
 extern struct stat incstbuf;
 
+void build_hash();
+void init_hash_table();
 void insert_h();
 void insert_index();
+void merge_in(FILE *, FILE *, FILE *);
+void remove_filename(int, int);
 
 extern int ICurrentFileOffset;
 extern int NextICurrentFileOffset;
@@ -124,7 +128,7 @@
 extern int HashTableSize;
 struct token **hash_table; /*[MAX_64K_HASH];*/
 
-build_index()
+void build_index()
 {
 	int	i;
 
@@ -598,7 +602,7 @@
 #endif
 }
 
-traverse1()
+void traverse1()
 {
     FILE *i1, *i2, *i3;
     int ret;
@@ -780,7 +784,7 @@
 input: a set of filenames in name_list[], a partition table p_table[]
 output: a hash table hash_table[].
 -----------------------------------------------------------------------*/
-build_hash()
+void build_hash()
 {
     int	fd;                          /* opened file number */
     int  i, pn;                  /* pn: current partition */
@@ -1229,7 +1233,7 @@
     my_free(buffer_begin, BLOCK_SIZE + 10);
 }
 
-init_hash_table()
+void init_hash_table()
 {
     int i;
 
@@ -1480,7 +1484,7 @@
 extern unsigned char *merge_index_buf;
 
 /* merge index file f1 and f2, then put the result in index file f3 */
-merge_in(f1, f2, f3)
+void merge_in(f1, f2, f3)
 FILE *f1, *f2, *f3;
 {
     int src_mark, dest_mark;
@@ -1858,7 +1862,7 @@
     return;
 }
 
-remove_filename(fileindex, new_partition)
+void remove_filename(fileindex, new_partition)
 	int	fileindex, new_partition;
 {
 	if ((fileindex < 0) || (fileindex >= MaxNum24bPartition)) return;
--- index/io.c.orig	2012-09-02 23:58:26.000000000 +0000
+++ index/io.c	2012-09-03 00:00:56.000000000 +0000
@@ -360,7 +360,7 @@
 
 
 
-read_filters(index_dir, dofilter)
+void read_filters(index_dir, dofilter)
 char	*index_dir;
 int	dofilter;
 {
@@ -1450,7 +1450,7 @@
 	return e->index;
 }
 
-insert_filename(name, name_index)
+void insert_filename(name, name_index)
 	char	*name;
 	int	name_index;
 {
@@ -1502,7 +1502,7 @@
 	(*pe)->index = name_index;
 }
 
-change_filename(name, len, index, newname)
+void change_filename(name, len, index, newname)
 	char	*name;
 	int	len;
 	int	index;
@@ -1524,7 +1524,7 @@
 	return;
 }
 
-delete_filename(name, name_index)
+void delete_filename(name, name_index)
 	char	*name;
 	int	name_index;
 {
--- index/region.c.orig	2012-09-02 23:55:48.000000000 +0000
+++ index/region.c	2012-09-02 23:56:40.000000000 +0000
@@ -168,7 +168,7 @@
 }
 
 /* Looks for embedded attributes and copies the real attribute into dest */
-attr_extract(dest, src)
+void attr_extract(dest, src)
 	char	*dest, *src;
 {
 	char	*oldsrc = src;
