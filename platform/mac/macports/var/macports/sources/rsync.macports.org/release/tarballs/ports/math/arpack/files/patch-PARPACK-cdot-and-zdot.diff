--- PARPACK/SRC/BLACS/pcgetv0.f
+++ PARPACK/SRC/BLACS/pcgetv0.f
@@ -186,21 +186,19 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external    ccopy, cgemv, pclarnv, pcvout, arscnd
+      external    ccopy, cdotc, cgemv, pclarnv, pcvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
       Real  
      &           pscnorm2, slapy2
-      Complex 
-     &           cdotc
-      external   cdotc, pscnorm2, slapy2
+      external   pscnorm2, slapy2
 c
 c     %-----------------%
 c     | Data Statements |
 c     %-----------------%
 c
@@ -333,11 +331,11 @@ c
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       first = .FALSE.
       if (bmat .eq. 'G') then
-          cnorm = cdotc (n, resid, 1, workd, 1)
+          call cdotc(cnorm, n, resid, 1, workd, 1)
           call cgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
           rnorm0 = sqrt(slapy2(real (cnorm),aimag(cnorm)))
       else if (bmat .eq. 'I') then
            rnorm0 = pscnorm2( comm, n, resid, 1)
       end if
@@ -392,11 +390,11 @@ c
          call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       if (bmat .eq. 'G') then
-         cnorm = cdotc (n, resid, 1, workd, 1)
+         call cdotc(cnorm, n, resid, 1, workd, 1)
          call cgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
          rnorm = sqrt(slapy2(real (cnorm),aimag(cnorm)))
       else if (bmat .eq. 'I') then
          rnorm = pscnorm2(comm, n, resid, 1)
       end if
--- PARPACK/SRC/BLACS/pcnaitr.f
+++ PARPACK/SRC/BLACS/pcnaitr.f
@@ -293,22 +293,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   caxpy, ccopy, cscal, cgemv, pcgetv0, slabad, 
+      external   caxpy, ccopy, cdotc, cscal, cgemv, pcgetv0, slabad, 
      &           csscal, pcvout, pcmout, pivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
-      Complex
-     &           cdotc 
       Real            
      &           pslamch, pscnorm2, clanhs, slapy2
-      external   cdotc, pscnorm2, clanhs, pslamch, slapy2
+      external   pscnorm2, clanhs, pslamch, slapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -571,11 +569,11 @@ c        %------------------------------
 c        | The following is needed for STEP 5. |
 c        | Compute the B-norm of OP*v_{j}.     |
 c        %-------------------------------------%
 c
          if (bmat .eq. 'G') then
-             cnorm = cdotc (n, resid, 1, workd(ipj), 1)
+             call cdotc(cnorm, n, resid, 1, workd(ipj), 1)
              call cgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
              wnorm = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
              wnorm = pscnorm2(comm, n, resid, 1)
          end if
@@ -645,11 +643,11 @@ c
 c        %------------------------------%
 c        | Compute the B-norm of r_{j}. |
 c        %------------------------------%
 c
          if (bmat .eq. 'G') then
-            cnorm = cdotc (n, resid, 1, workd(ipj), 1)
+            call cdotc(cnorm, n, resid, 1, workd(ipj), 1)
             call cgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
             rnorm = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
             rnorm = pscnorm2(comm, n, resid, 1)
          end if
@@ -747,11 +745,11 @@ c
 c        %-----------------------------------------------------%
 c        | Compute the B-norm of the corrected residual r_{j}. |
 c        %-----------------------------------------------------%
 c 
          if (bmat .eq. 'G') then
-             cnorm = cdotc (n, resid, 1, workd(ipj), 1)
+             call cdotc(cnorm, n, resid, 1, workd(ipj), 1)
              call cgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
              rnorm1 = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
              rnorm1 = pscnorm2(comm, n, resid, 1)
          end if
--- PARPACK/SRC/BLACS/pcnaup2.f
+++ PARPACK/SRC/BLACS/pcnaup2.f
@@ -244,22 +244,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ccopy, pcgetv0, pcnaitr, pcneigh, pcngets, pcnapps,
-     &           csortc, cswap, pcmout, pcvout, pivout, arscnd
+      external   ccopy, cdotc, pcgetv0, pcnaitr, pcneigh, pcngets,
+     &           pcnapps, csortc, cswap, pcmout, pcvout, pivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
 c     %--------------------%
 c
-      Complex
-     &           cdotc
       Real  
      &           pscnorm2, pslamch, slapy2
-      external   cdotc, pscnorm2, pslamch, slapy2
+      external   pscnorm2, pslamch, slapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -765,11 +763,11 @@ c
             call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
          if (bmat .eq. 'G') then
-            cmpnorm = cdotc (n, resid, 1, workd, 1)
+            call cdotc(cmpnorm, n, resid, 1, workd, 1)
             call cgsum2d( comm, 'All', ' ', 1, 1, cmpnorm, 1, -1, -1 )
             rnorm = sqrt(slapy2(real(cmpnorm),aimag(cmpnorm)))
          else if (bmat .eq. 'I') then
             rnorm = pscnorm2(comm, n, resid, 1)
          end if
--- PARPACK/SRC/BLACS/pcneupd.f
+++ PARPACK/SRC/BLACS/pcneupd.f
@@ -325,11 +325,11 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ccopy ,cgeru,cgeqr2,clacpy,pcmout,
+      external   ccopy,cdotc,cgeru,cgeqr2,clacpy,pcmout,
      &           cunm2r,ctrmm,pcvout,pivout,
      &           clahqr
 c  
 c     %--------------------%
 c     | External Functions |
@@ -337,14 +337,10 @@ c     %--------------------%
 c
       Real
      &           scnrm2,pslamch,slapy2
       external   scnrm2,pslamch,slapy2
 c
-      Complex
-     &           cdotc
-      external   cdotc
-c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
       intrinsic    abs
@@ -741,11 +737,11 @@ c                 | Schur basis of H wit
 c                 | Note that the eigenvector matrix of T is |
 c                 | upper triangular, thus the length of the |
 c                 | inner product can be set to j.           |
 c                 %------------------------------------------%
 c 
-                  workev(j) = cdotc(j, workl(ihbds), 1,
+                  call cdotc(workev(j), j, workl(ihbds), 1,
      &                        workl(invsub+(j-1)*ldq), 1)
  40         continue
 c
             if (msglvl .gt. 2) then
                call ccopy(nconv, workl(invsub+ncv-1), ldq,
--- PARPACK/SRC/BLACS/pzgetv0.f
+++ PARPACK/SRC/BLACS/pzgetv0.f
@@ -186,21 +186,19 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external    zcopy , zgemv , pzlarnv , pzvout , arscnd
+      external    zcopy , zdotc , zgemv , pzlarnv , pzvout , arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
       Double precision  
      &           pdznorm2 , dlapy2 
-      Complex*16 
-     &           zdotc 
-      external   zdotc , pdznorm2 , dlapy2 
+      external   pdznorm2 , dlapy2 
 c
 c     %-----------------%
 c     | Data Statements |
 c     %-----------------%
 c
@@ -333,11 +331,11 @@ c
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       first = .FALSE.
       if (bmat .eq. 'G') then
-          cnorm = zdotc  (n, resid, 1, workd, 1)
+          call zdotc(cnorm, n, resid, 1, workd, 1)
           call zgsum2d ( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
           rnorm0 = sqrt(dlapy2 (dble (cnorm),dimag (cnorm)))
       else if (bmat .eq. 'I') then
            rnorm0 = pdznorm2 ( comm, n, resid, 1)
       end if
@@ -392,11 +390,11 @@ c
          call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       if (bmat .eq. 'G') then
-         cnorm = zdotc  (n, resid, 1, workd, 1)
+         call zdotc(cnorm, n, resid, 1, workd, 1)
          call zgsum2d ( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
          rnorm = sqrt(dlapy2 (dble (cnorm),dimag (cnorm)))
       else if (bmat .eq. 'I') then
          rnorm = pdznorm2 (comm, n, resid, 1)
       end if
--- PARPACK/SRC/BLACS/pznaitr.f
+++ PARPACK/SRC/BLACS/pznaitr.f
@@ -293,22 +293,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zaxpy, zcopy, zscal, zgemv, pzgetv0, dlabad, 
+      external   zaxpy, zcopy, zdotc, zscal, zgemv, pzgetv0, dlabad, 
      &           zdscal, pzvout, pzmout, pivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
-      Complex*16
-     &           zdotc 
       Double precision            
      &           pdlamch, pdznorm2, zlanhs, dlapy2
-      external   zdotc, pdznorm2, zlanhs, pdlamch, dlapy2
+      external   pdznorm2, zlanhs, pdlamch, dlapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -571,11 +569,11 @@ c        %------------------------------
 c        | The following is needed for STEP 5. |
 c        | Compute the B-norm of OP*v_{j}.     |
 c        %-------------------------------------%
 c
          if (bmat .eq. 'G') then
-             cnorm = zdotc (n, resid, 1, workd(ipj), 1)
+             call zdotc(cnorm, n, resid, 1, workd(ipj), 1)
              call zgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
              wnorm = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
              wnorm = pdznorm2(comm, n, resid, 1)
          end if
@@ -645,11 +643,11 @@ c
 c        %------------------------------%
 c        | Compute the B-norm of r_{j}. |
 c        %------------------------------%
 c
          if (bmat .eq. 'G') then
-            cnorm = zdotc (n, resid, 1, workd(ipj), 1)
+            call zdotc(cnorm, n, resid, 1, workd(ipj), 1)
             call zgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
             rnorm = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
             rnorm = pdznorm2(comm, n, resid, 1)
          end if
@@ -747,11 +745,11 @@ c
 c        %-----------------------------------------------------%
 c        | Compute the B-norm of the corrected residual r_{j}. |
 c        %-----------------------------------------------------%
 c 
          if (bmat .eq. 'G') then
-             cnorm = zdotc (n, resid, 1, workd(ipj), 1)
+             call zdotc(cnorm, n, resid, 1, workd(ipj), 1)
              call zgsum2d( comm, 'All', ' ', 1, 1, cnorm, 1, -1, -1 )
              rnorm1 = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
              rnorm1 = pdznorm2(comm, n, resid, 1)
          end if
--- PARPACK/SRC/BLACS/pznaup2.f
+++ PARPACK/SRC/BLACS/pznaup2.f
@@ -244,22 +244,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zcopy, pzgetv0, pznaitr, pzneigh, pzngets, pznapps,
-     &           zsortc, zswap, pzmout, pzvout, pivout, arscnd
+      external   zcopy, zdotc, pzgetv0, pznaitr, pzneigh, pzngets,
+     &           pznapps, zsortc, zswap, pzmout, pzvout, pivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
 c     %--------------------%
 c
-      Complex*16
-     &           zdotc
       Double precision  
      &           pdznorm2, pdlamch, dlapy2
-      external   zdotc, pdznorm2, pdlamch, dlapy2
+      external   pdznorm2, pdlamch, dlapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -765,11 +763,11 @@ c
             call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
          if (bmat .eq. 'G') then
-            cmpnorm = zdotc (n, resid, 1, workd, 1)
+            call zdotc(cmpnorm, n, resid, 1, workd, 1)
             call zgsum2d( comm, 'All', ' ', 1, 1, cmpnorm, 1, -1, -1 )
             rnorm = sqrt(dlapy2(dble(cmpnorm),dimag(cmpnorm)))
          else if (bmat .eq. 'I') then
             rnorm = pdznorm2(comm, n, resid, 1)
          end if
--- PARPACK/SRC/BLACS/pzneupd.f
+++ PARPACK/SRC/BLACS/pzneupd.f
@@ -325,11 +325,11 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zcopy ,zgeru,zgeqr2,zlacpy,pzmout,
+      external   zcopy,zdotc,zgeru,zgeqr2,zlacpy,pzmout,
      &           zunm2r,ztrmm,pzvout,pivout,
      &           zlahqr
 c  
 c     %--------------------%
 c     | External Functions |
@@ -337,14 +337,10 @@ c     %--------------------%
 c
       Double precision
      &           dznrm2,pdlamch,dlapy2
       external   dznrm2,pdlamch,dlapy2
 c
-      Complex*16
-     &           zdotc
-      external   zdotc
-c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
       intrinsic    abs
@@ -741,11 +737,11 @@ c                 | Schur basis of H wit
 c                 | Note that the eigenvector matrix of T is |
 c                 | upper triangular, thus the length of the |
 c                 | inner product can be set to j.           |
 c                 %------------------------------------------%
 c 
-                  workev(j) = zdotc(j, workl(ihbds), 1,
+                  call zdotc( workev(j), j, workl(ihbds), 1,
      &                        workl(invsub+(j-1)*ldq), 1)
  40         continue
 c
             if (msglvl .gt. 2) then
                call zcopy(nconv, workl(invsub+ncv-1), ldq,
--- PARPACK/SRC/MPI/pcgetv0.f
+++ PARPACK/SRC/MPI/pcgetv0.f
@@ -189,21 +189,19 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external    ccopy, cgemv, pclarnv, pcvout, arscnd
+      external    ccopy, cdotc, cgemv, pclarnv, pcvout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
       Real  
      &           pscnorm2, slapy2
-      Complex 
-     &           cdotc
-      external   cdotc, pscnorm2, slapy2
+      external   pscnorm2, slapy2
 c
 c     %-----------------%
 c     | Data Statements |
 c     %-----------------%
 c
@@ -329,11 +327,11 @@ c
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       first = .FALSE.
       if (bmat .eq. 'G') then
-          cnorm_buf = cdotc (n, resid, 1, workd, 1)
+          call cdotc(cnorm_buff, n, resid, 1, workd, 1)
           call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &          MPI_COMPLEX, MPI_SUM, comm, ierr )
           rnorm0 = sqrt(slapy2(real (cnorm),aimag(cnorm)))
       else if (bmat .eq. 'I') then
            rnorm0 = pscnorm2( comm, n, resid, 1)
@@ -390,11 +388,11 @@ c
          call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       if (bmat .eq. 'G') then
-         cnorm_buf = cdotc (n, resid, 1, workd, 1)
+         call cdotc(cnorm_buff, n, resid, 1, workd, 1)
          call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &            MPI_COMPLEX, MPI_SUM, comm, ierr )
          rnorm = sqrt(slapy2(real (cnorm),aimag(cnorm)))
       else if (bmat .eq. 'I') then
          rnorm = pscnorm2(comm, n, resid, 1)
--- PARPACK/SRC/MPI/pcnaitr.f
+++ PARPACK/SRC/MPI/pcnaitr.f
@@ -296,22 +296,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   caxpy, ccopy, cscal, cgemv, pcgetv0, slabad, 
+      external   caxpy, ccopy, cdotc, cscal, cgemv, pcgetv0, slabad, 
      &           csscal, pcvout, pcmout, pivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
-      Complex
-     &           cdotc 
       Real            
      &           pslamch, pscnorm2, clanhs, slapy2
-      external   cdotc, pscnorm2, clanhs, pslamch, slapy2
+      external   pscnorm2, clanhs, pslamch, slapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -574,11 +572,11 @@ c        %------------------------------
 c        | The following is needed for STEP 5. |
 c        | Compute the B-norm of OP*v_{j}.     |
 c        %-------------------------------------%
 c
          if (bmat .eq. 'G') then
-             cnorm_buf = cdotc (n, resid, 1, workd(ipj), 1)
+             call cdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_COMPLEX, MPI_SUM, comm, ierr )
              wnorm = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
              wnorm = pscnorm2(comm, n, resid, 1)
@@ -650,11 +648,11 @@ c
 c        %------------------------------%
 c        | Compute the B-norm of r_{j}. |
 c        %------------------------------%
 c
          if (bmat .eq. 'G') then
-            cnorm_buf = cdotc (n, resid, 1, workd(ipj), 1)
+            call cdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_COMPLEX, MPI_SUM, comm, ierr )
             rnorm = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
             rnorm = pscnorm2(comm, n, resid, 1)
@@ -754,11 +752,11 @@ c
 c        %-----------------------------------------------------%
 c        | Compute the B-norm of the corrected residual r_{j}. |
 c        %-----------------------------------------------------%
 c 
          if (bmat .eq. 'G') then
-             cnorm_buf = cdotc (n, resid, 1, workd(ipj), 1)
+             call cdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_COMPLEX, MPI_SUM, comm, ierr )
              rnorm1 = sqrt( slapy2(real(cnorm),aimag(cnorm)) )
          else if (bmat .eq. 'I') then
              rnorm1 = pscnorm2(comm, n, resid, 1)
--- PARPACK/SRC/MPI/pcnaup2.f
+++ PARPACK/SRC/MPI/pcnaup2.f
@@ -247,22 +247,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ccopy, pcgetv0, pcnaitr, pcneigh, pcngets, pcnapps,
-     &           csortc, cswap, pcmout, pcvout, pivout, arscnd
+      external   ccopy, cdotc, pcgetv0, pcnaitr, pcneigh, pcngets,
+     &           pcnapps, csortc, cswap, pcmout, pcvout, pivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
 c     %--------------------%
 c
-      Complex
-     &           cdotc
       Real  
      &           pscnorm2, pslamch, slapy2
-      external   cdotc, pscnorm2, pslamch, slapy2
+      external   pscnorm2, pslamch, slapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -768,11 +766,11 @@ c
             call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
          if (bmat .eq. 'G') then
-            cmpnorm_buf = cdotc (n, resid, 1, workd, 1)
+            call cdotc(cmpnorm_buf, n, resid, 1, workd, 1)
             call MPI_ALLREDUCE( cmpnorm_buf, cmpnorm, 1,
      &               MPI_COMPLEX, MPI_SUM, comm, ierr )
             rnorm = sqrt(slapy2(real(cmpnorm),aimag(cmpnorm)))
          else if (bmat .eq. 'I') then
             rnorm = pscnorm2(comm, n, resid, 1)
--- PARPACK/SRC/MPI/pcneupd.f
+++ PARPACK/SRC/MPI/pcneupd.f
@@ -325,11 +325,11 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   ccopy ,cgeru,cgeqr2,clacpy,pcmout,
+      external   ccopy,cdotc,cgeru,cgeqr2,clacpy,pcmout,
      &           cunm2r,ctrmm,pcvout,pivout,
      &           clahqr
 c  
 c     %--------------------%
 c     | External Functions |
@@ -337,14 +337,10 @@ c     %--------------------%
 c
       Real
      &           scnrm2,pslamch,slapy2
       external   scnrm2,pslamch,slapy2
 c
-      Complex
-     &           cdotc
-      external   cdotc
-c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
       intrinsic    abs
@@ -741,11 +737,11 @@ c                 | Schur basis of H wit
 c                 | Note that the eigenvector matrix of T is |
 c                 | upper triangular, thus the length of the |
 c                 | inner product can be set to j.           |
 c                 %------------------------------------------%
 c 
-                  workev(j) = cdotc(j, workl(ihbds), 1,
+                  call cdotc(workev(j), j, workl(ihbds), 1,
      &                        workl(invsub+(j-1)*ldq), 1)
  40         continue
 c
             if (msglvl .gt. 2) then
                call ccopy(nconv, workl(invsub+ncv-1), ldq,
--- PARPACK/SRC/MPI/pzgetv0.f
+++ PARPACK/SRC/MPI/pzgetv0.f
@@ -189,21 +189,19 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external    zcopy , zgemv , pzlarnv , pzvout , arscnd
+      external    zcopy , zdotc , zgemv , pzlarnv , pzvout , arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
       Double precision  
      &           pdznorm2 , dlapy2 
-      Complex*16 
-     &           zdotc 
-      external   zdotc , pdznorm2 , dlapy2 
+      external   pdznorm2 , dlapy2 
 c
 c     %-----------------%
 c     | Data Statements |
 c     %-----------------%
 c
@@ -329,11 +327,11 @@ c
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       first = .FALSE.
       if (bmat .eq. 'G') then
-          cnorm_buf = zdotc  (n, resid, 1, workd, 1)
+          call zdotc(cnorm_buf, n, resid, 1, workd, 1)
           call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &          MPI_DOUBLE_COMPLEX , MPI_SUM, comm, ierr )
           rnorm0 = sqrt(dlapy2 (dble (cnorm),dimag (cnorm)))
       else if (bmat .eq. 'I') then
            rnorm0 = pdznorm2 ( comm, n, resid, 1)
@@ -390,11 +388,11 @@ c
          call arscnd (t3)
          tmvbx = tmvbx + (t3 - t2)
       end if
 c 
       if (bmat .eq. 'G') then
-         cnorm_buf = zdotc  (n, resid, 1, workd, 1)
+         call zdotc(cnorm_buf, n, resid, 1, workd, 1)
          call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &            MPI_DOUBLE_COMPLEX , MPI_SUM, comm, ierr )
          rnorm = sqrt(dlapy2 (dble (cnorm),dimag (cnorm)))
       else if (bmat .eq. 'I') then
          rnorm = pdznorm2 (comm, n, resid, 1)
--- PARPACK/SRC/MPI/pznaitr.f
+++ PARPACK/SRC/MPI/pznaitr.f
@@ -296,22 +296,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zaxpy, zcopy, zscal, zgemv, pzgetv0, dlabad, 
+      external   zaxpy, zcopy, zdotc, zscal, zgemv, pzgetv0, dlabad, 
      &           zdscal, pzvout, pzmout, pivout, arscnd
 c
 c     %--------------------%
 c     | External Functions |
 c     %--------------------%
 c
-      Complex*16
-     &           zdotc 
       Double precision            
      &           pdlamch, pdznorm2, zlanhs, dlapy2
-      external   zdotc, pdznorm2, zlanhs, pdlamch, dlapy2
+      external   pdznorm2, zlanhs, pdlamch, dlapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -574,11 +572,11 @@ c        %------------------------------
 c        | The following is needed for STEP 5. |
 c        | Compute the B-norm of OP*v_{j}.     |
 c        %-------------------------------------%
 c
          if (bmat .eq. 'G') then
-             cnorm_buf = zdotc (n, resid, 1, workd(ipj), 1)
+             call zdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_DOUBLE_COMPLEX, MPI_SUM, comm, ierr )
              wnorm = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
              wnorm = pdznorm2(comm, n, resid, 1)
@@ -650,11 +648,11 @@ c
 c        %------------------------------%
 c        | Compute the B-norm of r_{j}. |
 c        %------------------------------%
 c
          if (bmat .eq. 'G') then
-            cnorm_buf = zdotc (n, resid, 1, workd(ipj), 1)
+            call zdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_DOUBLE_COMPLEX, MPI_SUM, comm, ierr )
             rnorm = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
             rnorm = pdznorm2(comm, n, resid, 1)
@@ -754,11 +752,11 @@ c
 c        %-----------------------------------------------------%
 c        | Compute the B-norm of the corrected residual r_{j}. |
 c        %-----------------------------------------------------%
 c 
          if (bmat .eq. 'G') then
-             cnorm_buf = zdotc (n, resid, 1, workd(ipj), 1)
+             call zdotc(cnorm_buf, n, resid, 1, workd(ipj), 1)
             call MPI_ALLREDUCE( cnorm_buf, cnorm, 1,
      &           MPI_DOUBLE_COMPLEX, MPI_SUM, comm, ierr )
              rnorm1 = sqrt( dlapy2(dble(cnorm),dimag(cnorm)) )
          else if (bmat .eq. 'I') then
              rnorm1 = pdznorm2(comm, n, resid, 1)
--- PARPACK/SRC/MPI/pznaup2.f
+++ PARPACK/SRC/MPI/pznaup2.f
@@ -247,22 +247,20 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zcopy, pzgetv0, pznaitr, pzneigh, pzngets, pznapps,
-     &           zsortc, zswap, pzmout, pzvout, pivout, arscnd
+      external   zcopy, zdotc, pzgetv0, pznaitr, pzneigh, pzngets,
+     &           pznapps, zsortc, zswap, pzmout, pzvout, pivout, arscnd
 c
 c     %--------------------%
 c     | External functions |
 c     %--------------------%
 c
-      Complex*16
-     &           zdotc
       Double precision  
      &           pdznorm2, pdlamch, dlapy2
-      external   zdotc, pdznorm2, pdlamch, dlapy2
+      external   pdznorm2, pdlamch, dlapy2
 c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
@@ -768,11 +766,11 @@ c
             call arscnd (t3)
             tmvbx = tmvbx + (t3 - t2)
          end if
 c 
          if (bmat .eq. 'G') then
-            cmpnorm_buf = zdotc (n, resid, 1, workd, 1)
+            call zdotc(cmpnorm_buf, n, resid, 1, workd, 1)
             call MPI_ALLREDUCE( cmpnorm_buf, cmpnorm, 1,
      &               MPI_DOUBLE_COMPLEX, MPI_SUM, comm, ierr )
             rnorm = sqrt(dlapy2(dble(cmpnorm),dimag(cmpnorm)))
          else if (bmat .eq. 'I') then
             rnorm = pdznorm2(comm, n, resid, 1)
--- PARPACK/SRC/MPI/pzneupd.f
+++ PARPACK/SRC/MPI/pzneupd.f
@@ -325,11 +325,11 @@ c
 c
 c     %----------------------%
 c     | External Subroutines |
 c     %----------------------%
 c
-      external   zcopy ,zgeru,zgeqr2,zlacpy,pzmout,
+      external   zcopy,zdotc,zgeru,zgeqr2,zlacpy,pzmout,
      &           zunm2r,ztrmm,pzvout,pivout,
      &           zlahqr
 c  
 c     %--------------------%
 c     | External Functions |
@@ -337,14 +337,10 @@ c     %--------------------%
 c
       Double precision
      &           dznrm2,pdlamch,dlapy2
       external   dznrm2,pdlamch,dlapy2
 c
-      Complex*16
-     &           zdotc
-      external   zdotc
-c
 c     %---------------------%
 c     | Intrinsic Functions |
 c     %---------------------%
 c
       intrinsic    abs
@@ -741,11 +737,11 @@ c                 | Schur basis of H wit
 c                 | Note that the eigenvector matrix of T is |
 c                 | upper triangular, thus the length of the |
 c                 | inner product can be set to j.           |
 c                 %------------------------------------------%
 c 
-                  workev(j) = zdotc(j, workl(ihbds), 1,
+                  call zdotc(workev(j), j, workl(ihbds), 1,
      &                        workl(invsub+(j-1)*ldq), 1)
  40         continue
 c
             if (msglvl .gt. 2) then
                call zcopy(nconv, workl(invsub+ncv-1), ldq,
