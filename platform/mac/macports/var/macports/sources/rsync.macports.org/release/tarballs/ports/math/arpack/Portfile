# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 143724 2015-12-18 23:40:58Z mmoll@macports.org $

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           mpi 1.0
PortGroup           github 1.0

github.setup        opencollab arpack-ng 3.3.0
name                arpack
revision            0
categories          math
license             BSD
platforms           darwin
maintainers         openmaintainer mmoll
description         Package for solving large-scale eigenvalue problems
long_description    ARPACK is a collection of Fortran77 subroutines designed to \
                    solve large scale eigenvalue problems. Parallel ARPACK (PARPACK) \
                    is included if built with an MPI variant.
worksrcdir          ${name}-ng-${version}

checksums           rmd160  76f87a65f9c6e6a2a8d5e31acc2e404fd755b473 \
                    sha256  2d3d0d802fb60a26502c7cace31ef0066ede2b00c193fb2bca437ee54185b617

mpi.setup           require_fortran

use_autoreconf      yes
configure.args      home=${worksrcpath} --disable-mpi

if {![variant_isset universal]} {
    if {${build_arch} eq "x86_64" || ${build_arch} eq "ppc64"} {
        configure.fflags-append -m64
    } else {
        configure.fflags-append -m32
    }
}

# LDFLAGS needs to be cleared to avoid it having a "-arch" option, considered illegal by gfortran
# also, if it has ${prefix}/lib it will prevent +accelerate from working if atlas is present.
configure.args-append LDFLAGS=''

pre-configure {
    if {${os.platform} eq "darwin" && ${os.major} < 9} {
        ui_error "${name} ${version} requires Mac OS X 10.5 or greater"
        return -code error "incompatible Mac OS X version"
    }

    if {[mpi_variant_isset]} {
        configure.args-delete  --disable-mpi
        configure.args-append  --enable-mpi
        configure.args-append  F77=${mpi.f77} \
                               MPIF77=${mpi.f77}
    }
}

# Fortran compilers can not cross-compile
if {${os.arch} eq "i386"} {
    set universal_archs_supported "i386 x86_64"
} else {
    set universal_archs_supported "ppc ppc64"
}

variant accelerate conflicts atlas description {build with Accelerate framework} {
    # the change of LDFLAGS is required to avoid linking against the ATLAS ones
    # if they are present; if we specify /usr/lib/libblas.dylib directly, the
    # linking fails. http://forge.scilab.org/index.php/p/arpack-ng/issues/1220/
    configure.args-delete  LDFLAGS=''
    configure.args-append  LDFLAGS='/usr/lib/libblas.dylib /usr/lib/liblapack.dylib' --with-blas="-lblas -llapack"
}

variant atlas conflicts accelerate description {build with atlas} {
    depends_lib-append port:atlas
    configure.args-append --with-blas="-L${prefix}/lib -lsatlas"
}

# OpenBlas doesn't appear to have the cheev function.
# Renable variant when it does, add variant conflicts, and update default_variant logic below
# variant openblas conflicts accelerate atlas description {build with openblas} {
#     depends_lib-append path:lib/libopenblas.dylib:OpenBLAS
#     configure.args-append --with-blas="-L${prefix}/lib -lopenblas"
# }

if {![variant_isset atlas]} {
    default_variants +accelerate
}

post-destroot {
    reinplace "s|/usr|${prefix}|g" ${destroot}${prefix}/lib/pkgconfig/arpack.pc
}
