--- CMakeLists.txt.orig
+++ CMakeLists.txt
@@ -109,6 +109,11 @@ if(NOT FREETYPE2_FOUND)
 	message(FATAL_ERROR "freetype2 required to compile gr-fosphor")
 endif()
 
+find_package(libpng)
+if(NOT LIBPNG_FOUND)
+	message(FATAL_ERROR "libpng required to compile gr-fosphor")
+endif()
+
 # Optional
 find_package(GLFW3)
 
--- lib/CMakeLists.txt.orig
+++ lib/CMakeLists.txt
@@ -39,12 +39,14 @@ include_directories(
 	${OPENGL_INCLUDE_DIRS}
 	${OPENCL_INCLUDE_DIRS}
 	${FREETYPE2_INCLUDE_DIRS}
+	${LIBPNG_INCLUDE_DIRS}
 	${Boost_INCLUDE_DIR}
 )
 link_directories(
 	${OPENGL_LIBRARY_DIRS}
 	${OPENCL_LIBRARY_DIRS}
 	${FREETYPE2_LIBRARY_DIRS}
+	${LIBPNG_LIBRARY_DIRS}
 	${Boost_LIBRARY_DIRS}
 )
 
@@ -86,6 +88,7 @@ list(APPEND fosphor_libraries
 	${OPENGL_LIBRARIES}
 	${OPENCL_LIBRARIES}
 	${FREETYPE2_LIBRARIES}
+	${LIBPNG_LIBRARIES}
 	${Boost_LIBRARIES}
 	${GNURADIO_ALL_LIBRARIES}
 	${CMAKE_DL_LIBS}
--- /dev/null
+++ cmake/Modules/Findlibpng.cmake
@@ -0,0 +1,26 @@
+if(NOT LIBPNG_FOUND)
+  INCLUDE(FindPkgConfig)
+  pkg_check_modules(LIBPNG_PKG libpng)
+  find_path(LIBPNG_INCLUDE_DIRS
+    NAMES png.h
+    HINTS ${LIBPNG_PKG_INCLUDE_DIRS}
+    NO_DEFAULT_PATH
+  )
+
+  find_library(LIBPNG_LIBRARIES
+    NAMES ${LIBPNG_PKG_LIBRARIES} png
+    HINTS ${LIBPNG_PKG_LIBRARY_DIRS}
+    NO_DEFAULT_PATH
+  )
+
+  if(LIBPNG_INCLUDE_DIRS AND LIBPNG_LIBRARIES)
+    set(LIBPNG_FOUND TRUE CACHE INTERNAL "LIBPNG found")
+    message(STATUS "Found LIBPNG: ${LIBPNG_INCLUDE_DIRS}, ${LIBPNG_LIBRARIES}")
+  else(LIBPNG_INCLUDE_DIRS AND LIBPNG_LIBRARIES)
+    set(LIBPNG_FOUND FALSE CACHE INTERNAL "LIBPNG found")
+    message(STATUS "LIBPNG not found.")
+  endif(LIBPNG_INCLUDE_DIRS AND LIBPNG_LIBRARIES)
+
+  mark_as_advanced(LIBPNG_INCLUDE_DIRS LIBPNG_LIBRARIES)
+
+endif(NOT LIBPNG_FOUND)
