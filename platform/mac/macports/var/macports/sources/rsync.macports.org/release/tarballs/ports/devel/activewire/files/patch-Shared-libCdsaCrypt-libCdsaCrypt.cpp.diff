--- Shared/libCdsaCrypt/libCdsaCrypt.cpp.orig	2006-11-12 12:07:56.000000000 -0600
+++ Shared/libCdsaCrypt/libCdsaCrypt.cpp	2010-10-04 22:30:27.000000000 -0500
@@ -59,17 +59,17 @@
 /*
  * Standard app-level memory functions required by CDSA.
  */
-void * appMalloc (uint32 size, void *allocRef) {
+void * appMalloc (CSSM_SIZE size, void *allocRef) {
 	return( malloc(size) );
 }
 void appFree (void *mem_ptr, void *allocRef) {
 	free(mem_ptr);
  	return;
 }
-void * appRealloc (void *ptr, uint32 size, void *allocRef) {
+void * appRealloc (void *ptr, CSSM_SIZE size, void *allocRef) {
 	return( realloc( ptr, size ) );
 }
-void * appCalloc (uint32 num, uint32 size, void *allocRef) {
+void * appCalloc (uint32 num, CSSM_SIZE size, void *allocRef) {
 	return( calloc( num, size ) );
 }
 static CSSM_API_MEMORY_FUNCS memFuncs = {
@@ -545,7 +545,7 @@
 	CSSM_RETURN 	crtn;
 	CSSM_CC_HANDLE	ccHandle;
 	CSSM_DATA		remData = {0, NULL};
-	uint32			bytesEncrypted;
+	CSSM_SIZE		bytesEncrypted;
 	
 	crtn = genCryptHandle(cspHandle, key, &ivCommon, &ccHandle);
 	if(crtn) {
@@ -611,7 +611,7 @@
 	CSSM_RETURN 	crtn;
 	CSSM_CC_HANDLE	ccHandle;
 	CSSM_DATA		remData = {0, NULL};
-	uint32			bytesDecrypted;
+	CSSM_SIZE		bytesDecrypted;
 	
 	crtn = genCryptHandle(cspHandle, key, &ivCommon, &ccHandle);
 	if(crtn) {
@@ -719,7 +719,7 @@
 
 	/* 1. any more data to encrypt? */
 	if(plainText && plainText->Length) {
-		uint32 bytesEncrypted;
+		CSSM_SIZE bytesEncrypted;
 		
 		crtn = CSSM_EncryptDataUpdate(ccHandle,
 			plainText,
@@ -778,7 +778,7 @@
 
 	/* 1. any more data to decrypt? */
 	if(cipherText && cipherText->Length) {
-		uint32 bytesDecrypted;
+		CSSM_SIZE bytesDecrypted;
 		
 		crtn = CSSM_DecryptDataUpdate(ccHandle,
 			cipherText,
