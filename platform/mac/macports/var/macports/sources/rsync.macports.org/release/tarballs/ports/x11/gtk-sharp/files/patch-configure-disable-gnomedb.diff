*** configure.orig	2008-01-16 16:31:54.000000000 +0100
--- configure	2008-01-16 16:32:30.000000000 +0100
***************
*** 22030,22135 ****
  
  
  enable_gnomedb=no
- if test "x$enable_gnome" = "xyes"; then
- if test "x$enable_gda" = "xyes"; then
- 
-   succeeded=no
- 
-   if test -z "$PKG_CONFIG"; then
-     # Extract the first word of "pkg-config", so it can be a program name with args.
- set dummy pkg-config; ac_word=$2
- echo "$as_me:$LINENO: checking for $ac_word" >&5
- echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
- if test "${ac_cv_path_PKG_CONFIG+set}" = set; then
-   echo $ECHO_N "(cached) $ECHO_C" >&6
- else
-   case $PKG_CONFIG in
-   [\\/]* | ?:[\\/]*)
-   ac_cv_path_PKG_CONFIG="$PKG_CONFIG" # Let the user override the test with a path.
-   ;;
-   *)
-   as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
- for as_dir in $PATH
- do
-   IFS=$as_save_IFS
-   test -z "$as_dir" && as_dir=.
-   for ac_exec_ext in '' $ac_executable_extensions; do
-   if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
-     ac_cv_path_PKG_CONFIG="$as_dir/$ac_word$ac_exec_ext"
-     echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
-     break 2
-   fi
- done
- done
- 
-   test -z "$ac_cv_path_PKG_CONFIG" && ac_cv_path_PKG_CONFIG="no"
-   ;;
- esac
- fi
- PKG_CONFIG=$ac_cv_path_PKG_CONFIG
- 
- if test -n "$PKG_CONFIG"; then
-   echo "$as_me:$LINENO: result: $PKG_CONFIG" >&5
- echo "${ECHO_T}$PKG_CONFIG" >&6
- else
-   echo "$as_me:$LINENO: result: no" >&5
- echo "${ECHO_T}no" >&6
- fi
- 
-   fi
- 
-   if test "$PKG_CONFIG" = "no" ; then
-      echo "*** The pkg-config script could not be found. Make sure it is"
-      echo "*** in your path, or set the PKG_CONFIG environment variable"
-      echo "*** to the full path to pkg-config."
-      echo "*** Or see http://www.freedesktop.org/software/pkgconfig to get pkg-config."
-   else
-      PKG_CONFIG_MIN_VERSION=0.9.0
-      if $PKG_CONFIG --atleast-pkgconfig-version $PKG_CONFIG_MIN_VERSION; then
-         echo "$as_me:$LINENO: checking for libgnomedb >= $LIBGDA_REQUIRED_VERSION" >&5
- echo $ECHO_N "checking for libgnomedb >= $LIBGDA_REQUIRED_VERSION... $ECHO_C" >&6
- 
-         if $PKG_CONFIG --exists "libgnomedb >= $LIBGDA_REQUIRED_VERSION" ; then
-             echo "$as_me:$LINENO: result: yes" >&5
- echo "${ECHO_T}yes" >&6
-             succeeded=yes
  
-             echo "$as_me:$LINENO: checking LIBGNOMEDB_DEPENDENCIES_CFLAGS" >&5
- echo $ECHO_N "checking LIBGNOMEDB_DEPENDENCIES_CFLAGS... $ECHO_C" >&6
-             LIBGNOMEDB_DEPENDENCIES_CFLAGS=`$PKG_CONFIG --cflags "libgnomedb >= $LIBGDA_REQUIRED_VERSION"`
-             echo "$as_me:$LINENO: result: $LIBGNOMEDB_DEPENDENCIES_CFLAGS" >&5
- echo "${ECHO_T}$LIBGNOMEDB_DEPENDENCIES_CFLAGS" >&6
- 
-             echo "$as_me:$LINENO: checking LIBGNOMEDB_DEPENDENCIES_LIBS" >&5
- echo $ECHO_N "checking LIBGNOMEDB_DEPENDENCIES_LIBS... $ECHO_C" >&6
-             LIBGNOMEDB_DEPENDENCIES_LIBS=`$PKG_CONFIG --libs "libgnomedb >= $LIBGDA_REQUIRED_VERSION"`
-             echo "$as_me:$LINENO: result: $LIBGNOMEDB_DEPENDENCIES_LIBS" >&5
- echo "${ECHO_T}$LIBGNOMEDB_DEPENDENCIES_LIBS" >&6
-         else
-             LIBGNOMEDB_DEPENDENCIES_CFLAGS=""
-             LIBGNOMEDB_DEPENDENCIES_LIBS=""
-             ## If we have a custom action on failure, don't print errors, but
-             ## do set a variable so people can do so.
-             LIBGNOMEDB_DEPENDENCIES_PKG_ERRORS=`$PKG_CONFIG --errors-to-stdout --print-errors "libgnomedb >= $LIBGDA_REQUIRED_VERSION"`
- 
-         fi
- 
- 
- 
-      else
-         echo "*** Your version of pkg-config is too old. You need version $PKG_CONFIG_MIN_VERSION or newer."
-         echo "*** See http://www.freedesktop.org/software/pkgconfig"
-      fi
-   fi
- 
-   if test $succeeded = yes; then
-      enable_gnomedb=yes
-   else
-      enable_gnomedb=no
-   fi
- 
- fi
- fi
  
  RSVG_REQUIRED_VERSION=2.0.1
  
--- 22030,22036 ----
