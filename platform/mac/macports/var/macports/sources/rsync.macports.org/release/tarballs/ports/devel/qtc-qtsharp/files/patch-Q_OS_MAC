diff -u -r clib/qtc/qt_QApplication.cpp qtc-qtsharp-20030416.new/clib/qtc/qt_QApplication.cpp
--- clib/qtc/qt_QApplication.cpp	Sun Dec  2 17:19:36 2001
+++ qtc-qtsharp-20030416.new/clib/qtc/qt_QApplication.cpp	Sat Mar 20 21:05:42 2004
@@ -28,8 +28,10 @@
 	QApplicationBridge(int& argc, char* * argv) : QApplication(argc, argv) {}
 	QApplicationBridge(int& argc, char* * argv, bool GUIenabled) : QApplication(argc, argv, GUIenabled) {}
 	QApplicationBridge(int& argc, char* * argv, Type arg1) : QApplication(argc, argv, arg1) {}
+#ifndef Q_WS_MAC
 	QApplicationBridge(Display* dpy, HANDLE visual, HANDLE cmap) : QApplication(dpy, visual, cmap) {}
 	QApplicationBridge(Display* dpy, int argc, char* * argv, HANDLE visual, HANDLE cmap) : QApplication(dpy, argc, argv, visual, cmap) {}
+#endif
 	~QApplicationBridge() {}
 	void childEvent(QChildEvent* arg1) {
 		if (Qt_EventDelegate == 0L || !(*Qt_EventDelegate)(this, "childEvent", arg1, "QChildEvent")) {
@@ -149,9 +151,11 @@
 //int qt_QApplication_x11EventFilter( qt_QApplication* instPointer,XEvent* arg1){
 //	return (int) ((QApplicationBridge*)instPointer)->x11EventFilter((XEvent*)arg1);
 //}
+#ifndef Q_WS_MAC
 int qt_QApplication_x11ClientMessage( qt_QApplication* instPointer,qt_QWidget * arg1, XEvent* arg2, int passive_only){
 	return (int) ((QApplicationBridge*)instPointer)->x11ClientMessage((QWidget*)arg1, (XEvent*)arg2, (bool)passive_only);
 }
+#endif
 //int qt_QApplication_qwsEventFilter( qt_QApplication* instPointer,qt_QWSEvent* arg1){
 //	return (int) ((QApplicationBridge*)instPointer)->qwsEventFilter((QWSEvent*)arg1);
 //}
@@ -445,6 +449,8 @@
 //	QApplicationBridge::close_xim();
 //	return;
 //}
+#ifndef Q_WS_MAC
 int qt_QApplication_x11_apply_settings( ){
 	return (int) QApplicationBridge::x11_apply_settings();
 }
+#endif
diff -u -r clib/qtc/qt_QCursor.cpp qtc-qtsharp-20030416.new/clib/qtc/qt_QCursor.cpp
--- clib/qtc/qt_QCursor.cpp	Wed Nov 21 15:26:17 2001
+++ qtc-qtsharp-20030416.new/clib/qtc/qt_QCursor.cpp	Sat Mar 20 21:11:02 2004
@@ -116,9 +116,11 @@
 	QCursorBridge::cleanup();
 	return;
 }
+#ifndef Q_WS_MAC
 int qt_QCursor_x11Screen( ){
 	return (int) QCursorBridge::x11Screen();
 }
+#endif
 qt_Qt* qt_QCursor_Qt(qt_QCursor* instPointer){
 	return (qt_Qt*) (Qt *) (QCursor *) instPointer;
 }
diff -u -r clib/qtc/qt_QGLContext.cpp qtc-qtsharp-20030416.new/clib/qtc/qt_QGLContext.cpp
--- clib/qtc/qt_QGLContext.cpp	Wed Nov 21 15:26:17 2001
+++ qtc-qtsharp-20030416.new/clib/qtc/qt_QGLContext.cpp	Sat Mar 20 21:15:17 2004
@@ -37,6 +37,7 @@
 //	 int  protected_choosePixelFormat(void* pfd, HDC pdc) {
 //		return ( int ) QGLContext::choosePixelFormat(pfd, pdc);
 //	}
+#ifndef Q_WS_MAC
 	void protected_tryVisual(const QGLFormat& f, int bufDepth) {
 		QGLContext::tryVisual(f, bufDepth);
 		return;
@@ -45,10 +46,12 @@
 		QGLContext::chooseVisual();
 		return;
 	}
-//	void protected_chooseMacVisual(GDHandle arg1) {
-//		QGLContext::chooseMacVisual(arg1);
-//		return;
-//	}
+#else
+	void protected_chooseMacVisual(GDHandle arg1) {
+		QGLContext::chooseMacVisual(arg1);
+		return;
+	}
+#endif
 	bool  protected_deviceIsPixmap() {
 		return (bool ) QGLContext::deviceIsPixmap();
 	}
diff -u -r clib/qtc/qt_QPaintDevice.cpp qtc-qtsharp-20030416.new/clib/qtc/qt_QPaintDevice.cpp
--- clib/qtc/qt_QPaintDevice.cpp	Wed Nov 21 15:26:17 2001
+++ qtc-qtsharp-20030416.new/clib/qtc/qt_QPaintDevice.cpp	Sat Mar 20 21:25:03 2004
@@ -27,6 +27,7 @@
 public:
 	~QPaintDeviceBridge() {}
 	QPaintDeviceBridge(uint devflags) : QPaintDevice(devflags) {}
+#ifndef Q_OS_MAC
 	void protected_copyX11Data(const QPaintDevice* arg1) {
 		QPaintDevice::copyX11Data(arg1);
 		return;
@@ -42,6 +43,7 @@
 	QPaintDeviceX11Data*  protected_getX11Data(bool def) {
 		return (QPaintDeviceX11Data* ) QPaintDevice::getX11Data(def);
 	}
+#endif
 	 bool  protected_cmd(int arg1, QPainter* arg2, QPDevCmdParam* arg3) {
 		return ( bool ) QPaintDevice::cmd(arg1, arg2, arg3);
 	}
@@ -96,15 +98,18 @@
 Qt::HANDLE qt_QPaintDevice_handle1( qt_QPaintDevice* instPointer){
 	return (Qt::HANDLE) ((QPaintDeviceBridge*)instPointer)->handle();
 }
+#ifndef Q_OS_MAC
 Qt::HANDLE qt_QPaintDevice_x11RenderHandle( qt_QPaintDevice* instPointer){
 	return (Qt::HANDLE) ((QPaintDeviceBridge*)instPointer)->x11RenderHandle();
 }
+#endif
 Qt::HANDLE qt_QPaintDevice_handle2( qt_QPaintDevice* instPointer){
 	return (Qt::HANDLE) ((QPaintDeviceBridge*)instPointer)->handle();
 }
 Qt::HANDLE qt_QPaintDevice_handle3( qt_QPaintDevice* instPointer){
 	return (Qt::HANDLE) ((QPaintDeviceBridge*)instPointer)->handle();
 }
+#ifndef Q_OS_MAC
 Display* qt_QPaintDevice_x11Display( qt_QPaintDevice* instPointer){
 	return (Display*) ((QPaintDeviceBridge*)instPointer)->x11Display();
 }
@@ -129,6 +134,7 @@
 int qt_QPaintDevice_x11DefaultVisual( qt_QPaintDevice* instPointer){
 	return (int) ((QPaintDeviceBridge*)instPointer)->x11DefaultVisual();
 }
+#endif
 //unsigned char* qt_QPaintDevice_scanLine( qt_QPaintDevice* instPointer,int arg1){
 //	return (unsigned char*) ((QPaintDeviceBridge*)instPointer)->scanLine((int)arg1);
 //}
@@ -141,6 +147,7 @@
 //Display* qt_QPaintDevice_x11AppDisplay( ){
 //	return (Display*) QPaintDeviceBridge::x11AppDisplay();
 //}
+#ifndef Q_OS_MAC
 int qt_QPaintDevice_x11AppScreen( ){
 	return (int) QPaintDeviceBridge::x11AppScreen();
 }
@@ -197,6 +204,7 @@
 qt_QPaintDeviceX11Data* qt_QPaintDevice_getX11Data( qt_QPaintDevice* instPointer,int def){
 	return (qt_QPaintDeviceX11Data*) ((QPaintDeviceBridge*)instPointer)->protected_getX11Data((bool)def);
 }
+#endif
 int qt_QPaintDevice_cmd( qt_QPaintDevice* instPointer,int arg1, qt_QPainter * arg2, qt_QPDevCmdParam* arg3){
 	return (int) ((QPaintDeviceBridge*)instPointer)->protected_cmd((int)arg1, (QPainter*)arg2, (QPDevCmdParam*)arg3);
 }
diff -u -r clib/qtc/qt_QPixmap.cpp qtc-qtsharp-20030416.new/clib/qtc/qt_QPixmap.cpp
--- clib/qtc/qt_QPixmap.cpp	Wed Nov 21 15:26:17 2001
+++ qtc-qtsharp-20030416.new/clib/qtc/qt_QPixmap.cpp	Sat Mar 20 21:26:58 2004
@@ -211,10 +211,12 @@
 //int qt_QPixmap_numCols( qt_QPixmap* instPointer){
 //	return (int) ((QPixmapBridge*)instPointer)->numCols();
 //}
+#ifndef Q_OS_MAC
 void qt_QPixmap_x11SetScreen( qt_QPixmap* instPointer,int screen){
 	((QPixmapBridge*)instPointer)->x11SetScreen((int)screen);
 	return;
 }
+#endif
 int qt_QPixmap_defaultDepth( ){
 	return (int) QPixmapBridge::defaultDepth();
 }
@@ -238,9 +240,11 @@
 	QPixmapBridge::setDefaultOptimization((QPixmap::Optimization)arg1);
 	return;
 }
+#ifndef Q_OS_MAC
 int qt_QPixmap_x11SetDefaultScreen( int screen){
 	return (int) QPixmapBridge::x11SetDefaultScreen((int)screen);
 }
+#endif
 qt_QPixmap * qt_new_QPixmap9(int w, int h, unsigned char* data, int isXbitmap){
 	return (qt_QPixmap *) new QPixmapBridge((int)w, (int)h, (uchar*)data, (bool)isXbitmap);
 }
