--- list.c.orig	2012-10-01 00:08:42.000000000 -0400
+++ list.c	2012-09-30 22:25:24.000000000 -0400
@@ -6,6 +6,7 @@
  */
 
 #include <stdio.h>    /* Basic includes and definitions */
+#include <stdlib.h>
 #include "list.h"
 
 #define boolean int
@@ -32,10 +33,10 @@ typedef struct int_list {  /* Informatio
   List free_list;
 } *Int_list;
 
-insert(item, list)	/* Inserts to the end of a list */
-List item;
-List list;
+void insert(void *item_, void *list_)	/* Inserts to the end of a list */
 {
+  List item = item_;
+  List list = list_;
   List last_node;
 
   last_node = list->blink;
@@ -46,15 +47,14 @@ List list;
   item->flink = list;
 }
 
-delete_item(item)		/* Deletes an arbitrary iterm */
-List item;
+void delete_item(void *item_)		/* Deletes an arbitrary iterm */
 {
+  List item = item_;
   item->flink->blink = item->blink;
   item->blink->flink = item->flink;
 }
 
-List make_list(size)	/* Creates a new list */
-int size;
+List make_list(int size)	/* Creates a new list */
 {
   Int_list l;
 
@@ -67,9 +67,9 @@ int size;
   return (List) l;
 }
   
-List get_node(list)   /* Allocates a node to be inserted into the list */
-List list;
+List get_node(void *list_)   /* Allocates a node to be inserted into the list */
 {
+  List list = list_;
   Int_list l;
   List to_return;
 
@@ -83,10 +83,10 @@ List list;
   }
 }
 
-free_node(node, list)    /* Deallocates a node from the list */
-List node;
-List list;
+void free_node(void *node_, void *list_)    /* Deallocates a node from the list */
 {
+  List node = node_;
+  List list = list_;
   Int_list l;
   
   l = (Int_list) list;
