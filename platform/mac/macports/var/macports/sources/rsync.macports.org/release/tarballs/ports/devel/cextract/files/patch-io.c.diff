--- io.c.orig	2008-11-09 17:13:21.000000000 -0800
+++ io.c	2008-11-09 17:09:02.000000000 -0800
@@ -1060,7 +1060,7 @@
     if (minmatch_str(cmd_str, "comments", 4)) {
       set_option(OPT_COMMENTS, setmode_value, set_val);
       did_cmd_parse = TRUE;
-    } else if (count = minmatch_str(cmd_str, "cpp-program", 3)) {
+    } else if ((count = minmatch_str(cmd_str, "cpp-program", 3))) {
       did_cmd_parse = TRUE;
       if (files_parsed > 0) {
 	if (cmd_line) {
@@ -1084,7 +1084,7 @@
 	  cfg_err("warning, blank cpp-program name", cmd_line);
 	}
       }
-    } else if (count = minmatch_str(cmd_str, "config-file", 4)) {
+    } else if ((count = minmatch_str(cmd_str, "config-file", 4))) {
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
 	if ((cmd_str[count] == ':') ||
@@ -1127,7 +1127,7 @@
       } else {
 	doc_extract = DOC_NORMAL;
       }
-    } else if (count = minmatch_str(cmd_str, "define", 3)) {
+    } else if ((count = minmatch_str(cmd_str, "define", 3))) {
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
 	if ((cmd_str[count] == ':') ||
@@ -1273,7 +1273,7 @@
     break;
   case 'h':
     /* header string */
-    if (count = minmatch_str(cmd_str, "header-string", 4)) {
+    if ((count = minmatch_str(cmd_str, "header-string", 4))) {
       did_cmd_parse = TRUE;
       /* can only replace on the command line */
       if ((header_string[0] != '\0') && !cmd_line) break;
@@ -1295,7 +1295,7 @@
     break;
   case 'i':
     /* include file */
-    if (count = minmatch_str(cmd_str, "include", 3)) {
+    if ((count = minmatch_str(cmd_str, "include", 3))) {
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
 	if ((cmd_str[count] == ':') ||
@@ -1335,7 +1335,7 @@
     break;
   case 'o':
     /* output file */
-    if (count = minmatch_str(cmd_str, "output-file", 3)) {
+    if ((count = minmatch_str(cmd_str, "output-file", 3))) {
       did_cmd_parse = TRUE;
       if (files_parsed > 0) {
 	if (cmd_line) {
@@ -1546,7 +1546,7 @@
     }
     break;
   case 't':
-    if (count = minmatch_str(cmd_str, "tab-width", 3)) {
+    if ((count = minmatch_str(cmd_str, "tab-width", 3))) {
       int tab_width;
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
@@ -1576,7 +1576,7 @@
     break;
   case 'u':
     /* undefine macro */
-    if (count = minmatch_str(cmd_str, "undefine", 3)) {
+    if ((count = minmatch_str(cmd_str, "undefine", 3))) {
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
 	if ((cmd_str[count] == ':') ||
@@ -1610,7 +1610,7 @@
     break;
   case 'w':
     /* wrapping */
-    if (count = minmatch_str(cmd_str, "wrap-parameters", 4)) {
+    if ((count = minmatch_str(cmd_str, "wrap-parameters", 4))) {
       did_cmd_parse = TRUE;
       for (/* set by minmatch_str */; cmd_str[count] != '\0'; count++) {
 	if ((cmd_str[count] == ':') ||
@@ -1864,7 +1864,7 @@
       char *second_half;
 
       /* split at function name */
-      if (second_half = strstr(f_ptr->ftype, f_ptr->name)) {
+      if ((second_half = strstr(f_ptr->ftype, f_ptr->name))) {
 	outch_cnt = strlen(second_half);
 	for (ch_out = f_ptr->ftype;
 	     (ch_out != second_half) &&
