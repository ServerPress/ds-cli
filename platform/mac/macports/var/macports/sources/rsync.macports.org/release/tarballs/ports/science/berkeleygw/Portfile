# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 130949 2015-01-04 06:00:49Z sean@macports.org $

PortSystem          1.0
PortGroup           mpi 1.0

name                berkeleygw
version             1.0.6
categories          science
platforms           darwin
license             BSD
maintainers         dstrubbe

description         GW/Bethe-Salpeter equation
long_description    BerkeleyGW is a set of computer codes that calculate the quasiparticle properties \
                    and the optical responses of a large variety of materials from bulk periodic crystals \
                    to nanostructures such as slabs, wires and molecules, using many-body perturbation theory.
homepage            http://www.berkeleygw.org
master_sites        http://www.berkeleygw.org/releases

checksums           rmd160  7d4861abdc7592a0768420df2fd9014918de8bd4 \
                    sha256  8912a5654d2b343689ec6c0ccd6b355ad336d04e46592684a1125573a6544ea7

distfiles           BGW-${version}.tar.gz

depends_lib         port:atlas \
                    port:fftw
# fftw port always has a Fortran variant

# test hangs in Epsilon with OpenMPI, for unknown reason.
compilers.choose    fc cpp
mpi.setup           require_fortran -dragonegg -openmpi -openmpi_devel

if {[mpi_variant_isset]} {
    depends_lib-append  port:scalapack
}

# fftw is not universal
universal_variant   no

patchfiles          patch-testsuite-Silane-PARATEC-Silane.test.diff \
                    patch-Common-common-rules.mk.diff

# FIXME: this unnecessarily enforces scalapack also had same C compiler as we are using.
if {[mpi_variant_isset]} {
    mpi.enforce_variant     scalapack
}

configure {
    system -W ${worksrcpath} "sed 's|/opt/local|${prefix}|' < config/generic.serial.macos.mk > arch.mk"
}

build.target	    all-flavors
use_parallel_build  yes

destroot.post_args  INSTDIR=${destroot}${prefix}

test.run            yes
test.cmd            make

pre-test {
    if {[mpi_variant_isset]} {
        test.args           TESTSCRIPT="MPIEXEC=${prefix}/bin/${mpi.exec} make check-parallel"
        test.target         check-jobscript
    } else {
        test.target         check
    }
}

notes {
    For the purposes of record-keeping and support, please register an account at www.berkeleygw.org.
}

# more options that could be added: threads, openmpi, mpich

pre-build {
    build.args      LINK="${configure.fc}" CC_COMP=${configure.cxx} C_COMP=${configure.cc} C_LINK=${configure.cxx} \
                    LAPACKLIB="-L${prefix}/lib/ -lsatlas"

    if {[variant_isset g95]} {
                    build.args-append COMPFLAG="-DG95" FCPP="${configure.cc} -P -E -ansi" \
                        F90free="${prefix}/bin/g95 -ffree-form -ffree-line-length-huge -fno-second-underscore" \
                        MOD_OPT="-fmod="
        # test, destroot args needed just to avoid trying to build in the test/openmp directory unnecessarily
        test.args       COMPFLAG="-DG95"
        destroot.args   COMPFLAG="-DG95"
    } else {
        # gcc is default in arch.mk so most things do not need to be modified
        build.args-append FCPP="${configure.cpp} -ansi" \
            F90free="${configure.fc} -ffree-form -ffree-line-length-none -fno-second-underscore"
    }

    if {[mpi_variant_isset]} {
        build.args-append PARAFLAG="-DMPI" MATHFLAG="-DUSESCALAPACK" C_PARAFLAG="-DPARA" \
            SCALAPACKLIB="-L${prefix}/lib/ -lscalapack"
    }
}

# This is broken currently due to changes in the settings to the code's webpage.
#livecheck.type      regex
#livecheck.url       ${homepage}/?q=node/6
#livecheck.regex     BGW-(\[0-9.\]+).tar.gz
