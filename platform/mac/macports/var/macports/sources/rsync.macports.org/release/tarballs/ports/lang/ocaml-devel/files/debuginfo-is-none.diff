Index: configure
===================================================================
--- configure	(revision 12596)
+++ configure	(working copy)
@@ -1561,6 +1561,9 @@
 if sh ./tryassemble cfi.S; then
   echo "#define ASM_CFI_SUPPORTED" >> m.h
   asm_cfi_supported=true
+  echo "assembler supports CFI"
+else
+  echo "assembler does not support CFI"
 fi
 
 # Final twiddling of compiler options to work around known bugs
Index: asmcomp/debuginfo.ml
===================================================================
--- asmcomp/debuginfo.ml	(revision 12596)
+++ asmcomp/debuginfo.ml	(working copy)
@@ -31,11 +31,12 @@
   dinfo_char_end = 0
 }
 
+(* cannot use physical compare cause Debuginfo values are marshalled *)
 let is_none t =
-  t == none
+  t = none
 
 let to_string d =
-  if d == none
+  if d = none
   then ""
   else Printf.sprintf "{%s:%d,%d-%d}"
            d.dinfo_file d.dinfo_line d.dinfo_char_start d.dinfo_char_end
Index: asmcomp/debuginfo.mli
===================================================================
--- asmcomp/debuginfo.mli	(revision 12596)
+++ asmcomp/debuginfo.mli	(working copy)
@@ -12,7 +12,7 @@
 
 type kind = Dinfo_call | Dinfo_raise
 
-type t = {
+type t = private {
   dinfo_kind: kind;
   dinfo_file: string;
   dinfo_line: int;
Index: asmcomp/emitaux.ml
===================================================================
--- asmcomp/emitaux.ml	(revision 12596)
+++ asmcomp/emitaux.ml	(working copy)
@@ -133,6 +133,7 @@
 let emit_debug_info dbg =
   if !Clflags.debug && not (Debuginfo.is_none dbg) then (
     let line = dbg.Debuginfo.dinfo_line in
+    assert (line <> 0); (* clang errors out on zero line numbers *)
     let file_name = dbg.Debuginfo.dinfo_file in
     let file_num =
       try List.assoc file_name !file_pos_nums
@@ -182,13 +183,13 @@
       lbl in
   let emit_frame fd =
     a.efa_label fd.fd_lbl;
-    a.efa_16 (if fd.fd_debuginfo == Debuginfo.none
+    a.efa_16 (if Debuginfo.is_none fd.fd_debuginfo
               then fd.fd_frame_size
               else fd.fd_frame_size + 1);
     a.efa_16 (List.length fd.fd_live_offset);
     List.iter a.efa_16 fd.fd_live_offset;
     a.efa_align Arch.size_addr;
-    if fd.fd_debuginfo != Debuginfo.none then begin
+    if not (Debuginfo.is_none fd.fd_debuginfo) then begin
       let d = fd.fd_debuginfo in
       let line = min 0xFFFFF d.dinfo_line
       and char_start = min 0xFF d.dinfo_char_start
Index: asmcomp/printlinear.ml
===================================================================
--- asmcomp/printlinear.ml	(revision 12596)
+++ asmcomp/printlinear.ml	(working copy)
@@ -65,7 +65,7 @@
   | Lraise ->
       fprintf ppf "raise %a" reg i.arg.(0)
   end;
-  if i.dbg != Debuginfo.none then
+  if not (Debuginfo.is_none i.dbg) then
     fprintf ppf " %s" (Debuginfo.to_string i.dbg)
 
 let rec all_instr ppf i =
