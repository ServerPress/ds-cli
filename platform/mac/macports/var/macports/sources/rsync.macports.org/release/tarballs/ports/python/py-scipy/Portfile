# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 140538 2015-09-22 02:10:38Z michaelld@macports.org $

PortSystem              1.0
PortGroup               python 1.0
PortGroup               active_variants 1.1
PortGroup               compilers 1.0

name                    py-scipy
version                 0.16.0
revision                1
platforms               darwin
license                 BSD
maintainers             sean michaelld openmaintainer
description             An opensource library of scientific tools for Python
long_description        ${description}

homepage                http://www.scipy.org/
master_sites            sourceforge:project/scipy/scipy/${version}/
distname                scipy-${version}

checksums               rmd160 7d2d078e2a9920f6cb19c132284ed9a83babb537 \
                        sha256 92592f40097098f3fdbe7f5855d535b29bb16719c2bb59c728bce5e7a28790e0

python.versions         26 27 33 34 35

python.add_archflags    no
universal_variant       no

compilers.setup         require_fortran -clang -dragonegg -gcc44 -gcc45 -gcc46 -g95

if {${name} ne ${subport}} {

    depends_lib-append      port:py${python.version}-numpy \
                            port:py${python.version}-nose \
                            port:swig-python

    worksrcdir              ${distname}

    build.env-append        CCFLAGS="-I${prefix}/include -L${prefix}/lib"
    destroot.env-append     CCFLAGS="-I${prefix}/include -L${prefix}/lib"
    configure.fflags-append -fno-second-underscore

    pre-configure {
        set fc_options      "config_fc --fcompiler gnu95 --f77exec ${configure.f77} --f77flags='${configure.f77_archflags} ${configure.fflags}' --f90exec ${configure.f90} --f90flags='${configure.f90_archflags} ${configure.fflags}'"
        set config_options  "config --cc ${configure.cc} --include-dirs ${prefix}/include --library-dirs ${prefix}/lib"
        build.cmd-append    ${fc_options} ${config_options}
        destroot.cmd-append ${fc_options} ${config_options}

        build.env-append    CC="${configure.cc}" \
                            CXX="${configure.cxx}" \
                            CFLAGS="${configure.cc_archflags}" \
                            CXXFLAGS="${configure.cxx_archflags}" \
                            CPPFLAGS="${configure.cppflags}"
        destroot.env-append CC="${configure.cc}" \
                            CXX="${configure.cxx}" \
                            CFLAGS="${configure.cc_archflags}" \
                            CXXFLAGS="${configure.cxx_archflags}" \
                            CPPFLAGS="${configure.cppflags}"
    }

    post-destroot {
        # for some reason read-world is not set
        system "chmod -R a+r ${destroot}${prefix}"
    }

    variant atlas conflicts openblas description "Use MacPorts ATLAS libraries" {
        depends_lib-append  port:atlas
    }

    variant openblas conflicts atlas description "Use MacPorts OpenBLAS Libraries" {
        depends_lib-append  path:lib/libopenblas.dylib:openblas
    }

    if {[variant_isset atlas]} {
        # use MacPorts atlas
        build.env-append    OPENBLAS=None \
                            ATLAS=${prefix}/lib \
                            LAPACK=${prefix}/lib \
                            BLAS=${prefix}/lib
        destroot.env-append OPENBLAS=None \
                            ATLAS=${prefix}/lib \
                            LAPACK=${prefix}/lib \
                            BLAS=${prefix}/lib

        pre-fetch {
            # get the c compiler name, if blank set to clang which is what atlas
            # does
            set cc [c_variant_name]
            if {$cc eq ""} {
                set cc clang
            }

            # check the C compiler for atlas: if not the same then error out; we
            # don't need to check the fortran compiler because if atlas is compiled
            # with +clang then gcc48 (+gfortran in the compilers portgroup
            # language) is used for fortran. If a +gcc variant is used to compile
            # atlas, then that gcc's fortran is used so the c compiler check will
            # suffice.
            if {![catch {set result [active_variants atlas $cc ""]}]} {
                if {!$result} {
                    return -code error \
"You have selected the $cc compiler (either directly or indirectly) and the\
+atlas variant, which does not match the $cc compiler. Please ensure that both\
are compiled with the same one."
                }
            }

            # also check that numpy has the atlas variant active
            if {![catch {set result [active_variants py${python.version}-numpy atlas ""]}]} {
                if {!$result} {

                    return -code error \
"You have selected the +atlas variant but py${python.version}-numpy does not\
have the +atlas variant active. Please ensure that numpy is activated with the\
+atlas variant."
                }
            }

        }

    } elseif {[variant_isset openblas]} {
        # use MacPorts OpenBLAS
        build.env-append    OPENBLAS=${prefix}/lib \
                            ATLAS=None
        destroot.env-append OPENBLAS=${prefix}/lib \
                            ATLAS=None
    } else {
        # use Accelerate BLAS
        build.env-append    OPENBLAS=None \
                            ATLAS=None \
                            LAPACK=/usr/lib \
                            BLAS=/usr/lib
        destroot.env-append OPENBLAS=None \
                            ATLAS=None \
                            LAPACK=/usr/lib \
                            BLAS=/usr/lib
    }

    livecheck.type          none
} else {
    livecheck.type          regex
    livecheck.url           http://sourceforge.net/projects/scipy/rss
    livecheck.regex         scipy-(\[0-9\.\]+)${extract.suffix}/download</guid>
}
