Index: layer0/ShaderMgr.cpp
===================================================================
--- layer0/ShaderMgr.cpp	(revision 4107)
+++ layer0/ShaderMgr.cpp	(working copy)
@@ -665,7 +665,7 @@ void CShaderPrg_Update_Shaders_For_Backg
 }
 
 int CShaderPrg_Reload(PyMOLGlobals * G, char *name, char *v, char *f){
-  int status, howLong, needAttach = 0;
+  int status, howLong;
   CShaderPrg * I = CShaderMgr_GetShaderPrg_NoSet(G->ShaderMgr, name);
   if (!I){
     CShaderMgr *SM = G->ShaderMgr;
Index: layer0/Sphere.cpp
===================================================================
--- layer0/Sphere.cpp	(revision 4107)
+++ layer0/Sphere.cpp	(working copy)
@@ -32,6 +32,9 @@ Z* -------------------------------------
 #define tau 0.8506508084F       /* t=(1+sqrt(5))/2, tau=t/sqrt(1+t^2)  */
 #define one 0.5257311121F       /* one=1/sqrt(1+t^2) , unit sphere     */
 
+#define FAST_SPHERE_INIT
+
+#ifndef FAST_SPHERE_INIT
 static const float start_points[13][3] = {
   {tau, one, 0},
   {-tau, one, 0},
@@ -69,6 +72,7 @@ static const int icosahedron[21][3] = {
   {7, 2, 9},
   {6, 10, 2}
 };
+#endif
 
 static const int mesh[30][2] = {
   {0, 3},
@@ -103,8 +107,6 @@ static const int mesh[30][2] = {
   {9, 10}
 };
 
-#define FAST_SPHERE_INIT
-
 #ifdef FAST_SPHERE_INIT
 #include"SphereData.h"
 
Index: layer2/RepNonbonded.cpp
===================================================================
--- layer2/RepNonbonded.cpp	(revision 4107)
+++ layer2/RepNonbonded.cpp	(working copy)
@@ -199,7 +199,7 @@ static void RepNonbondedRender(RepNonbon
   int ok = true;
   // 0.018f is found by trial and error
   // TODO: this is not sufficient to solve the problem of disappearing cylinders
-  float scale_bound = SettingGetGlobal_f(G, cSetting_field_of_view)  * cPI / 180.0f * 0.018f;
+  // float scale_bound = SettingGetGlobal_f(G, cSetting_field_of_view)  * cPI / 180.0f * 0.018f;
 
   alpha =
     SettingGet_f(G, I->R.cs->Setting, I->R.obj->Setting, cSetting_nonbonded_transparency);
@@ -208,7 +208,6 @@ static void RepNonbondedRender(RepNonbon
     alpha = 1.0F;
   if(ray) {
     float radius;
-    float pixel_radius = ray->PixelRadius;
     ray->transparentf(1.0F - alpha);
 
     if(I->Radius == 0.0F) {
@@ -360,7 +359,6 @@ static void RepNonbondedRender(RepNonbon
 	  CShaderPrg *shaderPrg;
 	  if (nonbonded_as_cylinders){
 	    // vertex scale is bound so that cylinders cannot disappear when it gets too low
-	    float vertex_scale = info->vertex_scale;
 	    float pixel_scale_value = SettingGetGlobal_f(G, cSetting_ray_pixel_scale);
 	    if(pixel_scale_value < 0)
 	      pixel_scale_value = 1.0F;
@@ -596,7 +594,6 @@ static void RepNonbondedRender(RepNonbon
 	  CShaderPrg *shaderPrg;
 	  if (nonbonded_as_cylinders){
 	    // vertex scale is bound so that cylinders cannot disappear when it gets too low
-	    float vertex_scale = info->vertex_scale;
 	    float pixel_scale_value = SettingGetGlobal_f(G, cSetting_ray_pixel_scale);
 	    if(pixel_scale_value < 0)
 	      pixel_scale_value = 1.0F;
Index: layer2/RepWireBond.cpp
===================================================================
--- layer2/RepWireBond.cpp	(revision 4107)
+++ layer2/RepWireBond.cpp	(working copy)
@@ -779,7 +779,6 @@ static void RepWireBondRender(RepWireBon
 	  CShaderPrg *shaderPrg;
 	  if (line_as_cylinders){
 	    // vertex scale is bound so that cylinders cannot disappear when it gets too low
-	    float vertex_scale = info->vertex_scale;
 	    float pixel_scale_value = SettingGetGlobal_f(G, cSetting_ray_pixel_scale);
 	    if(pixel_scale_value < 0)
 	      pixel_scale_value = 1.0F;
@@ -973,7 +972,6 @@ static void RepWireBondRender(RepWireBon
 	  CShaderPrg *shaderPrg;
 	  if (line_as_cylinders){
 	    // vertex scale is bound so that cylinders cannot disappear when it gets too low
-	    float vertex_scale = info->vertex_scale;
 	    float pixel_scale_value = SettingGetGlobal_f(G, cSetting_ray_pixel_scale);
 	    if(pixel_scale_value < 0)
 	      pixel_scale_value = 1.0F;
Index: layer3/Executive.cpp
===================================================================
--- layer3/Executive.cpp	(revision 4107)
+++ layer3/Executive.cpp	(working copy)
@@ -13978,7 +13978,6 @@ void ExecutiveFullScreen(PyMOLGlobals * 
 
 #ifndef _PYMOL_NO_GLUT
   if(G->HaveGUI && G->ValidContext) {
-    CExecutive *I = G->Executive;
     if (flag) {
 #ifndef GLUT_FULL_SCREEN
       if(wm_flag < 1) {
