# $Id: Portfile 128278 2014-11-18 03:14:45Z larryv@macports.org $

PortSystem 1.0
PortGroup  muniversal 1.0

name                libffi
version             3.2.1
categories          devel
platforms           darwin
license             MIT
maintainers         nomaintainer

description         libffi provides a high level api to various calling conventions
long_description    libffi library provides a portable, high level \
                    programming interface to various calling conventions. \
                    This allows a programmer to call any function \
                    specified by a call interface description at run-time. \
                    Some programs may not know at the time of compilation \
                    what arguments are to be passed to a function. For \
                    instance, an interpreter may be told at run-time about \
                    the number and types of arguments used to call a given \
                    function. Libffi can be used in such programs to \
                    provide a bridge from the interpreter program to \
                    compiled code.

homepage            http://sources.redhat.com/libffi/
master_sites        http://www.mirrorservice.org/sites/sourceware.org/pub/libffi/ \
                    http://ftp-stud.fht-esslingen.de/pub/Mirrors/sourceware.org/libffi/ \
                    http://mirror.aarnet.edu.au/pub/sourceware/libffi/ \
                    http://ftp.cs.pu.edu.tw/Linux/sourceware/libffi/ \
                    ftp://sourceware.org/pub/libffi/

checksums           rmd160  9b546a3d002380bec3f00d86fc47d730abf51dfd \
                    sha256  d06ebb8e1d9a22d19e38d63fdb83954253f39bedc5d46232a05645685722ca37

# https://trac.macports.org/ticket/44170
patchfiles-append PR-44170.patch

# Don't use macports gcc or clang toolchains to build this due to dependency cycles
compiler.blacklist-append macports-*

# Older versions of cctools have a history of being problematic with complex
# asm like libffi has, so opt for the integrated assembler if it's available
if {[string match *clang* ${configure.compiler}]} {
    configure.cflags-append -integrated-as
}

array set merger_host {
    ppc64   powerpc-apple-darwin
}
lappend merger_dont_diff ${prefix}/lib/libffi-${version}/include/ffi.h ${prefix}/lib/libffi-${version}/include/ffitarget.h

livecheck.url       ${homepage}
livecheck.type      regex
livecheck.regex     ${name}-(\\d+(?:\\.\\d+)*)
