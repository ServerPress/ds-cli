From 123a71afaf7d3bb6151cfa22b4a974e64a2f26d3 Mon Sep 17 00:00:00 2001
From: Joseph Artsimovich <joseph.artsimovich@gmail.com>
Date: Sat, 25 Jan 2014 14:37:41 +0000
Subject: [PATCH] Compatibility with clang compiler.

Credits: Martin Mueller
---
 ProjectFilesDialog.cpp           | 6 +++---
 foundation/GridLineTraverser.cpp | 1 +
 math/MatrixCalc.h                | 2 +-
 3 files changed, 5 insertions(+), 4 deletions(-)

diff --git a/ProjectFilesDialog.cpp b/ProjectFilesDialog.cpp
index f632b3c..dfa1c14 100644
--- a/ProjectFilesDialog.cpp
+++ b/ProjectFilesDialog.cpp
@@ -279,7 +279,7 @@ ProjectFilesDialog::inProjectFiles() const
 	using namespace boost::lambda;
 	
 	std::vector<ImageFileInfo> files;
-	m_ptrInProjectFiles->items(bind(&pushFileInfo<Item>, ref(files), _1));
+	m_ptrInProjectFiles->items(bind(&pushFileInfo<Item>, boost::ref(files), _1));
 	
 	std::sort(files.begin(), files.end(), imageFileInfoLess);
 	
@@ -439,7 +439,7 @@ ProjectFilesDialog::setInputDir(QString const& dir, bool const auto_add_files)
 		files.begin(), files.end(),
 		bind(
 			&pushItemWithFlags<Item, ItemList>,
-			_1, ref(items), cref(m_supportedExtensions)
+			_1, boost::ref(items), cref(m_supportedExtensions)
 		)
 	);
 	
@@ -510,7 +510,7 @@ ProjectFilesDialog::removeFromProject()
 	m_ptrInProjectFiles->items(
 		selection, bind(
 			&pushItemIfSameDir<Item, ItemList>,
-			ref(items), _1, cref(input_dir)
+			boost::ref(items), _1, cref(input_dir)
 		)
 	);
 	
diff --git a/foundation/GridLineTraverser.cpp b/foundation/GridLineTraverser.cpp
index 72f51e8..0c9b5cb 100644
--- a/foundation/GridLineTraverser.cpp
+++ b/foundation/GridLineTraverser.cpp
@@ -19,6 +19,7 @@
 #include "GridLineTraverser.h"
 #include "LineIntersectionScalar.h"
 #include <algorithm>
+#include <cstdlib>
 
 GridLineTraverser::GridLineTraverser(QLineF const& line)
 {
diff --git a/math/MatrixCalc.h b/math/MatrixCalc.h
index 0dd8de0..e915ea0 100644
--- a/math/MatrixCalc.h
+++ b/math/MatrixCalc.h
@@ -74,7 +74,7 @@ private:
 template<typename T>
 class Mat
 {
-	template<typename OT, typename Alloc> friend class MatrixCalc;
+	template<typename OT, typename Alloc> friend class ::MatrixCalc;
 	template<typename OT> friend Mat<OT> operator+(Mat<OT> const& m1, Mat<OT> const& m2);
 	template<typename OT> friend Mat<OT> operator-(Mat<OT> const& m1, Mat<OT> const& m2);
 	template<typename OT> friend Mat<OT> operator*(Mat<OT> const& m1, Mat<OT> const& m2);
-- 
2.1.3

