--- common/video/iso-mpeg4/src/vtc_main_write_image.cpp.orig	2005-05-04 13:56:00.000000000 -0600
+++ common/video/iso-mpeg4/src/vtc_main_write_image.cpp	2009-11-19 03:13:56.000000000 -0700
@@ -127,7 +127,7 @@
 	      }
 	    }
 	  }
-	  if(count==0)  errorHandler("Impossible case occured, check program\n") ; /* impossible! no chroma available for this pixel ignore it */
+	  if(count==0)  errorHandler((char*)"Impossible case occured, check program\n") ; /* impossible! no chroma available for this pixel ignore it */
 	  else {
 	    for(col=1; col< colors; col++) {
 	      outmask[col][(i>>1)*(Width[col]>>l)+(j>>1)] = DWT_IN;
@@ -165,16 +165,16 @@
 	       origin_x[col]>>l, origin_y[col]>>l, 0, 
 	       (usemask)?(STO_const_alpha?STO_const_alpha_value:MASK_VAL):RECTANGULAR,(col==0)?0:127);
     if(ret!= DWT_OK)
-      errorHandler("DWT Error code %d", ret);
+      errorHandler((char*)"DWT Error code %d", ret);
 
     ptr = recimage[col];
     w = rwidth[col];
     h = rheight[col];
 		if ( col == 0 )
-		noteProgress("Writing the reconstruction image: '%s(%dx%d)'",recImgFile,w,h);
+		noteProgress((char*)"Writing the reconstruction image: '%s(%dx%d)'",recImgFile,w,h);
     for (i=0; i<h; i++) {
       if ((status = fwrite((UChar *)ptr, sizeof(Char), w, outfptr)) != w)
-	errorHandler("Error in writing image file.");
+	errorHandler((char*)"Error in writing image file.");
       
       ptr += w;
     } 
@@ -183,7 +183,7 @@
       ptr = recmask[col];
       for (i=0; i<h; i++) {
 	if ((status = fwrite((UChar *)ptr, sizeof(Char), w, maskfptr)) != w)
-	  errorHandler("Error in writing image file.");
+	  errorHandler((char*)"Error in writing image file.");
 	ptr += w;
       } 
     }
@@ -273,7 +273,7 @@
 	      }
 	    }
 	  }
-	  if(count==0)  errorHandler("Impossible case occured, check program\n") ; /* impossible! no chroma available for this pixel ignore it */
+	  if(count==0)  errorHandler((char*)"Impossible case occured, check program\n") ; /* impossible! no chroma available for this pixel ignore it */
 	  else {
 	    for(col=1; col< colors; col++) {
 	      outmask[col][(i>>1)*(Width[col]>>l)+(j>>1)] = DWT_IN;
@@ -317,7 +317,7 @@
 // FPDAM begin: modified by Sharp
 
     if(ret!= DWT_OK)
-      errorHandler("DWT Error code %d", ret);
+      errorHandler((char*)"DWT Error code %d", ret);
 
     ptr = recimage[col];
     w = rwidth[col];
@@ -379,7 +379,7 @@
 
 		fp = fopen(recImgFile, "w");
 
-		noteProgress("Writing reconstructed image '%s'(%dx%d) ...",recImgFile, dWidth[0], dHeight[0]);
+		noteProgress((char*)"Writing reconstructed image '%s'(%dx%d) ...",recImgFile, dWidth[0], dHeight[0]);
 		for ( col=0; col<mzte_codec.m_iColors; col++ )
 			fwrite(frm[col], 1, dWidth[col]*dHeight[col], fp);
 		fclose(fp);
