From 5e5525647e09e584475ba8f6d3f75c174a23e386 Mon Sep 17 00:00:00 2001
From: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
Date: Sun, 4 Jan 2015 13:30:53 -0800
Subject: [PATCH 2/8] libunwind: Fix fallback implementation of
 _dyld_find_unwind_sections for x86_64 and document dependency on a newer
 libmacho

Signed-off-by: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
---
 src/Unwind/AddressSpace.hpp | 8 +++++++-
 1 file changed, 7 insertions(+), 1 deletion(-)

diff --git a/src/Unwind/AddressSpace.hpp b/src/Unwind/AddressSpace.hpp
index 4e94afc..b626b80 100644
--- a/src/Unwind/AddressSpace.hpp
+++ b/src/Unwind/AddressSpace.hpp
@@ -297,7 +297,9 @@ inline LocalAddressSpace::pint_t LocalAddressSpace::getEncodedP(pint_t &addr,
     // In 10.7.0 or later, libSystem.dylib implements this function.
     extern "C" bool _dyld_find_unwind_sections(void *, dyld_unwind_sections *);
   #else
-    // In 10.6.x and earlier, we need to implement this functionality.
+    // In 10.6.x and earlier, we need to implement this functionality. Note
+    // that this requires a newer version of libmacho (from cctools) than is
+    // present in libSystem on 10.6.x (for getsectiondata).
     static inline bool _dyld_find_unwind_sections(void* addr, 
                                                     dyld_unwind_sections* info) {
       // Find mach-o image containing address.
@@ -308,7 +310,11 @@ inline LocalAddressSpace::pint_t LocalAddressSpace::getEncodedP(pint_t &addr,
       
       // Find dwarf unwind section in that image.
       unsigned long size;
+#ifndef __LP64__
       const uint8_t *p = getsectiondata(mh, "__TEXT", "__eh_frame", &size);
+#else
+      const uint8_t *p = getsectiondata((const struct mach_header_64 *)mh, "__TEXT", "__eh_frame", &size);
+#endif
       if (!p)
         return false;
       
-- 
2.2.1

