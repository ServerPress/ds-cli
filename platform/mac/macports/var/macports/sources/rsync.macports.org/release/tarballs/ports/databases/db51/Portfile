# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 121269 2014-06-21 20:18:42Z jeremyhu@macports.org $

PortSystem 1.0
PortGroup  muniversal 1.0

name            db51
version         5.1.29
revision        3
set branch      [join [lrange [split ${version} .] 0 1] {}]
categories      databases
license         Sleepycat
maintainers     afb openmaintainer
platforms       darwin
description     The Berkeley DB package, version 5.1
long_description \
    Version 5.1 of the Berkeley Data Base library which \
    offers (key/value) storage with optional concurrent \
    access or transactions interface.  This port will \
    install the AES (American Encryption Standard) \
    enabled version.

homepage        http://www.oracle.com/us/products/database/berkeley-db/db/overview/index.html
master_sites    http://download.oracle.com/berkeley-db/

distname        db-${version}

checksums       md5     a94ea755ab695bc04f82b94d2e24a1ef \
                sha1    42dc96c71873c7fde543c916ed866cadee6fa51d \
                rmd160  0c1124f08f121fdd8e43e5622cc3b8ddfd724c78

patchfiles      patch-src_dbinc_atomic.h

configure.dir   ${worksrcpath}/build_unix
build.dir       ${configure.dir}

configure.cmd   ../dist/configure
configure.args  --enable-cxx \
                --includedir=\\\${prefix}/include/db${branch} \
                --libdir=\\\${prefix}/lib/db${branch}

set cxx_stdlibflags {}
if {[string match *clang* ${configure.cxx}]} {
    set cxx_stdlibflags -stdlib=${configure.cxx_stdlib}
}
configure.cxx ${configure.cxx} ${cxx_stdlibflags}

destroot.destdir \
    prefix=${destroot}${prefix} \
    docdir=${destroot}${prefix}/share/doc/${name}

post-destroot {
    foreach bin [glob -tails -directory ${destroot}${prefix}/bin/ db_*] {
        set newbin [regsub {^db_} ${bin} "db${branch}_"]
        move ${destroot}${prefix}/bin/${bin} \
            ${destroot}${prefix}/bin/${newbin}
    }
    if { ![variant_isset no_sql] } {
        move ${destroot}${prefix}/bin/dbsql \
            ${destroot}${prefix}/bin/db${branch}sql
    }
}

variant java conflicts no_java description {Build the Java API} {
    configure.args-append   --enable-java
    platform macosx {
        pre-configure {
            if {![file isfile "/System/Library/Frameworks/JavaVM.framework/Headers/jni.h"]} {
                ui_error "${name} requires the Java for Mac OS X development headers."
                if {${os.major} == 10} {
                    ui_error "Download the Java Developer Package from: <https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=20719>"
                } elseif {${os.major} == 9} {
                    ui_error "Download the Java Developer Package from: <https://connect.apple.com/cgi-bin/WebObjects/MemberSite.woa/wa/getSoftware?bundleID=20720>"
                } else {
                    ui_error "Make sure your Xcode installation is complete."
                }
                return -code error "missing Java headers"
            }
        }
    }
}

variant no_java conflicts java description {Legacy compatibility variant} {}
if {[variant_isset no_java]} {
    default_variants -java
} elseif {${os.subplatform} eq "macosx" && ${os.major} < 11} {
    default_variants +java
}

variant sql conflicts no_sql description {Build the SQL API} {
    configure.args-append   --enable-sql
# build with -DSQLITE_ENABLE_COLUMN_METADATA
# required by libgda5 to enable Berkeley DB SQL support
    configure.cppflags-append -DSQLITE_ENABLE_COLUMN_METADATA
}

variant no_sql conflicts sql description {Legacy compatibility variant} {}
if {[variant_isset no_sql]} {
    default_variants -sql
} else {
    default_variants +sql
}

variant tcl description {build Tcl API} {
    depends_lib-append      port:tcl
    configure.args-append   --enable-tcl --with-tcl=${prefix}/lib
}

if { [variant_isset universal] } {
    if {${os.arch} eq "i386"} {
        if { ${os.major} >= 10 } {
            set merger_configure_args(ppc) --with-mutex=Darwin/_spin_lock_try
        }
        set merger_configure_args(ppc64)   --with-mutex=Darwin/_spin_lock_try
    } else {
        set merger_configure_args(i386)    --with-mutex=x86/gcc-assembly
        set merger_configure_args(x86_64)  --with-mutex=x86_64/gcc-assembly
    }
}

livecheck.type  regex
livecheck.url   http://www.oracle.com/technetwork/database/berkeleydb/downloads/index-082944.html
livecheck.regex {(5\.1(?:\.\d+)*)\.tar\.gz}
