--- avcall/Makefile.in.orig	2013-02-26 09:45:54.000000000 +0100
+++ avcall/Makefile.in	2013-02-26 09:49:31.000000000 +0100
@@ -25,7 +25,7 @@
 CFLAGS = @CFLAGS@
 CPP = @CPP@
 INCLUDES = -I. -I$(srcdir)
-ASPFLAGS = `if test @AS_UNDERSCORE@ = true; then echo '-DASM_UNDERSCORE'; fi`
+ASPFLAGS = $(CPPFLAGS) `if test @AS_UNDERSCORE@ = true; then echo '-DASM_UNDERSCORE'; fi`
 LIBTOOL = @LIBTOOL@
 LIBTOOL_COMPILE = $(LIBTOOL) --mode=compile
 LIBTOOL_LINK = $(LIBTOOL) --mode=link
@@ -61,64 +61,64 @@
 	if test -f avcall-$(CPU).o; then $(LN) avcall-$(CPU).o avcall.o; fi
 
 avcall-i386.lo : avcall-i386.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-i386.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-i386.s
 
 avcall-i386.s : $(srcdir)/avcall-i386-macro.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-i386-macro.S | grep -v '^ *#line' | grep -v '^#ident' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,% ,%,g' -e 's,\. ,.,g' > avcall-i386.s
 
 avcall-sparc.lo : avcall-sparc.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-sparc.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-sparc.s
 
 avcall-sparc.s : $(srcdir)/avcall-sparc.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-sparc.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' -e 's,\$$,#,g' > avcall-sparc.s
 
 avcall-sparc64.lo : avcall-sparc64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-sparc64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-sparc64.s
 
 avcall-sparc64.s : $(srcdir)/avcall-sparc64.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-sparc64.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' -e 's,\$$,#,g' > avcall-sparc64.s
 
 avcall-m68k.lo : avcall-m68k.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-m68k.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-m68k.s
 
 avcall-m68k.s : $(srcdir)/avcall-m68k.mit.S $(srcdir)/avcall-m68k.mot.s
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-m68k.mit.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' | if test @AS_UNDERSCORE@ = true; then sed -e 's/\$$//g'; else sed -e 's/\$$/%/g'; fi > avcall-m68k.s
 
 avcall-mips.lo : avcall-mips.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-mips.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-mips.s
 
 avcall-mips.s : $(srcdir)/avcall-mips.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-mips.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > avcall-mips.s
 
 avcall-mipsn32.lo : avcall-mipsn32.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-mipsn32.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-mipsn32.s
 
 avcall-mipsn32.s : $(srcdir)/avcall-mipsn32.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-mipsn32.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > avcall-mipsn32.s
 
 avcall-mips64.lo : avcall-mips64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-mips64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-mips64.s
 
 avcall-mips64.s : $(srcdir)/avcall-mips64.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-mips64.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//.*$$,,' > avcall-mips64.s
 
 avcall-alpha.lo : $(srcdir)/avcall-alpha.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-alpha.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-alpha.s
 
 avcall-hppa.lo : $(srcdir)/avcall-hppa.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-hppa.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-hppa.s
 
 avcall-s390.lo : $(srcdir)/avcall-s390.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-s390.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-s390.s
 
 avcall-arm.lo : avcall-arm.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-arm.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-arm.s
 
 avcall-arm.s : $(srcdir)/avcall-arm.S
 	$(CPP) $(ASPFLAGS) $(srcdir)/avcall-arm.S | grep -v '^ *#line' | grep -v '^#' | sed -e 's,% ,%,g' -e 's,//,@,g' -e 's,\$$,#,g' > avcall-arm.s
 
 avcall-armel.lo : avcall-armel.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c avcall-armel.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c avcall-armel.s
 
 avcall-armel.s : $(srcdir)/avcall-armel.S
 	cp $(srcdir)/avcall-armel.S avcall-armel.s
@@ -131,7 +131,7 @@
 	  macos* | darwin*) syntax=macos;; \
 	  *) syntax=sysv4;; \
 	esac; \
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-powerpc-$${syntax}.s ; \
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-powerpc-$${syntax}.s ; \
 	cp avcall-powerpc-$${syntax}.lo avcall-powerpc.lo ; rm -f avcall-powerpc-$${syntax}.lo ; \
 	if test -f avcall-powerpc-$${syntax}.o; then cp avcall-powerpc-$${syntax}.o avcall-powerpc.o; fi
 # Note that avcall-powerpc-${syntax}.o is kept in place, because in some cases
@@ -139,25 +139,25 @@
 # libtool may want to access it.
 
 avcall-powerpc64.lo : $(srcdir)/avcall-powerpc64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-powerpc64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-powerpc64.s
 
 avcall-m88k.lo : $(srcdir)/avcall-m88k.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-m88k.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-m88k.s
 
 avcall-convex.lo : $(srcdir)/avcall-convex.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-convex.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-convex.s
 
 avcall-ia64.lo : $(srcdir)/avcall-ia64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-ia64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-ia64.s
 
 avcall-x86_64.lo : $(srcdir)/avcall-x86_64.s
-	$(LIBTOOL_COMPILE) $(CC) @GCC_X_NONE@ -c $(srcdir)/avcall-x86_64.s
+	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) @GCC_X_NONE@ -c $(srcdir)/avcall-x86_64.s
 
 structcpy.lo : $(srcdir)/structcpy.c
 	$(LIBTOOL_COMPILE) $(CC) $(CFLAGS) -c $(srcdir)/structcpy.c
 
 libavcall.la : $(OBJECTS)
-	$(LIBTOOL_LINK) $(CC) -static -o libavcall.la -rpath $(libdir) $(OBJECTS)
+	$(LIBTOOL_LINK) $(CC) $(CFLAGS) $(LDFLAGS) -static -o libavcall.la -rpath $(libdir) $(OBJECTS)
 
 # Installs the library and include files only. Typically called with only
 # $(libdir) and $(includedir) - don't use $(prefix) and $(exec_prefix) here.
@@ -204,7 +204,7 @@
 	$(CC) $(CFLAGS) $(INCLUDES) -S $(srcdir)/minitests.c
 
 minitests : minitests.o libavcall.la
-	$(LIBTOOL_LINK) $(CC) $(CFLAGS) @GCC_X_NONE@ minitests.o libavcall.la -o minitests
+	$(LIBTOOL_LINK) $(CC) $(CFLAGS) $(LDFLAGS) @GCC_X_NONE@ minitests.o libavcall.la -o minitests
 
 check : all minitests
 	./minitests > minitests.out
@@ -218,7 +218,7 @@
 	$(CC) $(CFLAGS) $(INCLUDES) -S $(srcdir)/tests.c
 
 tests : tests.o libavcall.la
-	$(LIBTOOL_LINK) $(CC) $(CFLAGS) @GCC_X_NONE@ tests.o libavcall.la -o tests
+	$(LIBTOOL_LINK) $(CC) $(CFLAGS) $(LDFLAGS) @GCC_X_NONE@ tests.o libavcall.la -o tests
 
 extracheck : all tests
 	./tests > tests.out
