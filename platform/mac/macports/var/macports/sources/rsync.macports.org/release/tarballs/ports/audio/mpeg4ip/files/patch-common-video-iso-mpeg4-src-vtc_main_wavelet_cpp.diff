--- common/video/iso-mpeg4/src/vtc_main_wavelet.cpp.orig	2005-05-04 13:56:00.000000000 -0600
+++ common/video/iso-mpeg4/src/vtc_main_wavelet.cpp	2009-11-19 03:07:44.000000000 -0700
@@ -125,7 +125,7 @@
       *synfilter=&wav97Syn;
       return;
     default:
-      errorHandler("Filter type %d is not available.",type);
+      errorHandler((char*)"Filter type %d is not available.",type);
   }
 }
 
@@ -171,10 +171,10 @@
     
     if ((outcoeff[col] = 
       (Int *)malloc(sizeof(Int)*width[col]*height[col]))==NULL)
-      errorHandler("Memory error: outcoeff\n");
+      errorHandler((char*)"Memory error: outcoeff\n");
     if ((outmask[col] = 
       (UChar *)malloc(sizeof(Char)*width[col]*height[col]))==NULL)
-      errorHandler("Memory error: outmask\n");
+      errorHandler((char*)"Memory error: outmask\n");
 
     ret = do_DWT(inimage[col], inmask[col], width[col], height[col], 
 		   nLevels[col], 0, &(wvtfilter[col==0?0:1]), 
@@ -182,7 +182,7 @@
 	  
 
     if (ret!=DWT_OK) 
-      errorHandler("DWT Error Code %d\n", ret);
+      errorHandler((char*)"DWT Error Code %d\n", ret);
     
     mzte_codec.m_iMean[col] = RemoveDCMean(outcoeff[col], outmask[col], 
 					width[col], height[col], nLevels[col]);
@@ -250,11 +250,11 @@
 
     if ((inmask[col]=(UChar *)malloc(sizeof(UChar)*
 					     Width[col]*Height[col]))==NULL)
-		errorHandler("Memory Failed\n");
+		errorHandler((char*)"Memory Failed\n");
     
     if ((incoeff[col] = (Int *)malloc(sizeof(Int)*
 				  Width[col]*Height[col]))==NULL)
-		errorHandler("Memory Failed\n");
+		errorHandler((char*)"Memory Failed\n");
 
     
     /* copy dequantized coefficients to incoeff */
@@ -275,11 +275,11 @@
     
     if ((outmask[col]  = (UChar *)malloc(sizeof(UChar)*
 					    Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     if ((outimage[col] = (UChar *)malloc(sizeof(UChar)*
 					    Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     if(mzte_codec.m_iQuantType==2) {
       Int target_spatial_levels;
@@ -299,7 +299,7 @@
 		  nLevels[col], MinLevel, 0 /* byte */, 
 		  &(wvtfilter[col==0?0:1]), outimage[col], outmask[col], 0,  fullsize );
     if (ret!=DWT_OK) 
-      errorHandler("DWT Error Code %d\n", ret);
+      errorHandler((char*)"DWT Error Code %d\n", ret);
     free(incoeff[col]);
     free(inmask[col]);
   }  /* col */
@@ -449,25 +449,25 @@
   /* memory allocation */
   if (wordsize == 1) {
     if ((inimage = (UChar *)malloc(sizeof(UChar)*TileWidth*3*TileHeight*3))==NULL)
-      errorHandler("Memory error: inimage\n");
+      errorHandler((char*)"Memory error: inimage\n");
   } else {
     if ((inimage = (UShort *)malloc(sizeof(UShort)*TileWidth*3*TileHeight*3))==NULL)
-      errorHandler("Memory error: inimage\n");
+      errorHandler((char*)"Memory error: inimage\n");
   }
   if ((inmask = (UChar *)malloc(sizeof(UChar)*TileWidth*3*TileHeight*3))==NULL)
-    errorHandler("Memory error: inmask\n");
+    errorHandler((char*)"Memory error: inmask\n");
   memset(inmask, 1, sizeof(UChar)*TileWidth*3*TileHeight*3);
 
   if ((outcoeff = (DATA *)malloc(sizeof(DATA)*TileWidth*3*TileHeight*3))==NULL)
-    errorHandler("Memory error: outcoeff\n");
+    errorHandler((char*)"Memory error: outcoeff\n");
   if ((outmask =  (UChar *)malloc(sizeof(Char)*TileWidth*3*TileHeight*3))==NULL)
-    errorHandler("Memory error: outmask\n");
+    errorHandler((char*)"Memory error: outmask\n");
   memset(outmask,1, sizeof(UChar)*TileWidth*3*TileHeight*3);
 
   if ((workcoeff = (DATA *)malloc(sizeof(DATA)*TileWidth*3*TileHeight*3))==NULL)
-    errorHandler("Memory error: workcoeff\n");
+    errorHandler((char*)"Memory error: workcoeff\n");
   if ((workmask =  (UChar *)malloc(sizeof(Char)*TileWidth*3*TileHeight*3))==NULL)
-    errorHandler("Memory error: workmask\n");
+    errorHandler((char*)"Memory error: workmask\n");
 
   for (col=0; col<mzte_codec.m_iColors; col++) {
     orgWidth = SrcImg[col].width;
@@ -536,7 +536,7 @@
     }
     ret = do_DWT(inimage, inmask, width, height, nLevels, 0, wvtfilter, workcoeff, workmask);
     if (ret!=DWT_OK)
-      errorHandler("DWT Error Code %d\n", ret);
+      errorHandler((char*)"DWT Error Code %d\n", ret);
 
 
     for(level=1;level<=nLevels;level++) {
@@ -629,11 +629,11 @@
 
     if ((inmask[col]=(UChar *)malloc(sizeof(UChar)*
 					     Width[col]*Height[col]))==NULL)
-		errorHandler("Memory Failed\n");
+		errorHandler((char*)"Memory Failed\n");
     
     if ((incoeff[col] = (Int *)malloc(sizeof(Int)*
 				  Width[col]*Height[col]))==NULL)
-		errorHandler("Memory Failed\n");
+		errorHandler((char*)"Memory Failed\n");
 
     
     /* copy dequantized coefficients to incoeff */
@@ -654,11 +654,11 @@
     
     if ((outmask[col]  = (UChar *)malloc(sizeof(UChar)*
 					    Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     if ((outimage[col] = (UChar *)malloc(sizeof(UChar)*
 					    Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     if(mzte_codec.m_iQuantType==2) {
       Int target_spatial_levels;
@@ -678,13 +678,13 @@
 		  nLevels[col], MinLevel, 0 /* byte */, 
 		  &(wvtfilter[col==0?0:1]), outimage[col], outmask[col], 0,  fullsize );
     if (ret!=DWT_OK) 
-      errorHandler("DWT Error Code %d\n", ret);
+      errorHandler((char*)"DWT Error Code %d\n", ret);
     free(incoeff[col]);
     free(inmask[col]);
   }  /* col */
   
   
-	noteProgress("Copying reconstructed image ...");
+	noteProgress((char*)"Copying reconstructed image ...");
 
 /*	printf("%d %d\n", mzte_codec.m_display_width, mzte_codec.m_display_height);*/
 // FPDAM begin : modified by Sharp
@@ -791,10 +791,10 @@
 
 
     if ((outmask[col]  = (UChar *)malloc(sizeof(UChar)* Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     if ((outimage[col] = (UChar *)malloc(sizeof(UChar)* Width[col]*Height[col]))==NULL)
-      errorHandler("Memory Failed\n");
+      errorHandler((char*)"Memory Failed\n");
 
     memset(outimage[col],0,sizeof(UChar)*Width[col]*Height[col]);
 
@@ -835,7 +835,7 @@
     }
 
     if (ret!=DWT_OK)
-      errorHandler("DWT Error Code %d\n", ret);
+      errorHandler((char*)"DWT Error Code %d\n", ret);
 
   }  /* col */
 
