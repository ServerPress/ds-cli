# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 136932 2015-05-30 17:59:39Z thibaut@macports.org $

PortSystem          1.0
PortGroup           github 1.0
PortGroup           active_variants 1.1

github.setup        gyoto Gyoto 1.0.1
license             GPL-3+
categories          science yorick
platforms           darwin
maintainers         thibaut openmaintainer
description         General relativistic geodesic integration and ray-tracing
long_description    Gyoto aims at providing a framework for computing orbits \
                    and ray-traced images in General relativity. It consists \
                    in a C++ shared library (libgyoto), utility programs \
                    (gyoto, gyotoy), and a plug-in for the Yorick programming \
                    language. Gyoto can be extended with plug-ins.
homepage            http://gyoto.obspm.fr

checksums           rmd160  773c9fe40ea2a17b5fad0b75a0f1376d28927d94 \
                    sha256  643c1955fdef5ec8747cd42a4fe075ddaeb822e924f9f49ba895a6f0d8832cb1

depends_lib         port:cfitsio \
                    port:xercesc3 \
                    port:udunits2 \
                    path:bin/yorick:yorick

depends_run         port:yorick-yutils \
                    port:yorick-gy

# yorick is not universal
universal_variant   no

patchfiles          patch-include-GyotoScreen.h.diff
patch.pre_args      -p1

configure.args      --with-yorick=${prefix}/bin/yorick \
                    --without-lorene \
                    --with-xerces \
                    --disable-doc \
                    --with-cfitsio \
                    --with-udunits-inc=${prefix}/include/udunits2/ \
                    --with-udunits-lib=-L${prefix}/lib/ \
                    --enable-release \
                    --without-mpi

build.args-append    Y_CFLAGS="${configure.cxxflags}" Y_CPPFLAGS="${configure.cppflags}" CC="${configure.cc}" COPT_DEFAULT="" Y_LDFLAGS="${configure.ldflags}"

test.target          check
test.run             yes


if {![catch {set result [active_variants boost openmpi {}]}]} {
  if {$result} {
    default_variants +openmpi
  } else {
      if {[active_variants boost mpich {}]} {
          default_variants +mpich
      }
  }
}

foreach nodot [list 27 33 34] wdot [list 2.7 3.3 3.4] {
    subport py${nodot}-gyoto {
        depends_build-append port:doxygen port:swig-python
        depends_lib-append   port:python${nodot} port:py${nodot}-numpy \
                             port:Gyoto
        categories    python science
        configure.args-append PYTHON=${prefix}/bin/python${wdot}
        use_parallel_build no
        build.args    -C python
        destroot.args -C python INSTALL_DATA=true prefix=${frameworks_dir}/Python.framework/Versions/${wdot}
        test.run no
    }
}

subport Gyoto {
    post-destroot {
        xinstall -W ${worksrcpath}/python gyoto.i gyoto_std.i gyoto_lorene.i numpy.i ${destroot}/${prefix}/include/Gyoto/
    }
}

if {[string match libc++ ${configure.cxx_stdlib}]} {

    depends_lib-append port:boost
    
    variant openmpi conflicts mpich \
        description {Add MPI parallelization using OpenMPI} {
        require_active_variants boost openmpi {}
        depends_lib-append port:openmpi
        configure.args-delete --without-mpi
        configure.args-append --with-mpi MPICC=mpicc-openmpi-mp MPICXX=mpicxx-openmpi-mp
    }

    variant mpich conflicts openmpi \
        description {Add MPI parallelization using MPICH} {
        require_active_variants boost mpich {}
        depends_lib-append port:mpich
        configure.args-delete --without-mpi
        configure.args-append --with-mpi MPICC=mpicc-mpich-mp MPICXX=mpicxx-mpich-mp
    }

} else {
    configure.args-append --disable-c++11
}
