# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:filetype=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 139972 2015-09-04 19:43:25Z cal@macports.org $

PortSystem          1.0

name                rabbitmq-server
version             3.5.4
categories          net
platforms           darwin
maintainers         gmail.com:hayder.net
license             MPL-1.1 MIT Apache-2
supported_archs     noarch

description         The RabbitMQ AMQP Server
long_description    \
    RabbitMQ is an implementation of AMQP, the emerging standard for \
    high performance enterprise messaging. The RabbitMQ server is a \
    robust and scalable implementation of an AMQP broker.

homepage            http://www.rabbitmq.com/
master_sites        http://www.rabbitmq.com/releases/rabbitmq-server/v${version}/

distfiles           ${name}-${version}${extract.suffix} \
                    ${name}-generic-unix-${version}${extract.suffix}

checksums \
        ${name}-${version}${extract.suffix} \
                    rmd160  4e1cf0ca1889673c56872a6dfaf9e688899d1eda \
                    sha256  f79814d5fd5574734f599ef570ddace02ce4e47a1441cd052c568cde4d6ca3a4 \
        ${name}-generic-unix-${version}${extract.suffix} \
                    rmd160  f178b3cb8d4ab9299f8ecabe338d2d2f79e82fb3 \
                    sha256  24b6a4c0d5fec0ed63b756cdf96964d1729be88d5ec7934d4b4723ecdf9d3e2b


depends_lib         port:erlang
depends_build       port:libxslt \
                    port:git
# no code from git is incorporated, so its license doesn't prevent distribution
set license_noconflict git

platform darwin 8 {
    depends_build-append port:py26-simplejson
    build.args      PYTHON=${prefix}/bin/python2.6
}

platform darwin 9 {
    depends_build-append port:py26-simplejson
    build.args      PYTHON=${prefix}/bin/python2.6
}
# no need for simplejson on Snow Leopard or higher

if {${os.major} > 9 && ${os.platform} eq "darwin"} {
    # python3.X doesn't work
    build.args      PYTHON=python2.7
}

set serveruser      rabbitmq
set servergroup     rabbitmq
set serverhome      ${prefix}/var/lib/rabbitmq
set logdir          ${prefix}/var/log/rabbitmq
set confdir         ${prefix}/etc/rabbitmq
set mnesiadbdir     ${prefix}/var/lib/rabbitmq/mnesia
set plistloc        ${prefix}/etc/LaunchDaemons/org.macports.rabbitmq-server
set sbindir         ${destroot}${prefix}/lib/rabbitmq/bin
set wrappersbin     ${destroot}${prefix}/sbin
set realsbin        ${destroot}${prefix}/lib/rabbitmq/lib/rabbitmq_server-${version}/sbin
set mansrc          ${workpath}/rabbitmq_server-${version}/share/man
set mandest         ${destroot}${prefix}/share/man

use_configure       no

use_parallel_build  no

build.env-append    HOME=${workpath}

build.env-append    VERSION=${version}

destroot.env-append VERSION=${version}

destroot.target     install_bin

destroot.destdir \
    TARGET_DIR=${destroot}${prefix}/lib/rabbitmq/lib/rabbitmq_server-${version} \
    SBIN_DIR=${sbindir} \
    MAN_DIR=${destroot}${prefix}/share/man

destroot.keepdirs \
    ${destroot}${confdir} \
    ${destroot}${logdir} \
    ${destroot}${mnesiadbdir}

add_users ${serveruser} group=${servergroup} realname=RabbitMQ\ Server home=${serverhome}

post-destroot {
    # This is a hack: We need to patch the startupitem, so generate it manually
    # here, then define the function to empty to avoid overwriting it later
    package require portstartupitem 1.0
    portstartupitem::startupitem_create
    proc portstartupitem::startupitem_create {args} {}
    system -W "${destroot}${plistloc}" "patch <${filespath}/patch-org.macports.rabbitmq-server.plist.diff"


    xinstall -d -m 775 ${destroot}${confdir}
    xinstall -d -g [existsgroup ${servergroup}] -m 775 ${destroot}${logdir}
    xinstall -d -g [existsgroup ${servergroup}] -m 775 ${destroot}${serverhome}
    xinstall -d -g [existsgroup ${servergroup}] -m 775 ${destroot}${mnesiadbdir}

    reinplace -E "s:^SYS_PREFIX=\${RABBITMQ_HOME}$:SYS_PREFIX=${prefix}:" \
        ${realsbin}/rabbitmq-defaults
    reinplace -E "s:^SYS_PREFIX=$:SYS_PREFIX=${prefix}:" \
        ${realsbin}/rabbitmq-defaults

    xinstall -m 755 ${filespath}/rabbitmq-script-wrapper \
                ${wrappersbin}/rabbitmq-server
    reinplace -E "s:@MACPORTS_PREFIX@:${prefix}:g" \
                ${wrappersbin}/rabbitmq-server
    reinplace -E "s:/usr/lib/rabbitmq/bin/:${prefix}/lib/rabbitmq/bin/:g" \
                ${wrappersbin}/rabbitmq-server
    reinplace -E "s:/var/lib/rabbitmq:${prefix}/var/lib/rabbitmq:g" \
                ${wrappersbin}/rabbitmq-server

    file copy ${wrappersbin}/rabbitmq-server ${wrappersbin}/rabbitmqctl
    file copy ${wrappersbin}/rabbitmq-server ${wrappersbin}/rabbitmq-plugins
    file attributes ${destroot}${serverhome} -owner ${serveruser} -group ${servergroup}
    file attributes ${destroot}${logdir} -owner ${serveruser} -group ${servergroup}

    xinstall -m 644 -W ${mansrc}/man1 rabbitmq-server.1.gz rabbitmqctl.1.gz rabbitmq-plugins.1.gz \
        ${mandest}/man1/
    xinstall -m 644 -W ${mansrc}/man5 rabbitmq-env.conf.5.gz ${mandest}/man5/
}

startupitem.create  yes
startupitem.init    "PATH=${prefix}/bin:${prefix}/sbin:\$PATH; export PATH"
startupitem.start   "rabbitmq-server 2>&1"
startupitem.stop    "rabbitmqctl stop 2>&1"
startupitem.logfile ${prefix}/var/log/rabbitmq/startupitem.log

livecheck.type      regex
livecheck.url       http://www.rabbitmq.com/releases/rabbitmq-server/current/
livecheck.regex     "${name}-(\\d+(?:\\.\\d+)*)${extract.suffix}"
