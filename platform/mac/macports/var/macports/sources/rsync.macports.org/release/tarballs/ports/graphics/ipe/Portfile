# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 141680 2015-10-26 19:39:46Z khindenburg@macports.org $

PortSystem 1.0
PortGroup               qt4 1.0

name                    ipe
version                 7.1.9
set branch              [join [lrange [split ${version} .] 0 1] .]
categories              graphics
maintainers             gmail.com:m7.thon openmaintainer
description             The Ipe extensible drawing editor
long_description        \
                        Ipe is a drawing editor for creating figures in PDF or \
                        (encapsulated) Postscript format. It supports making small \
                        figures for inclusion into LaTeX-documents as well as making \
                        multi-page PDF presentations that can be shown on-line with \
                        Acrobat Reader.
license                 GPL-3+
homepage                http://ipe.otfried.org
platforms               darwin
master_sites            https://github.com/otfried/ipe/raw/master/releases/${branch}
distname                ${name}-${version}-src
worksrcdir              ${name}-${version}/src

checksums               sha1    ec213ad86393ab2e0de8581a50ce63a09b83186d \
                        rmd160  03d4425b2b7cee4309d363ecc90bb3ddaab48542

depends_lib-append      port:freetype \
                        path:lib/pkgconfig/cairo.pc:cairo \
                        port:lua \
                        path:lib/libjpeg.dylib:jpeg \
                        port:libpng \
                        port:zlib

patchfiles              patch-ipecanvas-ipecanvas_qt.cpp.diff

use_configure           no

variant universal {}

variant qvoronoi description {Add qvoronoi ipelet} {
    depends_lib-append  port:qhull
    build.post_args     IPEQVORONOI=1 QHULL_CFLAGS=-I${prefix}/include/qhull
    destroot.post_args  IPEQVORONOI=1
}

default_variants        +qvoronoi

pre-build {
    build.env           CXXFLAGS="[get_canonical_archflags cxx]" \
                        LDFLAGS="[get_canonical_archflags ld]" \
                        PKG_CONFIG_PATH=\$PKG_CONFIG_PATH:${qt_pkg_config_dir}

    build.args          IPEPREFIX=${prefix} \
                        ZLIB_CFLAGS="`pkg-config --cflags zlib`" \
                        ZLIB_LIBS="`pkg-config --libs zlib`" \
                        JPEG_LIBS="-ljpeg" \
                        PNG_CFLAGS="`pkg-config --cflags libpng`" \
                        PNG_LIBS="`pkg-config --libs libpng`" \
                        FREETYPE_CFLAGS="`pkg-config --cflags freetype2`" \
                        FREETYPE_LIBS="`pkg-config --libs freetype2`" \
                        CAIRO_CFLAGS="`pkg-config --cflags cairo`" \
                        CAIRO_LIBS="`pkg-config --libs cairo`" \
                        LUA_CFLAGS="`pkg-config --cflags lua`" \
                        LUA_LIBS="`pkg-config --libs lua`" \
                        QT_CFLAGS="`pkg-config --cflags QtGui QtCore`" \
                        QT_LIBS="`pkg-config --libs QtGui QtCore`" \
                        MOC=${qt_moc_cmd} \
                        CXX=${configure.cxx}
}

destroot.args-append    IPEPREFIX=${prefix}
use_parallel_build      no

platform macosx {
    depends_build-append port:makeicns
    post-destroot {
        set app Ipe
        xinstall -d ${destroot}${applications_dir}/${app}.app/Contents/MacOS \
            ${destroot}${applications_dir}/${app}.app/Contents/Resources
        xinstall -m 644 ${filespath}/Info.plist.in ${destroot}${applications_dir}/${app}.app/Contents/Info.plist
        reinplace "s|@VERSION@|${version}|g" ${destroot}${applications_dir}/${app}.app/Contents/Info.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${applications_dir}/${app}.app/Contents/Info.plist
        ln -s ${prefix}/bin/ipe ${destroot}${applications_dir}/${app}.app/Contents/MacOS/${app}
        system "${prefix}/bin/makeicns -in ${worksrcpath}/ipe/icons/ipe.png -out ${destroot}${applications_dir}/${app}.app/Contents/Resources/${name}.icns"
    }
}

livecheck.regex         "/${name}-(\\d+(?:\\.\\d+)*)-src"
