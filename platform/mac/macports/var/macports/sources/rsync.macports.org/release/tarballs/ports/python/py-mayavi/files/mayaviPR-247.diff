diff --git a/mayavi/tests/test_glyph.py b/mayavi/tests/test_glyph.py
index 5f15cea..50e5177 100644
--- a/mayavi/tests/test_glyph.py
+++ b/mayavi/tests/test_glyph.py
@@ -140,10 +140,6 @@ def test_glyph(self):
     def test_mask_input_points_with_random_mode(self):
         """Test if masking input points works with random mode.
            Tests Issue #165"""
-        s = self.scene
-        src = s.children[0]
-        g = src.children[0].children[1]
-        g.glyph.mask_input_points = True
         self.check(mask=True, mask_random_mode=True)
 
     def test_mask_input_points_without_random_mode(self):
diff --git a/tvtk/common.py b/tvtk/common.py
index 0c82372..fb04270 100644
--- a/tvtk/common.py
+++ b/tvtk/common.py
@@ -47,8 +47,8 @@ def get_tvtk_name(vtk_name):
 def is_old_pipeline():
     return vtk_major_version < 6
 
-def is_version_62():
-    return vtk_major_version == 6 and vtk_minor_version == 2
+def is_version_62_or_later():
+    return vtk_major_version == 6 and vtk_minor_version > 1
 
 def is_version_58():
     return vtk_major_version == 5 and vtk_minor_version == 8
diff --git a/tvtk/tests/test_vtk_parser.py b/tvtk/tests/test_vtk_parser.py
index 28a8c4d..27537dd 100644
--- a/tvtk/tests/test_vtk_parser.py
+++ b/tvtk/tests/test_vtk_parser.py
@@ -94,10 +94,10 @@ def test_parse(self):
                'DiffuseColor': ((1.0, 1.0, 1.0), None),
                'EdgeColor': ((1.0, 1.0, 1.0), None),
                'LineStipplePattern': (65535, None),
-               'LineStippleRepeatFactor': (1, (1, vtk.VTK_LARGE_INTEGER)),
-               'LineWidth': (1.0, (0.0, vtk.VTK_LARGE_FLOAT)),
+               'LineStippleRepeatFactor': (1, (1, vtk.VTK_INT_MAX)),
+               'LineWidth': (1.0, (0.0, vtk.VTK_FLOAT_MAX)),
                'Opacity': (1.0, (0.0, 1.0)),
-               'PointSize': (1.0, (0.0, vtk.VTK_LARGE_FLOAT)),
+               'PointSize': (1.0, (0.0, vtk.VTK_FLOAT_MAX)),
                'ReferenceCount': (1, None),
                'Specular': (0.0, (0.0, 1.0)),
                'SpecularColor': ((1.0, 1.0, 1.0), None),
@@ -140,7 +140,7 @@ def test_parse(self):
                 res = ['AddShaderVariable', 'BackfaceRender', 'DeepCopy',
                        'ReleaseGraphicsResources', 'RemoveAllTextures', 
                        'RemoveTexture', 'Render']
-                if vtk_minor_version == 2:
+                if vtk_minor_version > 1:
                     res.append('VTKTextureUnit')
             else:
                 res = ['AddShaderVariable', 'BackfaceRender', 'DeepCopy',
diff --git a/tvtk/vtk_parser.py b/tvtk/vtk_parser.py
index 0ffec78..8800f07 100644
--- a/tvtk/vtk_parser.py
+++ b/tvtk/vtk_parser.py
@@ -12,7 +12,7 @@
 # Local imports (these are relative imports for a good reason).
 import class_tree
 import vtk_module as vtk
-from common import is_version_62
+from common import is_version_62_or_later
 
 class VTKMethodParser:
     """This class provides useful methods for parsing methods of a VTK
@@ -301,7 +301,7 @@ def get_method_signature(self, method):
 
         """
         # VTK 6.2 false built in funcs/methods are ignored
-        if is_version_62():
+        if is_version_62_or_later():
             built_in_func = isinstance(method, types.BuiltinFunctionType)
             built_in_meth = isinstance(method, types.BuiltinMethodType)
             if not (built_in_func or built_in_meth):
diff --git a/tvtk/wrapper_gen.py b/tvtk/wrapper_gen.py
index 277ed1d..3506135 100644
--- a/tvtk/wrapper_gen.py
+++ b/tvtk/wrapper_gen.py
@@ -16,7 +16,7 @@
 
 # Local imports (these are relative imports because the package is not
 # installed when these modules are imported).
-from common import get_tvtk_name, camel2enthought, is_version_62, is_version_58
+from common import get_tvtk_name, camel2enthought, is_version_58
 import vtk_parser
 import indenter
 import special_gen
