--- setup.py.orig	2015-10-01 18:27:21.000000000 +0300
+++ setup.py	2015-10-04 23:38:00.000000000 +0300
@@ -201,44 +201,8 @@
                 "/usr/lib", "python%s" % sys.version[:3], "config"))
 
         elif sys.platform == "darwin":
-            # attempt to make sure we pick freetype2 over other versions
-            _add_directory(include_dirs, "/sw/include/freetype2")
-            _add_directory(include_dirs, "/sw/lib/freetype2/include")
-            # fink installation directories
-            _add_directory(library_dirs, "/sw/lib")
-            _add_directory(include_dirs, "/sw/include")
-            # darwin ports installation directories
-            _add_directory(library_dirs, "/opt/local/lib")
-            _add_directory(include_dirs, "/opt/local/include")
-
-            # if Homebrew is installed, use its lib and include directories
-            import subprocess
-            try:
-                prefix = subprocess.check_output(
-                    ['brew', '--prefix']
-                ).strip().decode('latin1')
-            except:
-                # Homebrew not installed
-                prefix = None
-
-            ft_prefix = None
-
-            if prefix:
-                # add Homebrew's include and lib directories
-                _add_directory(library_dirs, os.path.join(prefix, 'lib'))
-                _add_directory(include_dirs, os.path.join(prefix, 'include'))
-                ft_prefix = os.path.join(prefix, 'opt', 'freetype')
-
-            if ft_prefix and os.path.isdir(ft_prefix):
-                # freetype might not be linked into Homebrew's prefix
-                _add_directory(library_dirs, os.path.join(ft_prefix, 'lib'))
-                _add_directory(
-                    include_dirs, os.path.join(ft_prefix, 'include'))
-            else:
-                # fall back to freetype from XQuartz if
-                # Homebrew's freetype is missing
-                _add_directory(library_dirs, "/usr/X11/lib")
-                _add_directory(include_dirs, "/usr/X11/include")
+            _add_directory(library_dirs, "@prefix@/lib")
+            _add_directory(include_dirs, "@prefix@/include")
 
         elif sys.platform.startswith("linux"):
             arch_tp = (plat.processor(), plat.architecture()[0])
@@ -341,21 +305,6 @@
             else:
                 TCL_ROOT = None
 
-        # add standard directories
-
-        # look for tcl specific subdirectory (e.g debian)
-        if _tkinter:
-            tcl_dir = "/usr/include/tcl" + TCL_VERSION
-            if os.path.isfile(os.path.join(tcl_dir, "tk.h")):
-                _add_directory(include_dirs, tcl_dir)
-
-        # standard locations
-        _add_directory(library_dirs, "/usr/local/lib")
-        _add_directory(include_dirs, "/usr/local/include")
-
-        _add_directory(library_dirs, "/usr/lib")
-        _add_directory(include_dirs, "/usr/include")
-
         # on Windows, look for the OpenJPEG libraries in the location that
         # the official installer puts them
         if sys.platform == "win32":
@@ -580,32 +529,9 @@
                 "PIL._webp", ["_webp.c"], libraries=libs, define_macros=defs))
 
         if feature.tcl and feature.tk:
-            if sys.platform == "darwin":
-                # locate Tcl/Tk frameworks
-                frameworks = []
-                framework_roots = [
-                    "/Library/Frameworks",
-                    "/System/Library/Frameworks"]
-                for root in framework_roots:
-                    root_tcl = os.path.join(root, "Tcl.framework")
-                    root_tk = os.path.join(root, "Tk.framework")
-                    if (os.path.exists(root_tcl) and os.path.exists(root_tk)):
-                        print("--- using frameworks at %s" % root)
-                        frameworks = ["-framework", "Tcl", "-framework", "Tk"]
-                        dir = os.path.join(root_tcl, "Headers")
-                        _add_directory(self.compiler.include_dirs, dir, 0)
-                        dir = os.path.join(root_tk, "Headers")
-                        _add_directory(self.compiler.include_dirs, dir, 1)
-                        break
-                if frameworks:
-                    exts.append(Extension(
-                        "PIL._imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
-                        extra_compile_args=frameworks,
-                        extra_link_args=frameworks))
-            else:
-                exts.append(Extension(
-                    "PIL._imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
-                    libraries=[feature.tcl, feature.tk]))
+            exts.append(Extension(
+                "PIL._imagingtk", ["_imagingtk.c", "Tk/tkImaging.c"],
+                libraries=[feature.tcl, feature.tk]))
 
         if os.path.isfile("_imagingmath.c"):
             exts.append(Extension("PIL._imagingmath", ["_imagingmath.c"]))
