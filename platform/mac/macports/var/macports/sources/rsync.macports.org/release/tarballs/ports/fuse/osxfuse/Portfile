# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 139664 2015-08-24 02:58:34Z dports@macports.org $

PortSystem          1.0

name                osxfuse
version             2.8.0
set branch          [join [lrange [split ${version} .] 0 1] .]
categories          fuse devel
platforms           macosx
license             BSD APSL
maintainers         dports openmaintainer

description         A FUSE-Compliant File System Implementation Mechanism \
                    for Mac OS X
long_description    FUSE for OS X implements a mechanism that makes it possible to implement \
                    a fully functional file system in a user-space program on Mac OS X. It \
                    aims to be API-compliant with the FUSE (File-system in USErspace) \
                    mechanism that originated on Linux.  Therefore, many existing FUSE file \
                    systems become readily usable on Mac OS X. This port provides the \
                    user-space library and header files for building filesystems.

homepage            http://osxfuse.github.io/

livecheck.type      regex
livecheck.url       ${homepage}
livecheck.regex     "[quotemeta [string toupper ${name}]] (\\d+(?:\\.\\d+)*)"

# Use the published signed kext for OS 10.9 (Darwin 13) and later.
# Don't even fetch and extract the dmg unnecessarily, since the commands don't
# work on some earlier OS versions.
if {${os.major} >= 13} {
    set use_signed_kext    yes
} else {
    set use_signed_kext    no
}

# We will build user-space components for the specified arch, and
# kernel modules for the kernel arch.
set kernel_arch [exec uname -m]
# If building for different kernel arch than our buildslaves use, force a build
# from source. The binary package IDs don't encode the kernel arch.
if {${kernel_arch} ne "x86_64"} {
    archive_sites
}

distfiles
set mp.dist {
    osxfuse     6a1e779
    kext        c68d9ed
    framework   2ab904a
    prefpane    65d186f
    fuse        98b9960
    support     d7d7fd5
}

depends_build       port:autoconf \
                    port:automake \
                    port:libtool

set mp.osxfuse_rev  [lindex ${mp.dist} [expr [lsearch ${mp.dist} osxfuse] + 1]]
worksrcdir          osxfuse-osxfuse-${mp.osxfuse_rev}

foreach { mp.comp mp.rev } ${mp.dist} {
    set f ${mp.comp}-${mp.rev}.tar.gz
    master_sites-append https://github.com/osxfuse/${mp.comp}/tarball/${mp.rev}/:${mp.comp}
    distfiles-append    ${f}:${mp.comp}
}

if { $use_signed_kext } {
    master_sites-append sourceforge
    distfiles-append ${name}-${version}.dmg
}

checksums           osxfuse-6a1e779.tar.gz \
                    rmd160  37a7afe9ec30c91d6ca39c1cad00b5f3f504522c \
                    sha256  b39f25314bc52f709760bd6df24a056eaa8bde9ebf2e5d3a3122f6ba34077945 \
                    kext-c68d9ed.tar.gz \
                    rmd160  629a66af4e1ddb2c9474c55278f3bd8bd2b7e921 \
                    sha256  2aaa8b7d7f4369c36d7345f149d2e5fd12c54451c667d1667ecc9465570c5571 \
                    framework-2ab904a.tar.gz \
                    rmd160  af79296880d18d8f8a27803e348ff6429280f0e7 \
                    sha256  1591c26d0d01311007105ab3789d43abc6e824aaee681aef8b601413dafea65e \
                    prefpane-65d186f.tar.gz \
                    rmd160  0a1335dba4b2f5fb773a6094a9a2b4b105c37f25 \
                    sha256  e4bba8c358105ab55578eb032f38303277665a03f4e2fa7f2fa3e2405fbc9296 \
                    fuse-98b9960.tar.gz \
                    rmd160  589cbe0c819caded56dc4be64727580e1400fd9e \
                    sha256  f60205e19c2971228b78d180dc65cda2a6271a567229acdeb19567fcbcebb641 \
                    support-d7d7fd5.tar.gz \
                    rmd160  4cbc9e2ef88aacb7d334cd3f5bd5519f923914b9 \
                    sha256  66cf686e50d603341ce4ce433f61b9babc7b5a30717eeef570972a23b379dbde \
                    osxfuse-2.8.0.dmg \
                    rmd160  6c42e590169dc1b4a70ab44fa37073e21fac843f \
                    sha256  ad339ffd6592c3808f63ffc5701993cc7209d29baa5cda1828ea93f6470bb273

# extract phase will just extract the dmg; post-extract will expand
# the tarballs
if { $use_signed_kext } {
    use_dmg yes
    extract.only ${name}-${version}.dmg
}

post-extract {
    # Extract the pkg and the appropriate payload from the binary dmg
    if { $use_signed_kext } {
        system -W ${workpath}/${name}-${version} "pkgutil --expand 'Install OSXFUSE ${branch}.pkg' ${workpath}/pkg"
        system -W ${workpath}/pkg/10.9/OSXFUSECore.pkg "gzip -dc Payload | cpio -id"
    }

    # Extract the source tarballs
    foreach { mp.comp mp.rev } ${mp.dist} {
        if { $use_signed_kext } {
            system -W ${workpath} "tar -xvf ${distpath}/${mp.comp}-${mp.rev}.tar.gz"
        }
        if {${mp.comp} ne "osxfuse"} {
            # Replace existing empty directory if it exists
            file delete ${workpath}/${worksrcdir}/${mp.comp}
            move ${workpath}/osxfuse-${mp.comp}-${mp.rev} ${workpath}/${worksrcdir}/${mp.comp}
        }
    }
}

patchfiles          patch-buildsystem.diff \
                    patch-kext-location.diff

post-patch {
    reinplace "s,@@TMP@@,${workpath}/.tmp,g" ${worksrcpath}/build.sh

    # Only build the archs we want, not the hardcoded universal archs
    reinplace -E "s,@@ARCHS@@,[get_canonical_archs],g" ${worksrcpath}/build.sh

    # Inject the destroot path as the buildsystem tries to write to the prefix directly
    reinplace -E "s,@@DESTROOT@@,${destroot},g" ${worksrcpath}/build.sh

    # Correct the location of the kext
    reinplace -E "s,@@PREFIX@@,${prefix},g" ${worksrcpath}/kext/common/fuse_param.h
}

use_configure   no

build.cmd       ./build.sh
# Yes, they really named this target homebrew
build.target    -t homebrew
build.args      -f ${prefix}

# The build step already does everything
destroot {}

# Move filesystem bundle into place
post-destroot {
    # Set proper permissions
    fs-traverse f ${destroot}${prefix}/Library {
        file attributes $f -owner root -group wheel
    }
    # Enable setuid on helper binary
    file attributes ${destroot}${prefix}/Library/Filesystems/osxfusefs.fs/Support/load_osxfusefs -permissions 04755
}


# On Mavericks and Yosemite, replace the kext we just built with the
# one from the binary distribution. This works around OS X's
# unwillingness to load an unsigned kext (and our inability to sign
# kexts). See #45521.
#
# Unlike newer versions, Mavericks does not require the kext to be
# signed, but will display a warning if it's unsigned -- so use the
# signed binary instead here too.
if { $use_signed_kext } {
    post-destroot {
        delete ${destroot}${prefix}/Library/Filesystems/osxfusefs.fs/Support/osxfusefs.kext \
            ${destroot}${prefix}/Library/Filesystems/osxfusefs.fs/Support/osxfusefs.kext.dSYM
        
        file copy ${workpath}/pkg/10.9/OSXFUSECore.pkg/Library/Filesystems/osxfusefs.fs/Support/osxfusefs.kext \
            ${destroot}${prefix}/Library/Filesystems/osxfusefs.fs/Support
    }
}

destroot.violate_mtree yes

notes {
    When upgrading, unmount all FUSE filesystems and then unload the kernel extension.
    Unloading can be done via: sudo kextunload -b com.github.osxfuse.filesystems.osxfusefs
    Alternatively (or if this fails), just reboot your computer now.
}

# Could probably be supported by setting ARCHS correctly above
universal_variant no
