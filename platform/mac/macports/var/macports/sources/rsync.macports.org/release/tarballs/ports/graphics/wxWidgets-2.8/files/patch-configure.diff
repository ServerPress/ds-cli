--- configure.orig
+++ configure
@@ -16169,7 +16169,7 @@ See \`config.log' for more details." >&2;}
 echo "$as_me: WARNING: Please use --with-macosx-sdk=PATH and --enable-universal_binary without an argument" >&2;}
             fi
         fi
-                OSX_UNIV_OPTS="-arch ppc -arch i386"
+                OSX_UNIV_OPTS="@@ARCHS@@"
         CXXFLAGS="$OSX_UNIV_OPTS $CXXFLAGS"
         CFLAGS="$OSX_UNIV_OPTS $CFLAGS"
         OBJCXXFLAGS="$OSX_UNIV_OPTS $OBJCXXFLAGS"
@@ -24932,44 +24932,7 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu
 
 
 
-SEARCH_INCLUDE="\
-    /usr/local/include        \
-    /usr/local/X11/include    \
-    /usr/local/include/X11    \
-    /usr/local/X11R6/include  \
-    /usr/local/include/X11R6  \
-                              \
-    /usr/Motif-2.1/include    \
-    /usr/Motif-1.2/include    \
-    /usr/include/Motif1.2     \
-                              \
-    /usr/dt/include           \
-    /usr/openwin/include      \
-                              \
-    /usr/include/Xm           \
-                              \
-    /usr/X11R6/include        \
-    /usr/X11R6.4/include      \
-                              \
-    /usr/include/X11R6        \
-                              \
-    /usr/X11/include          \
-    /usr/include/X11          \
-                              \
-    /usr/XFree86/include/X11  \
-    /usr/pkg/include          \
-                              \
-    /usr/local/X1R5/include  \
-    /usr/local/include/X11R5  \
-    /usr/X11R5/include        \
-    /usr/include/X11R5        \
-                              \
-    /usr/local/X11R4/include  \
-    /usr/local/include/X11R4  \
-    /usr/X11R4/include        \
-    /usr/include/X11R4        \
-                              \
-    /usr/openwin/share/include"
+SEARCH_INCLUDE="@@PREFIX@@/include"
 
 echo "$as_me:$LINENO: checking for libraries directory" >&5
 echo $ECHO_N "checking for libraries directory... $ECHO_C" >&6
@@ -28916,7 +28879,7 @@ rm -f conftest.err conftest.$ac_objext \
                                         wx_cv_lib_gtk=none
                 else
                                                             wx_cv_cflags_gtk=$GTK_CFLAGS
-                    wx_cv_libs_gtk=`echo $GTK_LIBS | sed -e 's/ -l[^ ]*cairo[^ ]*//g'`
+                    wx_cv_libs_gtk="$GTK_LIBS"
                 fi
 
 
@@ -33190,7 +33153,7 @@ echo "$as_me: WARNING: wxGLCanvas not implemented for this port, library will be
         OPENGL_LIBS="-framework OpenGL -framework AGL"
     elif test "$wxUSE_MSW" = 1; then
         OPENGL_LIBS="-lopengl32 -lglu32"
-    elif test "$USE_DARWIN" = 1; then
+    elif test "$wxUSE_MAC" = 1; then
         OPENGL_LIBS=""
     else
                         echo "$as_me:$LINENO: checking for OpenGL headers" >&5
@@ -33801,22 +33764,6 @@ rm -f conftest.err conftest.$ac_objext \
       ;;
 
       *-*-darwin* )
-        install_name_tool=`which install_name_tool`
-        if test "$install_name_tool" -a -x "$install_name_tool"; then
-            SAMPLES_RPATH_POSTLINK="\$(wx_top_builddir)/change-install-names \$(LIBDIRNAME) \$(prefix) \$@"
-            cat <<EOF >change-install-names
-#!/bin/sh
-libnames=\`cd \${1} ; ls -1 | grep '\.[0-9][0-9]*\.dylib\$'\`
-inst_cmd="install_name_tool "
-for i in \${libnames} ; do
-    inst_cmd="\${inst_cmd} -change \${2}/lib/\${i} \${1}/\${i}"
-done
-\${inst_cmd} \${3}
-EOF
-            chmod +x change-install-names
-
-            HEADER_PAD_OPTION="-headerpad_max_install_names"
-        fi
       ;;
 
       *-*-cygwin* | *-*-mingw32* )
--- setup.h.in.orig
+++ setup.h.in
@@ -552,7 +552,7 @@
 #define wxUSE_RICHEDIT2 0
 #endif
 
-#if !defined(__WIN32__) && !defined(__APPLE__)
+#if !defined(__WIN32__) && !defined(__WXMAC__)
 #define wxUSE_CAIRO 1
 #else
 #define wxUSE_CAIRO 0
--- src/generic/graphicc.cpp.orig
+++ src/generic/graphicc.cpp
@@ -1474,10 +1474,10 @@ wxGraphicsContext * wxCairoRenderer::CreateContext( const wxMemoryDC& dc)
 
 wxGraphicsContext * wxCairoRenderer::CreateContextFromNativeContext( void * context )
 {
-#if __WXMSW__
+#ifdef __WXMSW__
     return new wxCairoContext(this,(HDC)context);
 #endif
-#if __WXGTK__
+#ifdef __WXGTK__
     return new wxCairoContext(this,(cairo_t*)context);
 #endif
 }
