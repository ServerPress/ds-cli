--- src/impala/matrix.h.orig	2012-01-05 22:25:14.000000000 +1100
+++ src/impala/matrix.h	2012-07-03 21:24:32.000000000 +1000
@@ -789,7 +789,7 @@ enum
 mclv* mclgUnionv
 (  mclx* mx                   /*  mx->dom_rows used as scratch area     */
 ,  const mclv* dom_cols       /*  take union over these columns in mx   */
-,  const mclv* restrict       /*  only consider row entries in restrict */
+,  const mclv* restrictrows       /*  only consider row entries in restrict */
 ,  mcxenum SCRATCH_STATUS     /*  if SCRATCH_READY also left SCRATCH_READY */
 ,  mclv* dst
 )  ;
@@ -810,7 +810,7 @@ mclv* mclgUnionv
 mclv* mclgUnionv2             /*  This one has a const matrix argument, additional scratch */
 (  const mclx* mx
 ,  const mclv* dom_cols
-,  const mclv* restrict
+,  const mclv* restrictrows
 ,  mcxenum SCRATCH_STATUS
 ,  mclv* dst
 ,  mclv* scratch
--- src/impala/matrix.c.orig	2012-01-07 02:26:46.000000000 +1100
+++ src/impala/matrix.c	2012-07-03 21:25:56.000000000 +1000
@@ -1843,18 +1843,18 @@ dim mclxUnaryList
 mclv* mclgUnionv
 (  mclx* mx
 ,  const mclv* coldom
-,  const mclv* restrict
+,  const mclv* restrictrows
 ,  mcxenum scratch_STATUS
 ,  mclv* dst
 )
-   {  return mclgUnionv2(mx, coldom, restrict, scratch_STATUS, dst, mx->dom_rows)
+   {  return mclgUnionv2(mx, coldom, restrictrows, scratch_STATUS, dst, mx->dom_rows)
 ;  }
 
 
 mclv* mclgUnionv2
 (  const mclx* mx
 ,  const mclv* coldom
-,  const mclv* restrict
+,  const mclv* restrictrows
 ,  mcxenum scratch_STATUS
 ,  mclv* dst
 ,  mclv* scratch
@@ -1899,8 +1899,8 @@ mclv* mclgUnionv2
                )
                continue               /* SNH if coldom is subset of mx->dom_cols */
             ;  if
-               (  restrict
-               && 0 > (o_restrict = mclvGetIvpOffset(restrict, idx, o_restrict))
+               (  restrictrows
+               && 0 > (o_restrict = mclvGetIvpOffset(restrictrows, idx, o_restrict))
                )
                continue               /* not found in restriction domain */
 
