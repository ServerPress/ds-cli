# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 136807 2015-05-27 16:41:27Z larryv@macports.org $

PortSystem          1.0

name                zathura
version             0.3.3
categories          office
platforms           darwin
license             zlib
maintainers         gmail.com:starkhalo \
                    openmaintainer
description         Zathura is a highly customizable and functional document viewer.
long_description \
    Zathura is a highly customizable and functional document viewer. It     \
    provides a minimalistic and space saving interface as well as an easy   \
    usage that mainly focuses on keyboard interaction. Zathura uses a plug- \
    in based system for supported document types. Zathura makes it possible \
    to completely view and navigate through different documents without a   \
    mouse. It supports bi-directional SyncTeX, as well as quickmarks, book- \
    marks and automatic document reloading. Almost everything in Zathura is \
    customizable.

homepage            http://pwmt.org/projects/zathura/

master_sites        ${homepage}download/

checksums           rmd160  5752eeb90acbb6182419781a53daa77c10bf6d50 \
                    sha256  3347decfc8d4b918a6bca1d44657c3b97d4afcea3c8c1f162c57198b13e8dce7

depends_build       port:pkgconfig

depends_lib         port:desktop-file-utils \
                    path:lib/libglib-2.0.dylib:glib2 \
                    port:gtk3 \
                    port:intltool \
                    port:sqlite3 \
                    port:libmagic \
                    path:lib/libgirara-gtk3.dylib:girara

use_configure       no

variant universal   {}

build.args          PREFIX=${prefix}
build.env           CC=${configure.cc} \
                    CXX=${configure.cxx} \
                    CPP=${configure.cpp} \
                    CFLAGS="[get_canonical_archflags cc]" \
                    LDFLAGS="[get_canonical_archflags ld]" \
                    VERBOSE=1

eval destroot.env   ${build.env}
eval destroot.args  ${build.args}

post-activate {
    system "${prefix}/bin/update-desktop-database ${prefix}/share/applications"
}

livecheck.type      regex
livecheck.url       ${master_sites}
livecheck.regex     (\\d\\.\\d\\.\\d)
