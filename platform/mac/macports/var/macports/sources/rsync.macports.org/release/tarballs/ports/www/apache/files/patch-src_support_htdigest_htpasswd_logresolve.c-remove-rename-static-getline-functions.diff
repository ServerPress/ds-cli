--- src/support/htdigest.c.old
+++ src/support/htdigest.c
@@ -71,7 +71,7 @@
     while ((line[y++] = line[x++]));
 }
 
-static int getline(char *s, int n, FILE *f)
+static int htdigest_getline(char *s, int n, FILE *f)
 {
     register int i = 0;
 
@@ -158,7 +158,7 @@
 {
     static char line[MAX_STRING_LEN];
 
-    while (!(getline(line, MAX_STRING_LEN, source))) {  
+    while (!(htdigest_getline(line, MAX_STRING_LEN, source))) {  
 	putline(target, line);
     }
 }
@@ -216,7 +216,7 @@
     ap_cpystrn(realm, argv[2], sizeof(realm));
 
     found = 0;
-    while (!(getline(line, MAX_STRING_LEN, f))) {
+    while (!(htdigest_getline(line, MAX_STRING_LEN, f))) {
 	if (found || (line[0] == '#') || (!line[0])) {
 	    putline(tfp, line);
 	    continue;
--- src/support/htpasswd.c.old
+++ src/support/htpasswd.c
@@ -98,7 +98,7 @@
  * Get a line of input from the user, not including any terminating
  * newline.
  */
-static int getline(char *s, int n, FILE *f)
+static int htpasswd_getline(char *s, int n, FILE *f)
 {
     register int i = 0;
 
@@ -547,7 +547,7 @@
 	char scratch[MAX_STRING_LEN];
 
 	fpw = fopen(pwfilename, "r");
-	while (! (getline(line, sizeof(line), fpw))) {
+	while (! (htpasswd_getline(line, sizeof(line), fpw))) {
 	    char *colon;
 
 	    if ((line[0] == '#') || (line[0] == '\0')) {
--- src/support/logresolve.c.old
+++ src/support/logresolve.c
@@ -71,7 +71,7 @@
 #endif /* !MPE && !WIN32*/
 
 static void cgethost(struct in_addr ipnum, char *string, int check);
-static int getline(char *s, int n);
+static int logresolve_getline(char *s, int n);
 static void stats(FILE *output);
 
 
@@ -278,7 +278,7 @@
  * gets a line from stdin
  */
 
-static int getline (char *s, int n)
+static int logresolve_getline (char *s, int n)
 {
     char *cp;
 
@@ -326,7 +326,7 @@
     for (i = 0; i < MAX_ERR + 2; i++)
 	errors[i] = 0;
 
-    while (getline(line, MAXLINE)) {
+    while (logresolve_getline(line, MAXLINE)) {
 	if (line[0] == '\0')
 	    continue;
 	entries++;
