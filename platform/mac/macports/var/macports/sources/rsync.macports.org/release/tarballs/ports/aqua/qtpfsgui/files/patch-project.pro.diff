--- project.pro.orig	2010-11-05 12:17:22.000000000 -0400
+++ project.pro	2010-11-05 12:18:44.000000000 -0400
@@ -1,5 +1,5 @@
 TEMPLATE = app
-CONFIG += release qt thread
+CONFIG += qt thread
 DEFINES += QT_NO_DEBUG_OUTPUT
 
 # Assume openmp-capable g++ (>=4.2)
@@ -192,7 +192,7 @@
 message ( "Detecting exiv2:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-EXIV2IMAGEHPP = /usr/include/exiv2/image.hpp /usr/local/include/exiv2/image.hpp $$(LOCALSOFT)/include/exiv2/image.hpp 
+EXIV2IMAGEHPP = /usr/include/exiv2/image.hpp /usr/local/include/exiv2/image.hpp $${LOCALSOFT}/include/exiv2/image.hpp 
 for(path, EXIV2IMAGEHPP) {
 	exists($$path) {
 		EXIV2PATH = $$dirname(path)
@@ -218,7 +218,7 @@
 message ( "Detecting OpenEXR:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-OPENEXRHEADER = /usr/include/OpenEXR/ImfHeader.h /usr/local/include/OpenEXR/ImfHeader.h /usr/local/include/ilmbase/ImfHeader.h /usr/include/ilmbase/ImfHeader.h $$(LOCALSOFT)/include/OpenEXR/ImfHeader.h 
+OPENEXRHEADER = /usr/include/OpenEXR/ImfHeader.h /usr/local/include/OpenEXR/ImfHeader.h /usr/local/include/ilmbase/ImfHeader.h /usr/include/ilmbase/ImfHeader.h $${LOCALSOFT}/include/OpenEXR/ImfHeader.h 
 for(path, OPENEXRHEADER) {
 	exists($$path) {
 		OPENEXRDIR = $$dirname(path)
@@ -244,7 +244,7 @@
 message ( "Detecting fftw3:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-FFTW3HEADER = /usr/include/fftw3.h /usr/local/include/fftw3.h $$(LOCALSOFT)/include/fftw3.h
+FFTW3HEADER = /usr/include/fftw3.h /usr/local/include/fftw3.h $${LOCALSOFT}/include/fftw3.h
 for(path, FFTW3HEADER) {
 	exists($$path) {
 		FFTW3DIR = $$dirname(path)
@@ -271,7 +271,7 @@
 message ( "Detecting libtiff:" )
 #I think these are the only paths where we have to search for.
 #If your system is more exotic let me know.
-LIBTIFFHEADER = /usr/include/tiffio.h /usr/local/include/tiffio.h $$(LOCALSOFT)/include/tiffio.h
+LIBTIFFHEADER = /usr/include/tiffio.h /usr/local/include/tiffio.h $${LOCALSOFT}/include/tiffio.h
 for(path, LIBTIFFHEADER) {
 	exists($$path) {
 		LIBTIFFDIR = $$dirname(path)
@@ -295,8 +295,12 @@
 
 ############################## required by "make install" ########################################
 isEmpty(PREFIX) {
-        PREFIX = /usr/local
+        error( "PREFIX must be set before executing this script; fatal error, bailing out." )
 }
+isEmpty(LOCALSOFT) {
+        error( "LOCALSOFT must be set before executing this script; fatal error, bailing out." )
+}
+
 isEmpty(I18NDIR) {
 	mac {
 		#I18NDIR=(QCoreApplication::applicationDirPath()+\"/i18n\")
@@ -315,7 +319,11 @@
 	HTMLDIR = $${DOCDIR}
 }
 
-target.path      = $${PREFIX}/bin
+mac {
+	target.path      = $${APPLICATIONS_DIR}
+} else {
+	target.path      = $${PREFIX}/bin
+}
 menu.files       = qtpfsgui.desktop
 menu.path        = $${PREFIX}/share/applications
 icon.files       = images/qtpfsgui.png
@@ -365,37 +373,8 @@
 #TODO we have to complete this.
 LIBS+=-lIlmThread
 
-# Enable universal (requires a universal Qt)? Default = non-universal
-# If you wish to build a Universal Binary please un-comment the following line
-#CONFIG += x86 ppc
-
-# Warn user what type of binary is being built and what the possible implications are
-contains(CONFIG, "x86"):contains(CONFIG, "ppc") {
-	message ("Building an OS X Universal Binary:")
-	message ("Please ensure all dependencies and Qt are also Universal")
-	message ("********************************************************************")
-} else {
-	# Test what architecture we are on (Intel or PPC)
-	# 'arch' returns "i386" on Intel-Tiger is this true on Intel-Leopard?
-	# What does 'arch' return on PPC machines? Presumably "ppc"?
-	MAC_ARCH = $$system(arch)
-	contains(MAC_ARCH, i386) {
-		message ("This is an Intel Mac - Building an Intel specific OS X binary")
-		message ("Please refer to the documentation if you require a Universal Binary")
-		message ("********************************************************************")
-		# Is this next line strictly necessary? gcc should compile for the correct architecture by default.
-		CONFIG += x86
-	} else {
-		message ("This is a PPC Mac - Building a PPC specific OS X binary")
-		message ("Please refer to the documentation if you require a Universal Binary")
-		message ("********************************************************************")
-		# Is this next line strictly necessary? gcc should compile for the correct architecture by default.
-		CONFIG += ppc
-	}
-}
-
 # We like to search the LOCALSOFT/lib explicitly on MacOSX
-LIBS += -L$$(LOCALSOFT)/lib
+LIBS += -L$${LOCALSOFT}/lib
 # Libtiff depends on jpeg, but it is not searched for automatically on MacOSX
 LIBS += -ljpeg
 # Exiv also depend on libexpat and libiconv, so same as above:
@@ -418,7 +397,6 @@
 
 # this is just how my MinGW installation is. You gotta change it if you want to compile it in windows.
 CONFIG += windows
-#CONFIG += debug
 CONFIG += console
 
 #OpenEXR available in win32
