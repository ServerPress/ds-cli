# HG changeset patch
# User Stas Boukarev <stassats@gmail.com>
# Date 1364824768 -14400
# Node ID 8766d27eb4288597be84d85905ae2eb81f2f2a4a
# Parent  6b499774d52ad410a91eb65227bec4ac9803369c
Check bounds of ELT on &more in safe code.

Disable &more optimizations for ELT if safety = 3.

diff -r 6b499774d52a -r 8766d27eb428 src/compiler/srctran.lisp
--- src/compiler/srctran.lisp	Sun Mar 31 21:27:14 2013 +0400
+++ src/compiler/srctran.lisp	Mon Apr 01 17:59:28 2013 +0400
@@ -4152,10 +4152,12 @@
         `(car (nthcdr ,n ,list)))))
 
 (define-source-transform elt (seq n)
-  (multiple-value-bind (context count) (possible-rest-arg-context seq)
-    (if context
-        `(%rest-ref ,n ,seq ,context ,count)
-        (values nil t))))
+  (if (policy *lexenv* (= safety 3))
+      (values nil t)
+      (multiple-value-bind (context count) (possible-rest-arg-context seq)
+        (if context
+            `(%rest-ref ,n ,seq ,context ,count)
+            (values nil t)))))
 
 ;;; CAxR -> %REST-REF
 (defun source-transform-car (list nth)
diff -r 6b499774d52a -r 8766d27eb428 tests/seq.pure.lisp
--- tests/seq.pure.lisp	Sun Mar 31 21:27:14 2013 +0400
+++ tests/seq.pure.lisp	Mon Apr 01 17:59:28 2013 +0400
@@ -370,3 +370,10 @@
                                     (t #'shuffle))
                                   size type)
                          #'< :key #'car))))))))
+
+(with-test (:name &more-elt-index-too-large)
+  (assert (raises-error? (funcall
+                          (compile nil '(lambda (&rest args)
+                                         (declare (optimize safety))
+                                         (elt args 0))))
+                         sb-kernel:index-too-large-error)))
