--- process.c.orig	2012-10-01 00:08:42.000000000 -0400
+++ process.c	2012-09-30 23:15:16.000000000 -0400
@@ -7,6 +7,7 @@
 
 #include <stdio.h>
 #include <math.h>
+#include <string.h>
 
 #include "jgraph.h"
 
@@ -18,8 +19,10 @@
 
 static double Pi;
 
-process_title(g)
-Graph g;
+static void process_label_max_n_mins(Label, float, float);
+static void process_label(Label, Graph, int);
+
+static void process_title(Graph g)
 {
 
   float ytitleloc;
@@ -43,8 +46,7 @@ Graph g;
   process_label(g->title, g, 0);
 }
 
-process_legend(g)
-Graph g;
+static void process_legend(Graph g)
 {
   Legend l;
   int anything;
@@ -208,8 +210,7 @@ Graph g;
   process_label_max_n_mins(l->l, width, height);
 }
 
-float find_reasonable_hash_interval(a) 
-Axis a;
+static float find_reasonable_hash_interval(Axis a) 
 {
   float s, d;
 
@@ -237,8 +238,7 @@ Axis a;
   }
 }
 
-float find_reasonable_hash_start(a)
-Axis a;
+static float find_reasonable_hash_start(Axis a)
 {
   int i;
   
@@ -248,8 +248,7 @@ Axis a;
   return ((float) i) * a->hash_interval;
 }
 
-int find_reasonable_precision(a)
-Axis a;
+static int find_reasonable_precision(Axis a)
 {
   int i, b, b2, done;
   float x, x2, tolerance;
@@ -292,8 +291,7 @@ Axis a;
   return MAX(b, b2);
 }
 
-int find_reasonable_minor_hashes(a)
-Axis a;
+static int find_reasonable_minor_hashes(Axis a)
 {
   float d;  
   int i;
@@ -315,9 +313,7 @@ Axis a;
   }
 }
 
-process_axis1(a, g)
-Axis a;
-Graph g;
+static void process_axis1(Axis a, Graph g)
 {
   float tmp;
   int i;
@@ -385,9 +381,7 @@ Graph g;
   }
 }
 
-process_axis2(a, g)
-Axis a;
-Graph g;
+static void process_axis2(Axis a, Graph g)
 {
   float t1, t2, t3, minor_hashes, hloc, tmp;
   float ymin, ymax, xmin, xmax;
@@ -575,10 +569,7 @@ Graph g;
   process_label (a->label, g, 0);
 }
 
-process_label(l, g, adjust)
-Label l;
-Graph g;
-int adjust;
+void process_label(Label l, Graph g, int adjust)
 {
   float len, height;
   int f, i;
@@ -617,10 +608,7 @@ int adjust;
   process_label_max_n_mins(l, len, height);
 }
    
-process_label_max_n_mins(l, len, height)
-Label l;
-float len;
-float height;
+void process_label_max_n_mins(Label l, float len, float height)
 {
   float xlen, ylen, xheight, yheight;
   float x, y;
@@ -666,8 +654,7 @@ float height;
 
 }
 
-process_strings(g)
-Graph g;
+static void process_strings(Graph g)
 {
   String s;
 
@@ -676,9 +663,7 @@ Graph g;
   }
 }
 
-process_curve(c, g)
-Curve c;
-Graph g;
+static void process_curve(Curve c, Graph g)
 {
   if (c->bezier && (c->npts < 4 || (c->npts % 3 != 1))) {
     error_header();
@@ -704,8 +689,7 @@ Graph g;
   if (c->pparg == FSIG) c->pparg = 0.0;
 }
 
-process_curves(g)
-Graph g;
+static void process_curves(Graph g)
 {
   Curve c;
   for(c = first(g->curves); c != nil(g->curves); c = next(c)) {
@@ -713,8 +697,16 @@ Graph g;
   }
 }
  
-process_extrema(g)  /* This finds all the minval/maxvals for bbox calc */
-Graph g;
+static void process_label_extrema(Label l, Graph g)
+{
+  if (l->label == CNULL) return;
+  g->yminval = MIN(g->yminval, l->ymin);
+  g->ymaxval = MAX(g->ymaxval, l->ymax);
+  g->xminval = MIN(g->xminval, l->xmin);
+  g->xmaxval = MAX(g->xmaxval, l->xmax);
+}
+
+static void process_extrema(Graph g)  /* This finds all the minval/maxvals for bbox calc */
 {
   Curve c;
   String s;
@@ -763,19 +755,7 @@ Graph g;
   }
 }
 
-process_label_extrema(l, g)
-Label l;
-Graph g;
-{
-  if (l->label == CNULL) return;
-  g->yminval = MIN(g->yminval, l->ymin);
-  g->ymaxval = MAX(g->ymaxval, l->ymax);
-  g->xminval = MIN(g->xminval, l->xmin);
-  g->xmaxval = MAX(g->xmaxval, l->xmax);
-}
-
-process_graph(g)
-Graph g;
+static void process_graph(Graph g)
 {
   g->x_translate = intop(g->x_translate);
   g->y_translate = intop(g->y_translate);
@@ -790,8 +770,7 @@ Graph g;
   process_extrema(g);
 }
 
-process_graphs(gs)
-Graphs gs;
+void process_graphs(Graphs gs)
 {
   Graphs the_g;
   Graph g;
