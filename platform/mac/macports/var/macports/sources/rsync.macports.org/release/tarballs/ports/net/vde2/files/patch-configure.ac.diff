--- configure.ac.orig
+++ configure.ac
@@ -119,54 +119,44 @@
 # Check of tuntap device
 AC_ARG_ENABLE([tuntap],
     AS_HELP_STRING([--disable-tuntap],
-      [Disable tuntap compilation]), [:],
-	[case "$build_os" in
-		linux*)
-			AC_CHECK_HEADER([linux/if_tun.h],
-				[AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])],
-				[warn_tuntap=yes])
-			can_make_libvdetap=yes
-			can_make_vdetunctl=yes
-			;;
-		darwin*)
-			# I don't use AC_CHECK_FILES because I need test -e and not test -r
-			for i in /dev/tap0 /Library/Extensions/tap.kext ; do
-				AC_MSG_CHECKING([for $i])
-				if test -e "$i" ; then
+      [Disable tuntap compilation]),
+      [if test $enableval = "yes"; then
+	       case "$build_os" in
+			linux*)
+				AC_CHECK_HEADER([linux/if_tun.h],
+					[AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])],
+					[warn_tuntap=yes])
+				can_make_libvdetap=yes
+				can_make_vdetunctl=yes
+				;;
+			darwin*)
+				# I don't use AC_CHECK_FILES because I need test -e and not test -r
+				AC_MSG_CHECKING([for tap kext])
+				if test -e "@PREFIX@/Library/Extensions/tap.kext" ; then
 					AC_MSG_RESULT([yes])
-					definename="`echo "$i" | tr "a-z*" "A-ZP" | tr -c "0-9A-Z" "_"`"
-					AC_DEFINE_UNQUOTED([HAVE_$definename])
-					eval HAVE_$definename=yes
+					AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])
 				else
 					AC_MSG_RESULT([no])
 					warn_tuntap=yes
 				fi
-			done
-			
-			if test "$HAVE__DEV_TAP0_" ; then
-				AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])
-				if ! test "$HAVE__LIBRARY_EXTENSIONS_TAP_KEXT_" -o "$HAVE__SYSTEM_LIBRARY_EXTENSIONS_TAP_KEXT_" ; then
-					AC_MSG_WARN([/dev/tap0 exists, but the kext cannot be found. Let's hope your
-configuration does work...])
-				fi
-			else
-				warn_tuntap=yes
-				AC_MSG_WARN([You do not have tuntap support. You can get it here:
-http://tuntaposx.sourceforge.net/])
-			fi
-			;;
-		freebsd*)
-			AC_CHECK_HEADER([net/if_tun.h],
-				[AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])],
-				[warn_tuntap=yes])
-			;;
-	esac])
+				
+				;;
+			freebsd*)
+				AC_CHECK_HEADER([net/if_tun.h],
+					[AC_DEFINE([HAVE_TUNTAP], 1, [If defined, tuntap support is compiled in])],
+					[warn_tuntap=yes])
+				;;
+		esac
+	else
+		warn_tuntap=yes
+	fi])
 
+
 # Disable pcap support (pdump)? (depends on libpcap, maybe unwanted)
 AC_ARG_ENABLE([pcap],
 	AS_HELP_STRING([--disable-pcap],
 		[Disable pcap support (pdump plugin)]),
-	[if test $enableval = "no" ; then add_pcap=no ; warn_pcap=no ; fi])
+	[if test $enableval = "no" ; then add_pcap=no ; warn_pcap=yes ; fi])
 
 AC_ARG_ENABLE([kernel-switch],
 	AS_HELP_STRING([--enable-kernel-switch],
