--- common/video/iso-mpeg4/src/vtc_shape_ShapeEncoding.cpp.orig	2005-05-04 13:56:00.000000000 -0600
+++ common/video/iso-mpeg4/src/vtc_shape_ShapeEncoding.cpp	2009-11-19 03:31:37.000000000 -0700
@@ -97,7 +97,7 @@
   recmask = (UChar *)
     malloc(coded_width*coded_height*sizeof(UChar));
   if(outmask == NULL || recmask == NULL ) {
-    errorHandler("Memory allocation failed\n");
+    errorHandler((char*)"Memory allocation failed\n");
   }
   
   memset(recmask, 0, coded_width*coded_height);
@@ -181,7 +181,7 @@
 
   inmask =(UChar *) malloc(sizeof(UChar)*w*h);
   if(inmask == (UChar *)NULL) {
-    errorHandler("Memory allocation failed\n");    
+    errorHandler((char*)"Memory allocation failed\n");    
   }
   /* low low band context */
   for(l=0; l<h; l++) {
@@ -223,7 +223,7 @@
   half_mask = (UChar *) calloc(w*h2, sizeof(UChar));
   cur_mask = (UChar *) calloc(w2*h2, sizeof(UChar));
   if(low_mask==NULL || cur_mask==NULL || half_mask==NULL){
-    errorHandler("memory alloc. error: spa_mask!\n");
+    errorHandler((char*)"memory alloc. error: spa_mask!\n");
   }
  
   for(l=0;l<h;l++){
@@ -249,7 +249,7 @@
 #endif
   /* vertical first */
   if((ret=SynthesizeMaskHalfLevel(outmask, coded_width, coded_height, k, filter, DWT_NONZERO_HIGH, DWT_VERTICAL))!=0) {
-    errorHandler("Error Code=%d\n", ret);
+    errorHandler((char*)"Error Code=%d\n", ret);
   }
   
   for(l=0;l<h2;l++){
@@ -259,7 +259,7 @@
   }
 
   if((ret=SynthesizeMaskHalfLevel(outmask, coded_width, coded_height, k, filter, DWT_NONZERO_HIGH, DWT_HORIZONTAL))!=0) {
-    errorHandler("Error Code=%d\n", ret);
+    errorHandler((char*)"Error Code=%d\n", ret);
   }
   
   for(l=0;l<h2;l++){
