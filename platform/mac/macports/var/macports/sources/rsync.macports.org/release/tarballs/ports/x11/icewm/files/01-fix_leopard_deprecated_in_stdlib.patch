--- src/base.h.orig	2007-10-30 20:13:13.000000000 +0100
+++ src/base.h	2007-10-30 20:13:30.000000000 +0100
@@ -1,11 +1,13 @@
 #ifndef __BASE_H
 #define __BASE_H
 
+/*
 #if ( __GNUC__ == 3 && __GNUC_MINOR__ > 0 ) || __GNUC__ > 3
 #define deprecated __attribute__((deprecated))
 #else
 #define deprecated
 #endif
+*/
 
 /*** Atomar Data Types ********************************************************/
 
@@ -184,7 +186,7 @@
             val = (val + div / 2) / div;
         }
     }
-    
+
     return uname;
 }
 
@@ -193,14 +195,14 @@
 /*
  * Returns the lowest bit set in mask.
  */
-template <class T> 
+template <class T>
 inline unsigned lowbit(T mask) {
 #if defined(CONFIG_X86_ASM) && defined(__i386__) && \
     defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ > 208)
     unsigned bit;
     asm ("bsf %1,%0" : "=r" (bit) : "r" (mask));
 #else
-    unsigned bit(0); 
+    unsigned bit(0);
     while(!(mask & (1 << bit)) && bit < sizeof(mask) * 8) ++bit;
 #endif
 
@@ -210,7 +212,7 @@
 /*
  * Returns the highest bit set in mask.
  */
-template <class T> 
+template <class T>
 inline unsigned highbit(T mask) {
 #if defined(CONFIG_X86_ASM) && defined(__i386__) && \
     defined(__GNUC__) && (__GNUC__ * 100 + __GNUC_MINOR__ > 208)
