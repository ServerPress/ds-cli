--- SConstruct.orig	2015-03-14 06:24:41.000000000 -0500
+++ SConstruct	2015-05-27 01:49:59.000000000 -0500
@@ -522,7 +522,7 @@
             # here; it's a security risk.  At install time we use
             # chrpath to edit this out of RPATH.
             env.Prepend(RPATH=[os.path.realpath(os.curdir)])
-        else:
+        elif env.subst('$PLATFORM') != 'darwin':
             print "chrpath is not available; please build with chrpath=no."
 
     confdefs = ["/* gpsd_config.h.  Generated by scons, do not hand-hack.  */\n"]
@@ -747,16 +747,19 @@
 # ifdef __cplusplus
 extern "C" {
 # endif
-#ifndef clockid_t
+#ifndef CLOCKID_T_DEFINED
 typedef int clockid_t;
+#define CLOCKID_T_DEFINED
 # endif
-/* OS X uses _STRUCT_TIMESPEC, but no clock_gettime */
-#ifndef _STRUCT_TIMESPEC
+/* OS X 10.5 and later use _STRUCT_TIMESPEC; 10.4 uses _TIMESPEC; 10.3 and earlier use _TIMESPEC_DEFINED */
+#if !defined _STRUCT_TIMESPEC && !defined _TIMESPEC && !defined _TIMESPEC_DEFINED
 struct timespec {
     time_t  tv_sec;
     long    tv_nsec;
 };
+#define _STRUCT_TIMESPEC
 #endif
+/* OS X does not have clock_gettime */
 #define CLOCK_REALTIME	0
 int clock_gettime(clockid_t, struct timespec *);
 # ifdef __cplusplus
@@ -922,6 +925,7 @@
         ilib_suffix = '.' + version + shlib_suffix
         shlink_flags += [ '-current_version', '%s' % version,
                           '-compatibility_version', '%s' % version,
+                          '-install_name', '%s/%s/lib%s.%s.dylib' % (env['prefix'], env['libdir'], libname, '%s' % version),
                           '-undefined', 'dynamic_lookup' ]
 
     ilib = env.SharedLibrary(libname,lib_objs,
@@ -1148,17 +1152,8 @@
         basecflags += ' -coverage'
         ldflags += ' -coverage'
         ldshared += ' -coverage'
-    # in case CC/CXX was set to the scan-build wrapper,
-    # ensure that we build the python modules with scan-build, too
-    if env['CC'] is None or env['CC'].find('scan-build') < 0:
-        python_env['CC'] = cc
-    else:
-        python_env['CC'] = ' '.join([env['CC']] + cc.split()[1:])
-    if env['CXX'] is None or env['CXX'].find('scan-build') < 0:
-        python_env['CXX'] = cxx
-    else:
-        python_env['CXX'] = ' '.join([env['CXX']] + cxx.split()[1:])
 
+    ldshared=ldshared.replace(cc, env['CC'])
     ldshared=ldshared.replace('-fPIE', '')
     ldshared=ldshared.replace('-pie', '')
     python_env.Replace(SHLINKFLAGS=[],
@@ -1397,7 +1392,7 @@
 if qt_env:
     binaryinstall.append(LibraryInstall(qt_env, installdir('libdir'), compiled_qgpsmmlib))
 
-if env["shared"] and env["chrpath"]:
+if env["shared"] and env.subst('$PLATFORM') != 'darwin':
     env.AddPostAction(binaryinstall, '$CHRPATH -r "%s" "$TARGET"' \
                       % (installdir('libdir', False), ))
 
