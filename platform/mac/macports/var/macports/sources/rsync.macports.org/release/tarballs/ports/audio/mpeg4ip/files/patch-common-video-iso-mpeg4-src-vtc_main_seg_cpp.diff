--- common/video/iso-mpeg4/src/vtc_main_seg.cpp.orig	2006-04-05 12:27:30.000000000 -0600
+++ common/video/iso-mpeg4/src/vtc_main_seg.cpp	2009-11-19 01:35:42.000000000 -0700
@@ -95,13 +95,13 @@
   inmask = (UChar *)malloc(sizeof(UChar)*seg_size);
 
   if(inmask==NULL)
-    errorHandler("Couldn't allocate memory to image mask\n");
+    errorHandler((char*)"Couldn't allocate memory to image mask\n");
   
   /* Read image */
   if ((status=fread(inmask, sizeof(UChar), seg_size,
 		    infptr))
       != seg_size)
-    errorHandler("Error in reading image file: %s\n",seg_path);
+    errorHandler((char*)"Error in reading image file: %s\n",seg_path);
   fclose(infptr);
   
   MyImage[0].mask = inmask;
@@ -250,7 +250,7 @@
 		       nLevels[col]);
 			
       if (ret!=DWT_OK) 
-	errorHandler("DWT Error code = %d\n", ret);
+	errorHandler((char*)"DWT Error code = %d\n", ret);
       if (usemask) free(inmask[col]);
     }
     else {
@@ -265,7 +265,7 @@
 	       width[col], height[col], origin_x[col], origin_y[col], 0);
     
     if (ret!=DWT_OK) 
-      errorHandler("DWT Error code = %d\n", ret);
+      errorHandler((char*)"DWT Error code = %d\n", ret);
     if(col==0) {
       if(usemask) {  /* do shape quantization */
 	QuantizeShape(outmask[0], width[0], height[0], alphaTH);
@@ -339,7 +339,7 @@
 		       Shape,
 		       nLevels[col]);
       if (ret!=DWT_OK) 
-	errorHandler("DWT Error code = %d\n", ret);
+	errorHandler((char*)"DWT Error code = %d\n", ret);
       if (usemask) free(inmask[col]);
     }
     else {
@@ -354,7 +354,7 @@
 	       width[col], height[col], origin_x[col], origin_y[col], 0);
     
     if (ret!=DWT_OK) 
-      errorHandler("DWT Error code = %d\n", ret);
+      errorHandler((char*)"DWT Error code = %d\n", ret);
     if(col==0) {
       if(usemask) {  /* do shape quantization */
 	QuantizeShape(outmask[0], width[0], height[0], alphaTH);
@@ -452,7 +452,7 @@
     if(col==0) { /* get decoded shape of Y */
       outmask[col] = MyImage[col].mask =(UChar *)malloc(sizeof(UChar)*Width[col]*Height[col]);
       if(outmask[col]==NULL)
-				errorHandler("Couldn't allocate memory to image\n");
+				errorHandler((char*)"Couldn't allocate memory to image\n");
       if (usemask) {
 	/* ShapeDeCoding(outmask[0], Width[0], Height[0]); */
 				ShapeDeCoding(outmask[0], Width[0], Height[0], 
@@ -470,7 +470,7 @@
       if((Width[0] &((1<<wvtDecompLev)-1))!=0 || (Height[0] &((1<<wvtDecompLev)-1))!=0 ) {
 				ret=ExtendMaskBox(outmask[0], &tempmask, Width[0], Height[0], Nx[0], Ny[0], &width[0], &height[0], nLevels[0]);
 				if (ret!=DWT_OK) 
-					errorHandler("ExtendMaskBox: DWT Error code = %d\n", ret);
+					errorHandler((char*)"ExtendMaskBox: DWT Error code = %d\n", ret);
 				free(outmask[0]);
 				outmask[0]=tempmask;
       }
@@ -531,7 +531,7 @@
 			MyImage[col].mask 
 				=(UChar *)malloc(sizeof(UChar)*Width[col]*Height[col]);
 			if (MyImage[col].mask==NULL)
-				errorHandler("Couldn't allocate memory to image\n");
+				errorHandler((char*)"Couldn't allocate memory to image\n");
 			for (i=0; i<Width[col]*Height[col]; i++)
 				MyImage[col].mask[i] = DWT_IN;
 		}
@@ -577,7 +577,7 @@
 			MyImage[col].mask 
 				=(UChar *)malloc(sizeof(UChar)*Width[col]*Height[col]);
 			if (MyImage[col].mask==NULL)
-				errorHandler("Couldn't allocate memory to image\n");
+				errorHandler((char*)"Couldn't allocate memory to image\n");
 			for (i=0; i<Width[col]*Height[col]; i++)
 				MyImage[col].mask[i] = DWT_IN;
 		}
@@ -943,7 +943,7 @@
 						*target_levels=0; /* ??? */
 						break;
 					default:
-						errorHandler("Wrong texture_object_layer_start_code.");
+						errorHandler((char*)"Wrong texture_object_layer_start_code.");
 				}
       }
 			else {
