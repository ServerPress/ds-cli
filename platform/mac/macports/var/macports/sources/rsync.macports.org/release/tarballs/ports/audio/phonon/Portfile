# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id: Portfile 134243 2015-03-20 14:52:09Z michaelld@macports.org $

PortSystem          1.0
PortGroup           qt4 1.0
PortGroup           cmake 1.0

name                phonon
version             4.8.3
revision            1
categories          audio kde kde4
license             {LGPL-2.1 LGPL-3}
maintainers         michaelld openmaintainer
description         Cross Platform Multimedia API used by KDE4
long_description    Phonon is a multimedia, multi-platform sound \
    framework for the application developer.
platforms           darwin
homepage            http://phonon.kde.org
master_sites        kde:stable/${name}/${version}/src
use_xz              yes
distname            phonon-${version}
checksums           rmd160 c035f253eda49635377122423bb72161f97f18d3 \
                    sha256 a1149c961ca1570968d070bbd23671e614aa506f847ca93748960e309f85da16

depends_build-append  port:automoc

# fix use of CMAKE_INSTALL_NAME to be an absolute path

patchfiles-append   patch-cmake_FindPhononInternal.cmake.diff

# fix MODULE names to end in .dylib instead of .so

patchfiles-append   patch-cmake_PhononMacros.cmake.diff

# (1) fix install location of cmake module files;
# patch here and post-patch reinplace.
# (2) fix library compatibility version to be 4.4.0,
# because pretty much every KDE port expects it.

patchfiles-append   patch-CMakeLists.txt.diff

post-patch {
    set rel_mp_qt_cmake_dir [strsed ${qt_cmake_module_dir} "g@${qt_dir}/@@"]
    reinplace "s|@MACPORTS_CMAKE_DIR@|${rel_mp_qt_cmake_dir}|" \
        ${worksrcpath}/CMakeLists.txt
}

# do VPATH (out of source tree) build

cmake.out_of_source yes

# standard args

configure.args-append   \
    ${qt_cmake_defines} \
    -DPHONON_INSTALL_QT_EXTENSIONS_INTO_SYSTEM_QT=TRUE \
    -DWITH_QZeitgeist=OFF

configure.ldflags-append -F${qt_frameworks_dir}

post-destroot {

    # link major library version name

    ln -s libphonon.dylib ${destroot}${prefix}/lib/libphonon.4.dylib
    ln -s libphononexperimental.dylib ${destroot}${prefix}/lib/libphononexperimental.4.dylib

    if {[variant_isset demos]} {
        set demos_dest_dir ${destroot}${prefix}/share/examples/phonon
        xinstall -m 775 -d ${demos_dest_dir}
        copy ${workpath}/build/demos/simpleplayer/simpleplayer ${demos_dest_dir}
        copy ${workpath}/build/demos/metadatareader/metadatareader ${demos_dest_dir}
        copy ${workpath}/build/demos/phota/phota ${demos_dest_dir}
        copy ${workpath}/build/demos/simplecapture/simplecapture ${demos_dest_dir}
    }
}

variant pulseaudio description "Build Phonon with additional support for PulseAudio" {

    depends_lib-append port:pulseaudio
    configure.args-append \
        -DWITH_PulseAudio=ON \
        -DPHONON_PULSESUPPORT=YES \
        -DPULSEAUDIO_INCLUDE_DIR=${prefix}/include \
        -DPULSEAUDIO_LIBRARY=${prefix}/lib/libpulse.dylib \
        -DPULSEAUDIO_MAINLOOP_LIBRARY=${prefix}/lib/libpulse-mainloop-glib.dylib

}

if {![variant_isset pulseaudio]} {
    configure.args-append \
        -DWITH_PulseAudio=OFF \
        -DPHONON_PULSESUPPORT=NO \
        -DPULSEAUDIO_INCLUDE_DIR= \
        -DPULSEAUDIO_LIBRARY= \
        -DPULSEAUDIO_MAINLOOP_LIBRARY=
}

variant demos description "Build Phonon demos" {
    configure.args-append -DPHONON_BUILD_DEMOS=ON
}

if {![variant_isset demos]} {
    configure.args-append -DPHONON_BUILD_DEMOS=OFF
}

livecheck.type   regex
livecheck.url    http://www.gtlib.gatech.edu/pub/kde/stable/${name}/
livecheck.regex  "\(\\d+(?:\\.\\d+)*)\/"
