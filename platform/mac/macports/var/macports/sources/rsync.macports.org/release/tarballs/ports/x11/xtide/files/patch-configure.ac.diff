--- configure.ac.orig	2013-07-19 21:31:17.000000000 -0500
+++ configure.ac	2013-11-28 20:14:11.000000000 -0600
@@ -23,14 +23,17 @@
 AC_SUBST([ADDED_CXXFLAGS])
 
 # Extended initializer lists were added in 4.4.
+# Clang fraudulently identifies itself as an old GCC.
 AC_MSG_CHECKING([if using a version of GCC older than 4.4])
 AC_PREPROC_IFELSE(
   [AC_LANG_SOURCE([[
+#ifndef __clang__
 #ifdef __GNUC__
 #if (__GNUC__ * 100 + __GNUC_MINOR__) < 404
 #FAIL
 #endif
 #endif
+#endif
   ]])],
   [
     AC_MSG_RESULT(no)
@@ -107,7 +110,7 @@
   [
     AC_MSG_RESULT(no)
     AC_MSG_CHECKING([if it helps to add -std=gnu++0x to CXXFLAGS])
-    CXXFLAGS="-std=gnu++0x ${CXXFLAGS}"
+    CXXFLAGS="-std=gnu++0x ${SAVED_CXXFLAGS}"
     AC_COMPILE_IFELSE(
       [AC_LANG_PROGRAM([[#include <vector>]],
 		       [[std::vector<int> test = {1}]])],
@@ -117,8 +120,22 @@
       ],
       [
 	AC_MSG_RESULT(no)
-        AC_DEFINE(NO_INITIALIZER_LISTS)
-        SKIP_COMPLICATED=1
+        # Clang needs -std=c++11 instead
+	AC_MSG_CHECKING([if it helps to add -std=c++11 to CXXFLAGS])
+	CXXFLAGS="-std=c++11 ${SAVED_CXXFLAGS}"
+	AC_COMPILE_IFELSE(
+	  [AC_LANG_PROGRAM([[#include <vector>]],
+			   [[std::vector<int> test = {1}]])],
+	  [
+	    AC_MSG_RESULT(yes)
+	    ADDED_CXXFLAGS="${ADDED_CXXFLAGS} -std=c++11"
+	  ],
+	  [
+	    AC_MSG_RESULT(no)
+	    AC_DEFINE(NO_INITIALIZER_LISTS)
+	    SKIP_COMPLICATED=1
+	  ]
+	)
       ]
     )
   ]
