https://sourceforge.net/tracker/?func=detail&aid=3164121&group_id=785&atid=100785
--- fract4d/fc.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fract4d/fc.py	2011-01-22 19:55:59.000000000 -0600
@@ -146,7 +146,7 @@
         self.cache = cache.T()
         self.cache_dir = os.path.expanduser("~/.gnofract4d-cache/")
         self.init_cache()
-        if 'win' not in sys.platform:
+        if 'win32' not in sys.platform:
             self.compiler_name = "gcc"
             self.flags = "-fPIC -DPIC -g -O3 -shared"
             self.output_flag = "-o "
@@ -411,7 +411,7 @@
         
         if cfile == None:
             cfile = self.cache.makefilename(hash,".c")
-            if 'win' in sys.platform:
+            if 'win32' in sys.platform:
                 objfile = self.cache.makefilename(hash, ".obj")
 
         open(cfile,"w").write(self.c_code)
@@ -419,7 +419,7 @@
         # -march=i686 for 10% speed gain
         cmd = "%s \"%s\" %s %s\"%s\"" % \
               (self.compiler_name, cfile, self.flags, self.output_flag, outputfile)
-        if 'win' in sys.platform:
+        if 'win32' in sys.platform:
             cmd += " /Fo\"%s\"" % objfile
         cmd += " %s" % self.libs
         #print "cmd: %s" % cmd
--- fract4d/fractconfig.py.orig	2011-01-22 19:46:55.000000000 -0600
+++ fract4d/fractconfig.py	2011-01-22 19:55:51.000000000 -0600
@@ -7,7 +7,7 @@
     def __init__(self, file):
         _shared_formula_dir = self.get_data_path("formulas")
         _shared_map_dir = self.get_data_path("maps")
-        if 'win' in sys.platform:
+        if 'win32' in sys.platform:
             comp = 'cl'
         else:
             comp = 'gcc'
@@ -137,7 +137,7 @@
 
     def get_default_compiler_options(self):
         # appears to work for most unixes
-		if 'win' in sys.platform:
+		if 'win32' in sys.platform:
 			return "/Ox /EHsc /Gd /nologo /W3 /LD /MT /TP /DWIN32 /DWINDOWS /D_USE_MATH_DEFINES"
 		else:
 			return "-fPIC -DPIC -D_REENTRANT -O2 -shared -ffast-math"
--- fract4dgui/gtkfractal.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fract4dgui/gtkfractal.py	2011-01-22 19:55:48.000000000 -0600
@@ -52,7 +52,7 @@
     def __init__(self,comp,width,height,total_width=-1,total_height=-1):
         gobject.GObject.__init__(self)
 
-        if 'win' in sys.platform:
+        if 'win32' in sys.platform:
             (self.readfd, self.writefd) = fract4dc.pipe()
         else:
             # This is the line that was screwing Windows up.. changed to be run only on Linux, for Windows, we want to do this in fract4dc..
--- fract4dgui/gtkio.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fract4dgui/gtkio.py	2011-01-22 19:55:45.000000000 -0600
@@ -10,7 +10,7 @@
 
 class gtkio:
 	def read(self, fd, len):
-		if 'win' in sys.platform:
+		if 'win32' in sys.platform:
 			return fract4dc.read(fd, len)
 		else:
 			return os.read(fd, len)
--- fract4dgui/main_window.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fract4dgui/main_window.py	2011-01-22 19:55:43.000000000 -0600
@@ -1447,7 +1447,7 @@
             self.compiler.clear_cache()
         finally:
             gtk.main_quit()
-            if 'win' in sys.platform:
+            if 'win32' in sys.platform:
                 exit(0);
 #            return False
 
--- fract4dgui/utils.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fract4dgui/utils.py	2011-01-22 19:55:39.000000000 -0600
@@ -64,7 +64,7 @@
     except AttributeError:
         gtk.timeout_add(time,callable)
 
-if 'win' not in sys.platform:
+if 'win32' not in sys.platform:
     def input_add(fd,cb):
         try:
             _throwback()
--- fractutils/slave.py.orig	2010-03-27 21:47:10.000000000 -0500
+++ fractutils/slave.py	2011-01-22 19:55:36.000000000 -0600
@@ -3,7 +3,7 @@
 import sys
 import os
 
-if "win" not in sys.platform:
+if "win32" not in sys.platform:
     import fcntl
 else:
     import win32api
--- setup.py.orig	2011-01-22 19:46:55.000000000 -0600
+++ setup.py	2011-01-22 19:55:34.000000000 -0600
@@ -136,7 +136,7 @@
     undef_macros = [ 'NDEBUG']    
     )
 
-if "win" in sys.platform:
+if "win32" in sys.platform:
     warnings = '/W3'
     libs = [ 'pthreadVC2', 'libdl' ]
     osdep = [ '/DWIN32', '/DWINDOWS', '/D_USE_MATH_DEFINES', '/D_CRT_SECURE_NO_WARNINGS', '/EHsc', '/Ox' ]
@@ -271,7 +271,7 @@
     "fract4dcgmp" + so_extension : "fract4d",
     "gmpy" + so_extension: "fract4d"
     }
-if 'win' in sys.platform:
+if 'win32' in sys.platform:
     lib_targets["fract4d_stdlib.lib"] = "fract4d"
 
 def copy_libs(dummy,dirpath,namelist):
@@ -282,6 +282,6 @@
              shutil.copy(name, target)
             
 os.path.walk("build",copy_libs,None)
-if 'win' in sys.platform:
+if 'win32' in sys.platform:
     shutil.copy("fract4d/fract4d_stdlib.pyd", "fract4d_stdlib.pyd")
 
